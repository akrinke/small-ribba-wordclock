%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (Andreas) ()
%%Title: (Wortschablone_250mm_x_500mm.ai)
%%CreationDate: 1/16/2013 10:23 PM
%%Canvassize: 16383
%%BoundingBox: 27 27 681 681
%%HiResBoundingBox: 27.8467 27.8467 680.8145 680.8154
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([Passermarken])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 709.5 354.1602 709.5 354.1602
%AI3_TileBox: 299.8203 68.7305 1117.5 639.9302
%AI3_DocumentPreview: None
%AI5_ArtSize: 1417.3203 708.6602
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -527 747.6602 1 1584 882 26 0 0 48 116 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 128 8
%%BeginData: 12288 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD04A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8FF7DA8FD7EFFA8A8FD7EFFA8A8FD7EFFA8A8FD7EFFA8
%A8FD7EFFA8A9FD7EFFA8A8FD7EFFA8FD7FFFA8A8FD7EFFA8A8FD09FF7EA8
%FD69FF7DFD09FFA8A8FD09FFA8FD69FFA8A8FD09FFA8A8FD7EFFA8A8FD7E
%FFA8A9FD7EFFA8A8FD58FFFD04A8FD22FFA8FD12FFFD04A8FD05FFA8A8A8
%FD05FFA8FFFFA8A8FD05FFA8A884FD06FFA8A8FD05FFA8A8A8AFA8FD05FF
%A8FD09FFA8A8A8FD05FF7DFF7DA8FD05FFA8FFFFA8FD05FFA8A8A8FD11FF
%A8A8FD11FF7DA8A8FD05FFA87D7DA8FD05FFA87DA87DFD05FFA8A87DA8FD
%05FFA87DA8A8FD05FFA87D7DA8A8FD04FFA8A8FD07FF7DA8A8A8FD04FFA8
%A8FFA87DFD04FFA87DA97DA8FD05FF7DA8A8A8FD10FFA8A8FD11FFA8A8A8
%FD06FF7DA8A8FD05FFA87D7DFD07FFA8A8FD06FFA8A8A8FD07FFA8A8FD06
%FFA8A8FD07FFA87DA8A8FD05FF7DFFA8A8FD04FFA8847DA8A8FD05FF7DA8
%A8FD11FFA8A8FD11FF7DA8A8FD07FFA87DA8FD04FFA87D7DA8FD06FFAF7D
%FD07FFA8A87DFD06FFA884FD06FFA8A8FD07FFA8847DA8FD04FFA884FFA8
%7DFD04FFA87DA87DA8FD04FFA8A884A8A8FD10FFA8A8FD11FFFD04A8FD05
%FFA8A87DFD05FFA8A8A87DA8FD05FF7DA8A8FD05FFA8A8A87DFD06FFA8A8
%FD06FFA8A8A8FD06FFA8A8FD07FF7DA87DA8FD04FFFD05A8FD05FF7DFD13
%FFA8A8FD11FFA8A87DA8FD04FFA8A87DA8FD06FFA8FFA8A9FD04FFFD04A8
%FD05FFA87DA8A8FD07FFA8FD07FFA8A8A8FD05FFA8FD08FFA87DA8FD06FF
%A8FFA8FD06FFA8FD13FFA8A9FD7EFFA8A8FD7EFFA8FD7FFFA8A8FD7EFFA8
%A8FD10FFFD05A8FD05FFA8A884FD05FFA8AFFFA8FD05FFA8A8FFA8FD05FF
%FD05A8FFFFFFA8FFFFFFA8FD06FFA9A8FD06FFA8FFFFA8FD05FF7EA8A8A9
%FD04FFFD05A8FD05FFA8A87DFD11FFA8A8FD11FF7DA852A8FD04FFA87DA8
%A8A8FD04FFA87DFF7DFD05FF847DA87DA8FD04FFA8847D7DFD04FFA87DA8
%A884A8FD05FF527DFD06FF7DA8A8A8FD04FFA8A87D7D7DFD05FF7D7D7DFD
%05FFA87D7DA8A8FD10FFA8A8FD12FFA8A8FD06FFA8A8A8FD05FFFD04A8FD
%05FFA87DA87DFD07FF7DFD06FFA87D847DFD05FFA8A87DFD06FF7D7DA8A8
%FD06FFA87DFD07FF7DFD06FFA8A8FD13FFA8A8FD11FF7DA8FD06FFFD04A8
%FD05FFA87DA87DFD05FFA8A87D7DFD06FF7DA9FD06FF7D7D527DFD05FF7E
%7D7D7DFD05FF7DA852A8FD05FFA87DFD08FF84FD06FF7DA8A87DA8FD10FF
%A8A9FD10FFA87D7DA8A8FD05FF7DA8A8FD05FF7DA8FFA8A8FD04FFA8A8FF
%7DFD05FF7D7DA8A8FD05FFA87DA87DFD05FF7DFFA87DA8FD04FFA8FFA8A8
%FD05FF7DA8A8FD06FFA87DA8FD06FF7DA87DA8FD10FFA8A8FD11FFA8A87D
%A9FD04FFA8A87DA8A8FD04FFA8A8FFA8FD05FFA8FFFFA8A8FFFFFFFD04A8
%7DFD05FFA8FFA8FD05FFA8A8FFFFA8FD05FFA8FFA8A8FD04FFFD05A8FD05
%FF7DA87DFD06FFA87DA8A8FD10FFA8FD7FFFA8A8FD7EFFA8A8FD7EFFA8A8
%FD7EFFA8A8FD11FFA8A8FD07FFA8A8A8FD06FFA8A8A8FD06FFA8FFA8FD05
%FFA8FFFFFFA8FD04FFAFA8A8A8FD05FFA8A8A8FD07FFA8FD07FFA8FFA8A8
%FD05FFAFA8A8A8FD05FFA8FD13FFA8A8FD10FFA87DA87DA8FD04FFA8A87D
%7DA8FD04FFAF7DA8A8FD05FFA87D7DA8FD04FFA87DA8FF7DA8FD04FFA8A8
%7DA8FD05FFA87DA8A8FD05FF7DA87DA8FD04FFA8A87DA8A8FD05FF7DA8A8
%FD05FFA8A8FD13FFA8A9FD10FFA8A8FFA9A8FD05FF7DA87DFD05FFA8A8A8
%AFFD06FFA8A8FD06FFFD04A8FD06FFA8A8FD06FFA8A8A8FD06FFFD04A8FD
%06FFA8A9FD06FFA8A8A8FD06FF7DFD13FFA8A8FD10FFA884FF7DA8FD04FF
%A8A852A8FD05FFA87DA8A8FD07FFA8FD07FF7D7DA8FD06FFA87DFD06FFA8
%7DA8A8FD05FF7D7D7DFD07FF7DFD07FF7DA8A8FD05FFA8A8FD13FFA8FD11
%FFA8A8A87DA8FD05FFA8FF7DFD05FFFD05A8FD05FF7DA87DFD06FFA87DFD
%06FFAF7DA8A8FD05FFFD04A8FD05FFA8A8A87DFD06FFA8A8FD06FF7DA8A8
%A8FD05FF7DA8A8FD11FFA8A8FD11FFA8A8A8FD05FFA8A8FFA8A8FD05FFA8
%A884FD05FFFD04A8FD06FFA8A8FD06FFFD04A8FD05FFA87DA8A8FD05FFA8
%FFA8A8A8FD05FFA8FD07FFA8A87DFD06FFA87EA8A8FD10FFA8A8FD7EFFA8
%A8FD7EFFA8A8FD7EFFA8A8FD7EFFA8A9FD10FFFD05A8FD05FFA8A8A8FD05
%FFA8FFFFFFA8FD06FFA8FD07FFA87DA8FD05FFA9FFFFA8FD05FFA8FFFFA8
%A8FD05FFA8A8FD06FFA8A8A8FD06FFA8A8FD07FFA8FFA8FD11FFA8A8FD10
%FFA87D7D7DA8FD04FFA87D7DA8A8FD04FFA87DFF7DA8FD05FF7E52FD06FF
%A87DA87DFD05FF7DFFA87EA8FFFFFFA87DA8FF52FD05FF7DA87DA8FD04FF
%A87D847DA8FD05FFA8A87DFD05FF7E7DA87D84FD10FFA8FD13FF7DFD06FF
%A8A8FD07FFA87DA8A8A8FD05FF7DA8A8FD05FF7DFD08FFFD04A8FD05FF7D
%FFA8A8FD04FFA8A8FFFF7DFD05FFA8A87DFD08FFA8FD05FFA852A852A8FD
%10FFA8A8FD12FF7DA8FD05FF7DA8A87DA8FD04FFA87DA87DFD05FF7EA87D
%84A8FFFFFFA8A8A8FD07FF7DA87DA8FD05FFA87D7DA8FD04FFA87DFFA87E
%A8FFFFFFA8A87D7DFD08FF7DFD05FFA87D597DA8FD10FFA8A8FD12FF7DFD
%07FF7DA87DA8FD04FFFD05A8FD04FF7DA8A87DA8FD04FFFD05A8FD04FFA8
%FFFF7DFD06FF7D7DFD06FFA87DA8A8FD05FF7DFF7DA8FD04FFA8A87DA8FD
%05FFA884FF7DA8FD10FFA8A8FD11FFA8A8FD07FFAF7DA8A8FD05FFA8FFA8
%FD05FFA8FFFFA8A8FD05FFA8A87DFD05FFA8FFA8A8A8FD05FFA8FD07FFA8
%A87DFD06FFA8FFFF84FD05FF7DA8A8FD05FFA8FFFFA9A8FD10FFA8A8FD7E
%FFA8A8FD7EFFA8A9FD7EFFA8A8FD4FFFA8A87DFD2CFFA8FD15FFA8FD0DFF
%A8FD09FFA8A8A8FD05FFA8A8FFA8A8FD04FFA8A8AFA8FD05FFA8FFFFFFA8
%FD04FFA87DA8FD06FFA8FD09FFA8A8A8FD05FFA8A8A8FD11FFA8A8FD10FF
%A87DFF7DA8FD05FFA852FD06FFA87DFD07FF7DA8A87DA8FD05FF52A87DFD
%05FFA8A8597DFD04FFFD04A87DFD05FF7DA87EA8FD04FFA8A8A8FD07FF7D
%A8A8FD05FFA87D7DA8A8FD10FFA8A8FD10FFA8A87DA8A8FD05FF7DA87DFD
%05FFA8A8FD07FFA8A8A87DFD06FFA859FD07FFA87DA8FD05FF7D7D7DA8FD
%04FFA8A8FFFF7DFD05FF7DFD08FFFD04A8FD05FFA8FF7DA8FD10FFA8A8FD
%10FFA87DA87DA8FD04FFA87D7D7DA8FD04FFA8A8FD07FF7DA87E7DA8FD05
%FF7D7D84FD05FFA87DA8FD05FFA87D527D7DFD04FFA87DFFA8A8A8FFFFFF
%A8A8A8FD07FF7DA87DFD05FFA8A87DA8A8FD10FFA8A8FD10FFA8A8FFA8A8
%FD04FFA8A8FF7DA8FD04FFA8A87DA8FD06FF7DA87DFD05FFA87DA87DA8FD
%04FF847DA8A8FD05FF7DA87DA8FD05FFA87DA8A8FD05FF7DA8A8FD06FFA8
%FD08FF7DFD13FFA8A8FD11FFA8FFA8FD05FFA8FFFFFFA8FD05FFA8A87DFD
%05FFA8A87DFD06FFA8A8FFA8A8FD04FFFD04A8FD05FFA8A8FFA8FD05FFA8
%A8A8FD06FFA884A8A8FD05FFA8FD07FFA8A8FD13FFA8A9FD7EFFA8A8FD7E
%FFA8FD7FFFA8A8FD7EFFA8A8FD10FFFD05A8FD04FFA9FD09FFA8A8A8FD06
%FFA8AFA8FD05FFA8FFFFA8FD06FFA8A8A8FD05FFA8A8A8FD07FFA8A8A8FD
%05FFA8A8A8FD06FFFD04A8FD05FFA8FFA8FD11FFA8A8FD11FF7DA852A8FD
%04FF7DA8A8A87DFD04FFA87DA8A8FD05FFA87D7DA8FD04FFA8A87DFF7DFD
%05FF7D7D7DA8FD04FFA8A87D7DA8FD05FF7DA8A8A8FD04FFA87D7DA8A8FD
%05FF7DA8A8FD05FFA87EA8A87DFD10FFA8A8FD12FF84A8FD05FFA87DA87D
%A8FD04FFA8A8A8FD07FFA8A8FD06FF7DA8A8A8FD05FFA87DFD08FFA8A8FD
%06FFA8A8FD07FF7DFF7DFD06FFA8A8A8FD06FF7DA8A8A8FD10FFA8A8FD11
%FF7DA8FD06FFA87D527DA8FD05FF7DA8A8FD07FF84FD06FFA8A87D7DFD07
%FF7DA8A8FD05FFA8A8FD06FFA8A8A8FD06FF7DA87DA8FD05FF7DA8A8FD05
%FFA8A87D7DA8FD10FFA8A9FD10FFA87D7DA8A8FD04FFA87DA87DFD05FFFD
%05A8FD05FF7DA87DFD05FF7DFFA8A8FD05FFA8A8A87DFD05FFA8A87DFD06
%FFFD04A8FD05FF7DA87DA8FD05FF7DA8A8A8FD04FFA8A8FF7DA8FD10FFA8
%A8FD11FFA8A87DA9FD04FFFD04A8FD06FFA8A87DFD05FFFD05A8FD04FFA8
%A8FFA8FD05FFA8A87DFD06FFFD04A8FD05FFA8A87DA8FD04FFA8A87DA8A8
%FD05FFA8A87DA9FD04FFA8A8FFA8A8FD10FFA8FD7FFFA8A8FD7EFFA8A8FD
%7EFFA8A8FD58FFA87DA8A8FD22FFA8A8FD13FFA8A8FD05FFA8A8A8FD06FF
%A8A8FD07FFA8A8A8FD05FFFD04A8FD06FFA8A8FD06FFA8FFA9FD07FFA8A8
%A8FD05FF7DFFA8A8FD04FFA8FFFFFFA8FD05FFA8A884FD11FFA8A8FD11FF
%7DA87DFD05FF84847E7DA8FD04FFA87DA87DFD05FFA87DA8A8FD05FFA87D
%A8A8FD05FF7DA87DA8FD04FFA87DFFA97DFD05FF7E7EA8A8FD04FFA87DFF
%A87DFD04FFA87DFFA8A8FD04FFA87DA8A8A8FD10FFA8A9FD11FF7D52FD06
%FFA8A8FFA8A8FD04FFFD04A8FD06FFA8A8A8FD06FFA9A8FD06FFFD04A8FD
%05FF7DA884A8FD05FFA87DA8A8FD05FFA8FFA8A8FD04FFA87D7DA8A8FD05
%FF7DA8A8FD11FFA8A8FD11FF7D7DA8FD05FF84A8FFA87DFD04FFA87D7DA8
%FD05FFA8A884FD07FFA8A8FD06FFA87D7DFD06FF7D7DA8A8FD05FF84A87D
%A8FD04FFA8A8FFA87DFD04FFA87DA852A8FD05FF7E7DA8A8FD10FFA8FD11
%FFA8A8A87DA8FD04FFA97DA87DFD05FFA8A8A87DA8FD04FFAF7DA8A8FD05
%FFA8A87DA8FD05FFA8A8A87DFD05FF7DFFA8A8FD05FFA8A8FD07FF7DA87D
%FD05FFFD05A8FD05FF7DFD13FFA8A8FD11FFA8FFA8A8FD04FFA8A87DFD06
%FFA8A8FFA8A8FD04FFFD05A8FD04FFA8A8A87DFD05FFA8FFFFA8A8FD04FF
%A8FFFFA8FD05FFA8FD09FF7DA8FD06FFA8FFA8FD06FFA8FD13FFA8A8FD7E
%FFA8A8FD7EFFA8A8FD7EFFA8A8FD7EFFA8A9FD11FFFD04A8FD05FFA8FD08
%FFFD04A8FD05FFA8FFA8FD05FFFD04A8FD05FFA9FFFFA8FD05FFA8FFFFA8
%FD04FFA8FFFFFFA8FD05FFA8A8A8FD06FFFD04A8FD05FFA8A8A8FD11FFA8
%A8FD11FF7DA884FD05FFA87DA8FD07FF7DA8A8AFFD04FF7EA8A87DA8FD04
%FFA87DA8A8FD05FF7DFFA884A8FFFFFFA8847DFF7DFD04FFA87DFFA87DA8
%FFFFFFA8A87DA8A8FD05FF7DA884FD05FFA87D7D7DA8FD10FFA8FD12FFA8
%A8A8FD06FF7DFD07FFA8A8A8A9FD05FFA87DA87DFD05FFA8A8A8FD06FFA8
%FFFFA8FD05FF7DA8A8A8FD05FFFD04A8FD06FFA8FD07FFA8A8A8FD06FFA8
%A87DFD11FFA8A8FD11FF7DA8A8FD05FFA8A8FD08FF7DA87DFD05FFA8A87D
%7DFD05FFA87DA8A8FD05FF7DFFA8A8FD05FF7E7E7D7DFD05FFA87D7DFD07
%FF7DFD07FF7DA8A8FD05FFA8A852A8FD11FFA8A8FD11FF7DA8A8A8FD05FF
%7DA884FD05FFA8A8FD07FFA8A8FF7DFD05FFFD05A8FD04FFA87DA87DFD05
%FF7DFFA8A8FD06FF7DA8FD06FF7DA87EFD06FF7DA8A8A8FD05FFA8A87DFD
%11FFA8A8FD11FF7EA87DA8FD04FFA8A884A8A8FD05FFA8FD07FFA8FFFFA8
%FD05FFA87DA87DFD05FFA8A87DFD05FFA8A8FFFFA8FD06FFA8A8FD06FFFD
%04A8FD05FF7EA87DA8FD04FFA8A8FFA87DFD10FFA8A8FD7EFFA8A8FD7EFF
%A8A9FD7EFFA8A8FD7EFFA8FD11FFA8FFFFFFA8FD0FFFA8A8A8FD05FFA8FF
%A8FD05FFFD05A8FD04FFA8A8AFA8FD05FFFD04A8FD05FFA8FFFFA8FD05FF
%A8FFA8FD06FFA8A8FD07FFA8A8A8FD11FFA8A8FD10FFFD04A87DFD05FFA8
%52FD06FFA87DA87DA8FD04FF7DA8FF7DA8FFFFFFA8A87DA87DFD05FFA8A8
%597DFD05FFA87DA8A8FD05FF7DFFA8A8FD04FFFD04A87DFD05FF7DA87DFD
%05FFA87D7DA8FD11FFA8A8FD10FFA8A87D7DA8FD05FF7DA87DFD05FFA8A8
%FD07FFA87DA87DFD07FFA8FD07FFA87DA8FD05FFA8A8A8FD06FFFD04A8FD
%05FF7DA87DA8FD04FFA9A8A87EA8FD05FF7DA8A8FD11FFA8A8FD10FFA852
%7D52A8FD04FFA87D7D7DA8FD04FFA8A8FD07FFA8A87D7DFD06FFA8A8FD06
%FFA87DA8FD06FFA87DA8A8FD05FF7DA87DA8FD04FFA8A87D7DA8FD05FF7D
%7D7DFD07FFA87DA8FD10FFA8A8FD10FFA87D7D7DA8FD04FFA8A8FF7DA8FD
%04FFA8A87DA8A8FD04FFA8A8FF7DFD06FFA8A8FD06FFA87DA8A8FD05FFFD
%04A8FD05FF7DFFFFA8FD05FF7DFF7DA8FD04FFA8A8A87DA8FD05FFA8A87D
%FD11FFA8A8FD11FFA8FFA8FD05FF7DFFFFFFA8FD05FFA8A87DFD05FFA8A9
%FFA8FD06FFA8A8FD06FF7EFD04A8FD04FFAFA8A87DFD05FF84FFA8A8FD04
%FFA8A8FFA8A8FD05FF84FFA8A8FD04FFA8A884A8FD11FFA8A9FD7EFFA8A8
%FD7EFFA8FD7FFFA8A8FD7EFFA8A8FD11FFA8A8AFFD06FFA8A884FD06FFA8
%A8A8FD06FFA8A8A8FD05FFA8FFFFA8FD06FFA8A8A8FD05FFFD04A8FD05FF
%A8FFFFA8FD05FFA8FFA8FD05FFA8FFFFFFA8FD05FFA8A8A8FD11FFA8A8FD
%11FF7DA87DA8FD04FFA87D7DA8A8FD04FFA87DA8A8FD05FFA87D7DA8A8FF
%FFFFA8A8A8FF7DFD05FF7D7D7DA8FD05FFA87DA87DFD04FFA87DA87D7DFD
%04FFA87DFFA87DFD04FFA87DFF7DA8FD04FFA8A87D7DA8FD10FFA8A8FD10
%FFA8A8A87DFD06FF7DA8A8FD05FFA8A8A8FD06FFA8A8FD07FFFD04A8FD05
%FFA87DFD07FFA8A8A8FD05FFA8FD047DFD05FF7DFFA8A8FD04FFA8A87EA8
%A8FD05FFA8A87DFD11FFA8A8FD11FF7DA87DA8FD06FFA87DA8FD05FF7DA8
%A8FD05FF7EA8FD06FFA9A87DA87DFD07FF7DA8A8FD04FFA87DA8A8FD04FF
%A87D7D7DA8FD04FFA8A8FFA87DFD04FFA87DA87DA8FD04FFA8A859A8FD11
%FFA8A9FD11FF84A8A8A8FD05FF7DA87DFD05FFFD05A8FD04FFAF7DA87DFD
%05FF84FFFF7DFD05FFA8A8A87DFD05FF7DA8FD06FF84A8A8FF7DFD05FF7D
%A87DA8FD04FFA8A8FFA8A8FD04FFA984FF7DA8FD10FFA8A8FD11FF7DA8A8
%FD05FFA8A87DA8FD06FF7EA87DFD06FFA87DA8A8FFFFFFA8A8A8FF7DFD05
%FFA8A87DFD06FFA8A8FD06FFA8A8FFFFA8A8FD05FF7DA8A8FD05FFA8FFA8
%FD05FFA8A8FFA884FD10FFA8FD7FFFA8A8FD7EFFA8A8FD7EFFA8A8FD7EFF
%A8A8FD74FFA8FD09FFA8A8FD09FF7DFD69FFA87DFD09FFA8A9FD7EFFA8A8
%FD7EFFA8FD7FFFA8A8FD7EFFA8A8FD7EFFA8A8FD7EFFA8A8FD7EFFA8A8FD
%7EFFA8FD7FFFA87DFD7EA87D
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Nachzeichnen) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe H\374llen-Zusatzmodul) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe-Zusatzmodul Interaktiv malen) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Angleichungen-Zusatzmodul) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Musterpinsel-Zusatzmodul) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Musterpinsel-Zusatzmodul) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Bildpinsel-Zusatzmodul) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Bildpinsel-Zusatzmodul) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Kalligrafiepinsel-Zusatzmodul) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Spezialpinsel-Zusatzmodul) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Spezialpinsel-Zusatzmodul) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Zusammengesetzte Form) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
6 Bn
%AI5_BeginGradient: (Kupfer radial)
(Kupfer radial) 1 4 Bd
[
0
<
0A0B0B0C0D0D0E0F0F1011111212131414151616171818191A1A1B1C1C1D1E1E1F20202122222324
24252627272829292A2B2B2C2D2D2E2F2F303131323333343536
>
<
242525262728292A2B2C2D2E2F303132333435363738393A3B3C3D3D3E3F40414243444546474849
4A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
>
<
0001010202030404050606070808090A0A0B0C0C0D0E0E0F1010111212131414151616171818191A
1A1B1C1C1D1E1E1F2020212222232424252627272829292A2B2B
>
1 %_Br
<
00010102020303040405060607070808090A0A0B0B0C0C0D0E0E0F0F101111121213131415151616
17181819191A1B1B1C1C1D1E1E1F1F202121222223242425252627272828292A2A2B2B2C2D2D2E2E
2F30303131323333343435363637383839393A3B3B3C3C3D3E3E3F3F404141424343444445464647
474849494A4A4B4C4C4D4E4E4F4F50515152525354545556565757585959
>
<
3636373839393A3B3C3D3D3E3F4041424243444546464748494A4B4B4C4D4E4F5051515253545556
565758595A5B5C5C5D5E5F6061626263646566676868696A6B6C6D6E6E6F70717273747475767778
797A7A7B7C7D7E7F8081818283848586878788898A8B8C8D8E8E8F90919293949595969798999A9B
9C9C9D9E9FA0A1A2A3A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B2B3B4B5
>
<
636465666768696A6B6C6C6D6E6F707172737475767778797A7B7C7C7D7E7F808182838485868788
898A8B8C8D8E8F90919293949596979898999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF
B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7
D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5
>
<
2B2B2C2C2C2C2C2C2C2C2C2D2D2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F2F303030
30303030303131313131313131323232323232323232333333333333333334343434343434343535
3535353535353536363636363636363737373737373737383838383838383839393939393939393A
3A3A3A3A3A3A3A3A3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3D3D3D3D3D3D
>
1 %_Br
<
595A5A5A5A5B5B5B5B5C5C5C5C5D5D5D5D5E5E5E5E5F5F5F5F606060606161616162626262636363
636464646465656565666666666767676768686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D
6D6E
>
<
B5B6B6B7B8B8B9BABABBBCBCBDBEBEBFC0C0C1C2C2C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCECECF
CFD0D1D1D2D3D3D4D5D5D6D7D7D8D9D9DADBDBDCDDDDDEDFDFE0E1E1E2E3E3E4E5E5E6E7E7E8E9E9
EAEB
>
<
F5F5F4F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0EFEFEFEFEEEEEEEDEDEDEDECECECECEBEBEB
EBEAEAEAEAE9E9E9E9E8E8E8E8E7E7E7E7E6E6E6E6E5E5E5E5E4E4E4E4E3E3E3E3E2E2E2E2E1E1E1
E1E0
>
<
3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364
656768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D
8E8F
>
1 %_Br
[
0 0.04 0.14 0 1 51.0204 0.395812 %_BS
%_0 0.04 0.14 0 1 51.0204 0.395812 Bs
0 0.21 0.39 0.17 1 51.0204 30.8989 %_BS
%_0 0.21 0.39 0.17 1 51.0204 30.8989 Bs
0.35 0.71 0.96 0.24 1 50 78.0899 %_BS
%_0.35 0.71 0.96 0.24 1 50 78.0899 Bs
0.43 0.92 0.88 0.56 1 50 100 %_BS
%_0.43 0.92 0.88 0.56 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Linearer Verlauf)
(Linearer Verlauf) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
0 0 0 0 1 50 0 %_BS
%_0 0 0 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Radialverlauf)
(Radialverlauf) 1 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 0 1 50 0 %_BS
%_0 0 0 0 1 50 0 Bs
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Schwarz\774bergang)
(Schwarz\774bergang) 0 2 Bd
[
0
0 %_Br
[
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
0 0 0 1 1 50 0 %_BS
%_0 0 0 1 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Sonnenuntergang in der W\774ste)
(Sonnenuntergang in der W\774ste) 0 6 Bd
[
<
38393A3A3B3C3D3E3E3F404141424344444546474748494A4A4B4C4C4D4E4F4F5051515253535455
555657575859595A5B5B5C5D5D5E5F5F60616162626364646565666767686869696A6B6B6C6C6D6D
6E6E6F6F7070717172727373747475757676777778787879797A7A7B7B7B7C7C7C7D7D7E7E7E7E7F
7F7F80808080818181818282828282
>
<
5758595A5B5C5D5E5F60616263636465666768696A6B6C6D6E6F70717272737475767778797A7A7B
7C7D7E7F808081828384858586878889898A8B8C8D8D8E8F90909192939394959696979899999A9B
9B9C9D9D9E9F9FA0A1A1A2A2A3A4A4A5A5A6A7A7A8A8A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1
B1B2B2B2B3B3B3B4B4B4B4B5B5B5B5
>
<
2E2E2F2F2F3030303131313232323333333434343535353636363737373838383939393A3A3A3A3B
3B3B3C3C3C3D3D3D3D3E3E3E3F3F3F3F404040414141414242424243434344444444454545454646
464646474747474848484849494949494A4A4A4A4A4B4B4B4B4B4C4C4C4C4C4C4D4D4D4D4D4D4D4E
4E4E4E4E4E4E4E4F4F4F4F4F4F4F4F
>
0
1 %_Br
<
1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F303132323334343536373738
>
<
4040414242434444454646474848494A4A4B4C4C4D4E4E4F4F5051515253535455555657
>
<
5251504F4E4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
>
0
1 %_Br
<
050606070808090A0A0B0B0C0D0D0E0F0F101111121213141415151617171818191A1A1B1B1C1C1D
1E1E1F
>
<
2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F
3F3F40
>
<
7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A595857565554
535252
>
0
1 %_Br
<
00000000000000000001010101010101010101010101010101010202020202020202020202020202
02020303030303030303030303030303030304040404040404040404040404040405050505050505
050505
>
<
7A7A79787776757474737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756
5554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
2D2C2B
>
<
9E9E9D9D9D9C9C9B9B9B9A9A99999998989797969696959594949393939292919190908F8F8F8E8E
8D8D8C8C8C8B8B8A8A898988888887878686858584848383838282818180807F7F7E7E7E7D7D7C7C
7B7B7A
>
<
03030202020202020202020202020202020202020202020202020202020202020202020201010101
01010101010101010101010101010101010101010101010101010100000000000000000000000000
000000
>
1 %_Br
<
05050505050505050404040404040404040404030303030303030303030303020202020202020202
020202010101010101010101010101000000000000
>
<
91919190908F8F8F8E8E8E8D8D8C8C8C8B8B8A8A8A89898988888787878686858585848484838382
828281818180807F7F7F7E7E7D7D7D7C7C7C7B7B7A
>
<
DBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4
B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E
>
<
2928282726262524242322222121201F1F1E1D1D1C1B1B1A19191818171616151414131212111110
0F0F0E0D0D0C0B0B0A0A0908080706060504040303
>
1 %_Br
[
0.51 0.71 0.31 0 1 50 100 %_BS
%_0.51 0.71 0.31 0 1 50 100 Bs
0.22 0.34 0.18 0 1 38.4615 71.0424 %_BS
%_0.22 0.34 0.18 0 1 38.4615 71.0424 Bs
0.12 0.25 0.32 0 1 50 53.6679 %_BS
%_0.12 0.25 0.32 0 1 50 53.6679 Bs
0.02 0.17 0.48 0 1 48 38.764 %_BS
%_0.02 0.17 0.48 0 1 48 38.764 Bs
0.000031 0.48 0.62 0.01 1 51.6129 13.1273 %_BS
%_0.000031 0.48 0.62 0.01 1 51.6129 13.1273 Bs
0.02 0.57 0.86 0.16 1 50 0 %_BS
%_0.02 0.57 0.86 0.16 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Weiche schwarze Vignette)
(Weiche schwarze Vignette) 1 3 Bd
[
0.2
0.2
0.2
1
1 %_Br
0.2
0.2
0.2
1
1 %_Br
[
0.2 0.2 0.2 1 1 68.3944 73.8792 %_BS
%_0.2 0.2 0.2 1 1 68.3944 73.8792 Bs
0.2 0.2 0.2 1 1 31.8603 88.7329 %_BS
%_0.2 0.2 0.2 1 1 31.8603 88.7329 Bs
0.2 0.2 0.2 1 1 50 100 %_BS
%_0.2 0.2 0.2 1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Fischmuster)
(Fischmuster) 77.5215 31.4824 155.3037 96.7959 [
%AI3_Tile
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
157.2695 96.7959 m
157.2695 95.71 156.3896 94.8291 155.3027 94.8291 c
154.2168 94.8291 153.3369 95.71 153.3369 96.7959 c
153.3369 97.8828 154.2168 98.7637 155.3027 98.7637 c
156.3896 98.7637 157.2695 97.8828 157.2695 96.7959 c
f
142.3477 90.6719 m
142.3477 96.1738 146.54 100.6943 151.9033 101.2197 C
151.5596 101.2529 151.2109 101.2715 150.8584 101.2715 c
145.0039 101.2715 140.2588 96.5264 140.2588 90.6719 c
140.2588 84.8184 145.0039 80.0723 150.8584 80.0723 c
151.2109 80.0723 151.5596 80.0918 151.9033 80.125 C
146.54 80.6494 142.3477 85.1709 142.3477 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
79.4883 96.7959 m
79.4883 95.71 78.6084 94.8291 77.5215 94.8291 c
76.4355 94.8291 75.5557 95.71 75.5557 96.7959 c
75.5557 97.8828 76.4355 98.7637 77.5215 98.7637 c
78.6084 98.7637 79.4883 97.8828 79.4883 96.7959 c
f
64.5654 90.6719 m
64.5654 96.1738 68.7578 100.6943 74.1211 101.2197 C
73.7773 101.2529 73.4297 101.2715 73.0762 101.2715 c
67.2227 101.2715 62.4766 96.5264 62.4766 90.6719 c
62.4766 84.8184 67.2227 80.0723 73.0762 80.0723 c
73.4297 80.0723 73.7773 80.0918 74.1211 80.125 C
68.7578 80.6494 64.5654 85.1709 64.5654 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
13.874 64.1396 m
13.874 63.0527 14.7539 62.1729 15.8408 62.1729 c
16.9268 62.1729 17.8066 63.0527 17.8066 64.1396 c
17.8066 65.2266 16.9268 66.1064 15.8408 66.1064 c
14.7539 66.1064 13.874 65.2266 13.874 64.1396 c
f
28.7969 58.0156 m
28.7969 63.5176 24.6045 68.0381 19.2412 68.5635 C
19.585 68.5967 19.9326 68.6152 20.2861 68.6152 c
26.1396 68.6152 30.8857 63.8691 30.8857 58.0156 c
30.8857 52.1611 26.1396 47.416 20.2861 47.416 c
19.9326 47.416 19.585 47.4355 19.2412 47.4688 C
24.6045 47.9932 28.7969 52.5146 28.7969 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
91.6563 64.1396 m
91.6563 63.0527 92.5361 62.1729 93.623 62.1729 c
94.709 62.1729 95.5889 63.0527 95.5889 64.1396 c
95.5889 65.2266 94.709 66.1064 93.623 66.1064 c
92.5361 66.1064 91.6563 65.2266 91.6563 64.1396 c
f
106.5781 58.0156 m
106.5781 63.5176 102.3867 68.0381 97.0234 68.5635 C
97.3662 68.5967 97.7148 68.6152 98.0684 68.6152 c
103.9219 68.6152 108.668 63.8691 108.668 58.0156 c
108.668 52.1611 103.9219 47.416 98.0684 47.416 c
97.7148 47.416 97.3662 47.4355 97.0234 47.4688 C
102.3867 47.9932 106.5781 52.5146 106.5781 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
157.2695 31.4824 m
157.2695 30.3965 156.3896 29.5156 155.3027 29.5156 c
154.2168 29.5156 153.3369 30.3965 153.3369 31.4824 c
153.3369 32.5693 154.2168 33.4502 155.3027 33.4502 c
156.3896 33.4502 157.2695 32.5693 157.2695 31.4824 c
f
142.3477 25.3594 m
142.3477 30.8604 146.54 35.3809 151.9033 35.9063 C
151.5596 35.9395 151.2109 35.959 150.8584 35.959 c
145.0039 35.959 140.2588 31.2129 140.2588 25.3594 c
140.2588 19.5049 145.0039 14.7598 150.8584 14.7598 c
151.2109 14.7598 151.5596 14.7783 151.9033 14.8115 C
146.54 15.3359 142.3477 19.8574 142.3477 25.3594 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
79.4883 31.4824 m
79.4883 30.3965 78.6084 29.5156 77.5215 29.5156 c
76.4355 29.5156 75.5557 30.3965 75.5557 31.4824 c
75.5557 32.5693 76.4355 33.4502 77.5215 33.4502 c
78.6084 33.4502 79.4883 32.5693 79.4883 31.4824 c
f
64.5654 25.3594 m
64.5654 30.8604 68.7578 35.3809 74.1211 35.9063 C
73.7773 35.9395 73.4297 35.959 73.0762 35.959 c
67.2227 35.959 62.4766 31.2129 62.4766 25.3594 c
62.4766 19.5049 67.2227 14.7598 73.0762 14.7598 c
73.4297 14.7598 73.7773 14.7783 74.1211 14.8115 C
68.7578 15.3359 64.5654 19.8574 64.5654 25.3594 c
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 20)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-3609.5 4673.0952 m
-3395.8999 4673.0952 L
-3395.8999 4665.2944 L
-3609.5 4665.2944 L
-3609.5 4673.0952 L
n
0 O
0 0 0 1 k
-3609.5 4669.1953 m
-3599.4856 4671.687 -3592.6863 4673.0352 -3580.7007 4673.0952 c
-3567.7185 4673.1602 -3502.6997 4673.0952 y
-3437.6816 4673.1602 -3424.6997 4673.0952 v
-3412.7124 4673.0352 -3405.9136 4671.687 -3395.8999 4669.1953 C
-3405.9136 4666.7036 -3412.7124 4665.3555 -3424.6997 4665.2944 c
-3437.6816 4665.229 -3502.6997 4665.2944 y
-3567.7185 4665.229 -3580.7007 4665.2944 v
-3592.6863 4665.3555 -3599.4856 4666.7036 -3609.5 4669.1953 C
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 12)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7482 8545.6602 m
-7384.2451 8545.6602 L
-7384.2451 8524.9443 L
-7482 8524.9443 L
-7482 8545.6602 L
n
0 O
0 g
1 XR
-7384.5586 8540.9785 m
-7399.8247 8527.1904 -7417.5537 8548.1094 -7432.9277 8535.8262 C
-7431.4199 8530.1738 -7425.7598 8537.1279 -7423.5176 8532.4814 C
-7423.4341 8530.8809 -7426.6313 8532.3809 -7426.5127 8530.2607 C
-7424.6245 8526.8516 -7419.8955 8527.3486 -7418.5664 8531.3975 C
-7412.3115 8529.4277 -7405.7734 8523.4844 -7399.7847 8525.2773 C
-7398.2671 8526.6279 -7399.0708 8527.8115 -7398.6211 8529.0879 C
-7391.2871 8524.6523 -7382.4644 8533.7881 -7384.5586 8540.9785 C
f
-7428.2842 8542.5928 m
-7428.8247 8542.9688 -7427.9277 8544.0801 -7428.2529 8544.5684 C
-7430.3237 8543.8164 -7432.6919 8539.7383 -7434.4731 8536.9707 C
-7434.2632 8538.5 -7435.6641 8539.8242 -7437.0781 8537.5928 C
-7437.2383 8536.7754 -7436.3667 8536.4883 -7436.6729 8535.5967 C
-7437.8306 8534.0283 -7438.8472 8535.5137 -7439.7798 8535.2852 C
-7440.3184 8534.5215 -7440.6143 8533.8789 -7440.6816 8533.3545 C
-7434.5537 8530.5342 -7427.9263 8542.3369 -7421.7456 8542.7627 C
-7421.9048 8545.7754 -7425.8555 8547.4609 -7428.2842 8542.5928 C
f
u
u
0 XR
-7425.1602 8537.3203 m
-7440.0142 8530.7803 -7461.4731 8535.002 -7477.3687 8534.9795 c
-7483.2988 8534.9727 -7472.8965 8534.9814 -7478.8267 8534.9863 c
N
0 O
0 g
-7422.8052 8536.0996 m
-7440.1475 8528.9238 -7459.9341 8533.7158 -7478.0532 8533.6465 C
-7478.8608 8534.5332 -7479.6685 8535.4219 -7480.4751 8536.3076 C
-7479.6973 8536.3076 -7478.9194 8536.3066 -7478.1421 8536.3135 C
-7477.3345 8535.4258 -7476.5273 8534.5391 -7475.7202 8533.6523 C
-7476.3516 8533.6621 -7476.9844 8533.6553 -7477.6157 8533.6553 c
-7479.3735 8533.6582 -7483.9165 8536.3223 -7480.0376 8536.3174 c
-7479.4063 8536.3174 -7478.7734 8536.3242 -7478.1421 8536.3135 c
-7476.4155 8536.2861 -7471.8184 8533.6836 -7475.7202 8533.6523 c
-7476.4976 8533.6436 -7477.2759 8533.6465 -7478.0532 8533.6465 c
-7479.8081 8533.6455 -7484.3574 8536.293 -7480.4751 8536.3076 c
-7463.1177 8536.375 -7444.1025 8531.6738 -7427.5151 8538.5391 c
-7426.1035 8539.124 -7420.8081 8536.9268 -7422.8052 8536.0996 c
-7422.8052 8536.0996 l
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 158)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7482 8545.6602 m
-7470.0078 8545.6602 L
-7470.0078 8535.0234 L
-7482 8535.0234 L
-7482 8545.6602 L
n
-7481.3218 8535.0234 m
-7481.3218 8538.9727 L
-7481.3218 8540.0078 L
-7481.3218 8540.6465 L
-7481.3218 8541.7451 L
-7481.3218 8545.6602 L
-7470.6865 8545.6602 L
-7470.6865 8541.7451 L
-7470.6865 8540.6465 L
-7470.6865 8540.0078 L
-7470.6865 8538.9727 L
-7470.6865 8535.0234 L
-7481.3218 8535.0234 L
n
u
0 O
0.746094 0.675781 0.667969 0.898438 k
-7470.0078 8541.7451 m
-7470.0078 8541.0996 L
-7482 8541.1016 L
-7482 8541.7451 L
-7482 8541.8105 L
-7470.0078 8541.8096 L
-7470.0078 8541.7451 L
f
-7470.0078 8538.9727 m
-7482 8538.9727 L
-7482 8539.6816 L
-7470.0078 8539.6816 L
-7470.0078 8538.9727 L
f
0.15 1 0.9 0.1 k
-7470.0078 8540.7119 m
-7482 8540.7119 L
-7482 8541.1016 L
-7470.0078 8541.0996 L
-7470.0078 8540.7119 L
f
-7470.0078 8540.0078 m
-7470.0078 8539.6816 L
-7482 8539.6816 L
-7482 8540.0078 L
-7482 8540.0723 L
-7470.0078 8540.0723 L
-7470.0078 8540.0078 L
f
0 1 1 0 k
-7470.0078 8540.6465 m
-7470.0078 8540.0723 L
-7482 8540.0723 L
-7482 8540.6465 L
-7482 8540.7119 L
-7470.0078 8540.7119 L
-7470.0078 8540.6465 L
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 160)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7482 8544.4648 m
-7471.3638 8544.4648 L
-7471.3638 8533.8281 L
-7482 8533.8281 L
-7482 8544.4648 L
n
-7482 8533.8281 m
-7482 8537.7188 L
-7482 8538.4287 L
-7482 8538.8115 L
-7482 8539.4531 L
-7482 8539.8418 L
-7482 8540.5508 L
-7482 8544.4648 L
-7471.3638 8544.4648 L
-7471.3638 8533.8281 L
-7482 8533.8281 L
n
u
0 O
0.746094 0.675781 0.667969 0.898438 k
-7475.9585 8545.6602 m
-7475.2515 8545.6602 L
-7475.2607 8540.6162 L
-7469.5229 8540.6152 L
-7469.5229 8539.9043 L
-7475.9707 8539.9072 L
-7475.9585 8545.6602 L
f
-7477.6055 8538.1943 m
-7477.8696 8538.457 -7478.0215 8538.8232 -7478.0215 8539.1963 C
-7478.0073 8545.6602 L
-7477.2979 8545.6602 L
-7477.3125 8539.1963 L
-7477.3125 8539.0098 -7477.2363 8538.8281 -7477.1045 8538.6953 c
-7476.9717 8538.5635 -7476.7891 8538.4883 -7476.6021 8538.4883 C
-7469.5229 8538.4883 L
-7469.5229 8537.7783 L
-7476.6021 8537.7783 L
-7476.9761 8537.7783 -7477.3418 8537.9297 -7477.6055 8538.1943 c
f
0.15 1 0.9 0.1 k
-7476.2827 8545.6602 m
-7475.9585 8545.6602 L
-7475.9707 8539.9072 L
-7469.5229 8539.9043 L
-7469.5229 8539.5156 L
-7476.2827 8539.5156 L
-7476.2827 8545.6602 L
f
-7477.1045 8538.6953 m
-7477.2363 8538.8281 -7477.3125 8539.0098 -7477.3125 8539.1963 C
-7477.2979 8545.6602 L
-7476.9219 8545.6602 L
-7476.9219 8539.1963 L
-7476.9219 8539.1123 -7476.8877 8539.0313 -7476.8281 8538.9707 c
-7476.7695 8538.9121 -7476.6865 8538.8789 -7476.6025 8538.8789 C
-7469.5229 8538.8789 L
-7469.5229 8538.4883 L
-7476.6021 8538.4883 L
-7476.7891 8538.4883 -7476.9717 8538.5635 -7477.1045 8538.6953 c
f
0 1 1 0 k
-7476.8281 8538.9707 m
-7476.8877 8539.0313 -7476.9219 8539.1123 -7476.9219 8539.1963 C
-7476.9219 8545.6602 L
-7476.2827 8545.6602 L
-7476.2827 8539.5156 L
-7469.5229 8539.5156 L
-7469.5229 8538.8789 L
-7476.6025 8538.8789 L
-7476.6865 8538.8789 -7476.7695 8538.9121 -7476.8281 8538.9707 c
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 161)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7482 8545.6602 m
-7470.0078 8545.6602 L
-7470.0078 8535.0234 L
-7482 8535.0234 L
-7482 8545.6602 L
n
-7481.0117 8535.0234 m
-7481.0117 8538.9727 L
-7481.0117 8540.0078 L
-7481.0117 8540.6465 L
-7481.0117 8541.7451 L
-7481.0117 8545.6602 L
-7470.3765 8545.6602 L
-7470.3765 8541.7451 L
-7470.3765 8540.6465 L
-7470.3765 8540.0078 L
-7470.3765 8538.9727 L
-7470.3765 8535.0234 L
-7481.0117 8535.0234 L
n
0 O
0.15 1 0.9 0.1 k
-7470.0078 8540.7119 m
-7482 8540.7119 L
-7482 8541.1016 L
-7470.0078 8541.0996 L
-7470.0078 8540.7119 L
f
-7470.0078 8540.0078 m
-7470.0078 8539.6816 L
-7482 8539.6816 L
-7482 8540.0078 L
-7482 8540.0723 L
-7470.0078 8540.0723 L
-7470.0078 8540.0078 L
f
0 1 1 0 k
-7470.0078 8540.6465 m
-7470.0078 8540.0723 L
-7482 8540.0723 L
-7482 8540.6465 L
-7482 8540.7119 L
-7470.0078 8540.7119 L
-7470.0078 8540.6465 L
f
1 Ap
0.746094 0.675781 0.667969 0.898438 k
-7480.2715 8541.8105 m
-7482 8541.8105 L
-7482 8538.9727 L
-7480.2715 8538.9727 L
-7480.2715 8541.8105 L
f
0.15 1 0.9 0.1 k
-7479.5967 8541.7939 m
-7480.4492 8541.7939 L
-7480.4492 8538.957 L
-7479.5967 8538.957 L
-7479.5967 8541.7939 L
f
0 Ap
0.746094 0.675781 0.667969 0.898438 k
-7470.0078 8541.7451 m
-7470.0078 8541.0996 L
-7482 8541.1016 L
-7482 8541.7451 L
-7482 8541.8105 L
-7470.0078 8541.8096 L
-7470.0078 8541.7451 L
f
-7470.0078 8538.9727 m
-7482 8538.9727 L
-7482 8539.6816 L
-7470.0078 8539.6816 L
-7470.0078 8538.9727 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 162)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7482 8545.6602 m
-7470.6099 8545.6602 L
-7470.6099 8535.0234 L
-7482 8535.0234 L
-7482 8545.6602 L
n
-7481.2461 8541.7451 m
-7481.2461 8545.6602 L
-7470.6099 8545.6602 L
-7470.6099 8535.0234 L
-7481.2461 8535.0234 L
-7481.2461 8538.915 L
-7481.2461 8541.7451 L
n
u
0 O
0.746094 0.675781 0.667969 0.898438 k
-7475.6245 8541.6816 m
-7475.6245 8541.0371 L
-7482 8541.0371 L
-7482 8541.6816 L
-7482 8541.7451 L
-7475.6245 8541.7451 L
-7475.6245 8541.6816 L
f
-7475.6245 8538.9082 m
-7482 8538.9082 L
-7482 8539.6182 L
-7475.6245 8539.6182 L
-7475.6245 8538.9082 L
f
0.15 1 0.9 0.1 k
-7475.6245 8540.6465 m
-7482 8540.6465 L
-7482 8541.0371 L
-7475.6245 8541.0371 L
-7475.6245 8540.6465 L
f
-7475.6245 8539.9434 m
-7475.6245 8539.6182 L
-7482 8539.6182 L
-7482 8539.9434 L
-7482 8540.0088 L
-7475.6245 8540.0088 L
-7475.6245 8539.9434 L
f
0 1 1 0 k
-7475.6245 8540.5811 m
-7475.6245 8540.0088 L
-7482 8540.0088 L
-7482 8540.5811 L
-7482 8540.6465 L
-7475.6245 8540.6465 L
-7475.6245 8540.5811 L
f
U
-7481.2461 8545.6602 m
-7470.6099 8545.6602 L
-7470.6099 8535.0234 L
-7481.2461 8535.0234 L
-7481.2461 8545.6602 L
n
-7470.7241 8540.3418 m
-7478.8125 8545.0117 L
N
0 O
0.746094 0.675781 0.667969 0.898438 k
-7478.4814 8539.6201 m
-7478.4814 8536.8008 L
-7472.3535 8540.3379 L
-7478.4814 8543.876 L
-7478.4814 8541.0371 L
-7478.8125 8541.0371 L
-7478.8125 8541.7451 L
-7478.8125 8545.0117 L
-7470.7241 8540.3418 L
-7478.8125 8535.6729 L
-7478.8125 8538.9111 L
-7478.8125 8539.6201 L
-7478.4814 8539.6201 L
f
0.15 1 0.9 0.1 k
-7478.4814 8543.876 m
-7472.3535 8540.3379 L
-7478.4814 8536.8008 L
-7478.4814 8539.6201 L
-7478.4814 8540.0078 L
-7478.3472 8540.0078 L
-7478.2148 8539.6357 -7477.8633 8539.3672 -7477.4453 8539.3672 c
-7476.9155 8539.3672 -7476.4849 8539.7969 -7476.4849 8540.3271 c
-7476.4849 8540.8574 -7476.9155 8541.2871 -7477.4453 8541.2871 c
-7477.8633 8541.2871 -7478.2148 8541.0195 -7478.3472 8540.6465 C
-7478.4814 8540.6465 L
-7478.4814 8541.0371 L
-7478.4814 8543.876 L
f
0 1 1 0 k
-7477.4453 8541.2871 m
-7476.9155 8541.2871 -7476.4849 8540.8574 -7476.4849 8540.3271 c
-7476.4849 8539.7969 -7476.9155 8539.3672 -7477.4453 8539.3672 c
-7477.8633 8539.3672 -7478.2148 8539.6357 -7478.3472 8540.0078 c
-7478.3828 8540.1074 -7478.4058 8540.2139 -7478.4058 8540.3271 c
-7478.4058 8540.4395 -7478.3828 8540.5449 -7478.3472 8540.6465 c
-7478.2148 8541.0195 -7477.8633 8541.2871 -7477.4453 8541.2871 c
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 4)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7481.8833 8545.6152 m
-7390.0479 8545.6152 L
-7390.0479 8541.3359 L
-7481.8833 8541.3359 L
-7481.8833 8545.6152 L
n
0 O
0 0 0 1 k
-7481.6631 8542.9355 m
-7482 8543.002 -7481.4814 8543.1914 -7481.8833 8543.0488 C
-7481.8379 8542.9307 -7481.7725 8542.8418 -7481.6631 8542.9355 C
f
-7391.1675 8543.1016 m
-7392.2524 8543.8643 -7393.6816 8543.0938 -7394.8701 8543.5801 C
-7395.0098 8543.6123 -7394.8345 8543.1621 -7395.1484 8543.2627 C
-7396.3008 8543.8555 -7398.1162 8543.502 -7399.5195 8543.0449 C
-7399.4346 8542.9268 L
-7399.7017 8542.8418 -7400.0283 8543.2324 -7400.3115 8543.1777 C
-7400.3135 8543.0996 -7400.2207 8543.0664 -7400.2861 8542.959 C
-7400.3574 8543.1953 -7400.7983 8543.0684 -7400.9185 8543.2441 C
-7401.0303 8543.1523 -7401.0195 8542.9648 -7401.1641 8542.8613 C
-7401.3262 8543.1299 L
-7401.7769 8543.7695 -7402.4209 8543.0859 -7403.0361 8543.416 C
-7403.0063 8543.3535 -7402.9453 8543.3047 -7402.9941 8543.2441 C
-7403.9814 8543.6328 -7405.2168 8543.5605 -7406.3208 8543.7031 C
-7406.2769 8543.6084 -7406.2363 8543.4355 -7406.3008 8543.3281 C
-7406.3555 8543.6113 -7406.6963 8543.6826 -7406.9922 8543.7383 C
-7407.1255 8543.4473 -7407.4995 8544.0039 -7407.8467 8543.8438 C
-7407.8169 8543.7793 L
-7408.0732 8544.084 -7408.1973 8543.6035 -7408.4053 8543.9688 C
-7408.5684 8543.7402 L
-7408.6807 8544.1504 -7408.9395 8543.5273 -7409.1514 8543.7363 C
-7409.1445 8543.8203 L
-7409.3442 8543.9199 -7409.4482 8543.7139 -7409.6338 8543.7832 C
-7409.6514 8543.7363 L
-7410.0854 8543.8438 -7410.3379 8543.6152 -7410.3271 8543.9355 C
-7410.4795 8543.6787 -7409.9063 8543.8184 -7410.1455 8543.4453 C
-7411.5732 8543.7754 -7413.0459 8543.7109 -7414.4834 8543.7168 C
-7414.6465 8543.5879 -7414.7505 8543.5488 -7414.7871 8543.4277 C
-7414.9307 8543.4922 -7415.3281 8543.4863 -7415.4585 8543.6504 C
-7415.4102 8543.6436 -7415.5513 8543.4863 -7415.6274 8543.4707 C
-7415.8887 8543.3496 -7415.9131 8543.8223 -7416.2002 8543.6787 C
-7416.0859 8543.5938 -7416.0469 8543.4902 -7416.0854 8543.3711 C
-7416.3301 8543.6211 -7416.6577 8543.5811 -7416.9473 8543.6621 C
-7416.9023 8543.6084 -7416.8325 8543.5762 -7416.8433 8543.4756 C
-7417.1602 8543.7588 -7417.4209 8543.416 -7417.6982 8543.5947 C
-7417.5947 8543.4102 L
-7418.0415 8543.1855 -7417.7266 8543.7969 -7418.1128 8543.6641 C
-7418.02 8543.6055 -7418.0527 8543.5332 -7418.0361 8543.458 C
-7418.3965 8543.7939 -7418.9795 8543.6826 -7419.3389 8543.7969 C
-7419.3174 8543.7715 -7419.3232 8543.7207 Y
-7419.7148 8543.7627 -7420.1245 8543.6582 -7420.5552 8543.8047 C
-7420.7119 8543.7227 -7420.5039 8543.3535 -7420.9185 8543.4219 C
-7420.9033 8543.793 -7421.6221 8543.5742 -7421.3779 8543.9941 C
-7421.7319 8543.9336 -7422.2925 8543.7939 -7422.5283 8543.9199 C
-7422.3691 8543.7793 -7422.7007 8543.4668 -7422.4063 8543.4355 C
-7422.6289 8543.21 L
-7422.5957 8543.0586 -7422.3999 8543.2617 -7422.4707 8543.0703 C
-7422.6182 8543.0859 -7423.0479 8543.2324 -7423.1797 8543.1719 C
-7423.4531 8543.3994 -7423.7041 8543.8242 -7424.1465 8543.8711 C
-7423.9385 8543.7266 -7424.2646 8543.4619 -7424.1235 8543.3984 C
-7424.7407 8544.1094 L
-7424.8877 8544.127 -7424.7725 8543.8164 -7424.9854 8543.9131 C
-7424.9746 8544.0117 -7425.0674 8544.0723 -7425.1318 8544.1523 C
-7425.1875 8544.1094 -7425.7441 8544.2441 -7425.8081 8543.8789 C
-7425.8735 8543.7363 -7425.5684 8543.8027 -7425.7314 8543.6719 C
-7426.0029 8543.6758 -7426.0151 8543.8008 -7426.2871 8543.8066 C
-7426.2925 8543.7578 L
-7426.4717 8543.7031 -7426.8213 8543.9131 -7426.6265 8544.1152 C
-7426.5015 8544.127 -7426.6738 8543.8955 -7426.4888 8544.002 C
-7426.6152 8544.2139 -7426.9312 8544.2734 -7427.2031 8544.2773 C
-7427.1104 8544.2188 -7427.1216 8544.1211 -7427.0845 8544.0176 C
-7427.4497 8544.3047 -7427.8369 8544.3955 -7428.2451 8544.5156 C
-7428.2515 8544.6895 -7428.0928 8544.1992 -7428.0327 8544.291 C
-7428.5557 8544.0498 -7429.1128 8544.6328 -7429.5479 8544.2803 C
-7429.4766 8544.25 -7429.5098 8544.5273 -7429.5146 8544.4785 C
-7429.7666 8544.457 -7429.7549 8544.2051 -7429.9189 8544.2979 C
-7429.9355 8544.1504 -7430.1255 8544.3457 -7430.2944 8544.3906 C
-7430.3818 8544.4971 -7430.3384 8544.3184 -7430.1914 8544.3027 C
-7430.4268 8544.4277 -7431.3691 8544.6543 -7431.9131 8544.4395 C
-7431.9023 8544.5371 -7432.2471 8544.7979 -7432.3721 8544.7871 C
-7432.3232 8544.5586 L
-7432.4375 8544.4219 -7432.7422 8544.5781 -7432.7632 8544.3828 C
-7433.0303 8544.6602 -7431.7344 8544.1465 -7432.0957 8544.3604 C
-7432.1895 8544.1699 -7432.5991 8544.7246 -7432.5215 8544.4131 C
-7432.7725 8544.4219 -7433.0161 8544.6787 -7433.2559 8544.4648 C
-7433.1865 8544.502 -7433.0522 8544.1475 -7433.2549 8544.1641 C
-7433.6123 8544.2051 -7433.3564 8544.2734 -7433.6465 8544.3496 C
-7433.8281 8544.4434 L
-7433.8398 8544.666 -7434.1475 8544.4131 -7434.0146 8544.6621 C
-7434.0586 8544.4785 -7434.5337 8544.7754 -7434.4971 8544.4063 C
-7434.4473 8544.1152 L
-7434.6016 8544.1367 -7434.7002 8544.4219 -7434.8213 8544.5498 C
-7434.8418 8544.5234 -7434.8823 8544.4648 -7434.8745 8544.418 C
-7434.8994 8544.8633 -7435.2432 8544.3809 -7435.4268 8544.7246 C
-7435.7505 8544.5703 -7436.2495 8544.7109 -7436.4023 8544.4336 C
-7436.6514 8544.5684 -7436.8784 8544.7285 -7437.1621 8544.6328 C
-7437.1055 8544.5908 -7437.0283 8544.5781 -7437.0122 8544.4824 C
-7437.1904 8544.3516 -7437.2344 8544.4688 -7437.3975 8544.541 C
-7437.3608 8544.4746 -7437.7539 8544.2803 -7437.9521 8544.123 C
-7438.1992 8544.2559 -7438.1143 8544.4961 -7438.1392 8544.6426 C
-7438.3652 8544.2031 -7438.8379 8544.9258 -7439.1211 8544.5273 C
-7439.0352 8544.4668 -7438.7598 8544.3115 -7438.9658 8544.2012 C
-7439.1919 8543.7627 -7439.4219 8544.5254 -7439.7861 8544.3145 C
-7439.6968 8544.6787 L
-7439.8594 8544.4531 -7440.2334 8544.8906 -7440.1963 8544.5195 C
-7440.3184 8544.6504 -7440.6265 8544.3984 -7440.5859 8544.7539 C
-7441.1846 8544.4531 -7442.0425 8544.9355 -7442.4102 8544.2979 C
-7442.4961 8544.3574 -7442.7104 8544.2969 -7442.6665 8544.4795 C
-7442.5239 8544.6777 -7442.4673 8544.3379 -7442.4141 8544.4727 C
-7442.4912 8544.4834 -7442.5078 8544.5811 -7442.5161 8544.6299 C
-7442.7021 8544.5488 -7442.8486 8544.5234 -7442.6729 8544.2275 C
-7443.0869 8544.0078 -7443.1001 8544.832 -7443.6274 8544.6934 C
-7443.6035 8544.5459 -7443.6436 8544.4902 -7443.7979 8544.5137 C
-7444.0903 8544.7656 L
-7444.4312 8544.707 -7444.2842 8544.4307 -7444.2925 8544.1816 C
-7444.4746 8544.2246 -7444.6973 8544.2129 -7444.7803 8544.3984 C
-7445.0015 8544.0859 L
-7444.8398 8544.3115 -7445.1514 8544.2363 -7445.2368 8544.2969 C
-7445.1514 8544.2363 L
-7445.1846 8544.1299 -7445.3955 8544.1953 -7445.5024 8544.2266 C
-7445.4766 8544.3809 -7445.2617 8544.4434 -7445.1445 8544.4883 C
-7445.2373 8544.5977 -7445.3823 8544.5723 -7445.5059 8544.7012 C
-7445.4648 8544.457 -7445.8027 8544.5273 -7445.9473 8544.502 C
-7446.1133 8544.4492 -7446.1348 8544.7207 -7446.1831 8544.7129 C
-7446.1875 8544.5859 -7446.4541 8544.6914 -7446.3247 8544.5137 C
-7446.2681 8544.4727 -7446.1953 8544.6367 -7446.1016 8544.5254 C
-7446.2109 8544.4307 -7446.1982 8544.21 -7446.4258 8544.3711 C
-7446.5967 8544.4922 -7446.3818 8544.8535 -7446.7061 8544.6992 C
-7446.6211 8544.6387 -7446.6055 8544.541 -7446.5391 8544.4531 C
-7446.8433 8544.3262 L
-7446.8564 8544.5488 L
-7446.8975 8544.4922 -7446.8691 8544.4727 -7446.8877 8544.4434 C
-7446.9785 8544.6777 -7447.3521 8544.5156 -7447.4209 8544.7793 C
-7447.5742 8544.8027 -7447.7441 8544.625 -7447.8906 8544.5996 C
-7447.8623 8544.5801 L
-7448.0415 8544.4492 -7448.2793 8544.5352 -7448.4297 8544.6855 C
-7448.4219 8544.6367 L
-7448.5195 8544.6191 -7448.7505 8544.6543 -7448.8735 8544.7852 C
-7449.1201 8544.6172 -7448.9561 8543.9443 -7449.2295 8544.2246 C
-7449.48 8544.2324 -7449.6221 8544.6328 -7449.5215 8544.7754 C
-7449.9717 8544.625 -7450.4834 8544.9883 -7450.9009 8544.6426 C
-7450.9658 8544.7324 -7450.9248 8544.7891 -7451.0586 8544.8418 C
-7451.7197 8544.7539 -7452.4551 8545.1055 -7452.9814 8544.668 C
-7452.79 8544.5742 -7452.9688 8544.4453 -7452.9727 8544.3184 C
-7453.1309 8544.5176 -7453.1631 8544.1113 -7453.2197 8544.4531 C
-7453.2041 8544.6543 -7453.2197 8544.752 -7453.0337 8544.833 C
-7453.4282 8544.9414 -7454.0283 8544.9414 -7454.2471 8544.7539 C
-7454.1377 8544.8467 -7454.2227 8544.9082 -7454.3086 8544.9688 C
-7454.2803 8544.6475 -7454.5713 8544.5996 -7454.7915 8544.7129 C
-7454.8223 8544.9082 L
-7454.9658 8544.707 L
-7455.0503 8544.7695 -7455.0591 8545.1172 -7455.2773 8544.9297 C
-7455.2891 8544.8535 -7455.3018 8544.7764 -7455.3418 8544.7207 C
-7455.5693 8544.8809 -7455.8906 8545.1523 -7456.1377 8544.9863 C
-7456.3398 8544.7012 L
-7456.4453 8544.7324 -7456.6235 8544.9043 -7456.4375 8544.9863 C
-7456.8594 8544.8145 -7457.1309 8544.793 -7457.2646 8544.5459 C
-7457.9912 8545.1475 -7459.0459 8545.1719 -7459.8906 8545.1289 C
-7459.8652 8544.9824 L
-7460.0923 8544.8457 -7459.9834 8545.2383 -7460.1416 8545.1367 C
-7460.0684 8544.9971 -7460.3145 8544.833 -7460.1362 8544.6621 C
-7460.4609 8544.5078 -7460.5547 8544.916 -7460.7656 8544.9824 C
-7460.7979 8545.1748 -7460.5957 8544.8594 -7460.6367 8545.1035 C
-7460.6729 8545.1719 -7461.0859 8544.9531 -7461.1362 8545.2441 C
-7461.2178 8545.1299 -7461.1543 8544.916 -7461.1104 8544.7979 C
-7461.3086 8544.9395 L
-7461.5513 8544.5996 -7460.7559 8544.332 -7461.0107 8543.9131 C
-7461.1934 8543.959 L
-7461.3682 8543.6543 -7460.71 8543.6152 -7461.1689 8543.5107 C
-7461.3682 8543.6543 -7461.5381 8544.0762 -7461.3608 8544.2051 C
-7461.7754 8544.2852 -7461.5527 8544.8984 -7461.9985 8544.874 C
-7462.1201 8544.7031 -7461.6416 8544.833 -7461.7275 8544.5938 C
-7461.9375 8544.3594 -7462.1484 8544.7246 -7462.3354 8544.6426 C
-7462.1279 8544.752 -7462.3032 8545.0459 -7462.4375 8545.0996 C
-7462.6641 8544.9619 -7462.29 8544.8242 -7462.6113 8544.7939 C
-7462.6641 8544.9619 -7462.9595 8545.0879 -7462.7041 8545.2051 C
-7462.8203 8545.5859 -7463.0381 8545.0996 -7463.2129 8545.3945 C
-7463.3174 8545.127 -7462.8823 8544.7754 -7463.2354 8544.6416 C
-7463.1792 8544.8994 -7463.6704 8544.9922 -7463.4839 8545.375 C
-7463.6221 8545.3008 -7463.6367 8545.0977 -7463.5361 8544.9395 C
-7463.7334 8544.7803 -7464.0151 8545.4102 -7464.0801 8544.8984 C
-7464.1479 8545.1621 L
-7464.21 8545.0762 -7464.2983 8545.0117 -7464.3994 8544.8691 C
-7464.5732 8544.8643 -7464.96 8545.2266 -7464.9443 8544.8281 C
-7465 8544.8691 -7465.3975 8544.8516 -7465.2441 8545.127 C
-7464.9971 8545.2949 -7464.96 8544.9258 -7464.8223 8545.2979 C
-7464.9971 8544.9941 -7465.1787 8545.3379 -7465.3213 8545.4395 C
-7465.3447 8545.2852 L
-7465.4297 8545.3457 -7465.6255 8545.3115 -7465.6787 8545.4785 C
-7465.6133 8545.3906 -7465.6475 8545.2852 -7465.7148 8545.248 C
-7465.8042 8545.4824 L
-7466.1494 8545.5996 -7465.8857 8545.0703 -7466.2217 8545.1387 C
-7465.9663 8544.957 L
-7466.0225 8544.9961 -7466.1367 8544.7764 -7466.2979 8544.8496 C
-7466.3604 8545.0635 -7466.4775 8545.3203 -7466.5313 8545.4863 C
-7466.7207 8545.5801 -7466.6162 8545.2451 -7466.8027 8545.4648 C
-7466.5586 8545.207 L
-7466.5215 8545.1367 -7466.7231 8544.8535 -7466.9761 8544.8594 C
-7467.1377 8544.9336 -7467.3887 8545.2422 -7467.1338 8545.3594 C
-7467.2607 8545.3633 -7467.4385 8545.2324 -7467.3379 8545.0762 C
-7467.6255 8545.1504 -7467.2998 8545.3066 -7467.5479 8545.4395 C
-7467.6494 8545.2969 -7467.9658 8545.0938 -7468.1563 8544.8867 C
-7467.8975 8544.5283 L
-7468.0693 8544.5254 L
-7467.8467 8544.2383 -7468.1826 8544.3066 -7468.0566 8544.0039 C
-7468.1743 8543.957 -7468.3169 8544.0596 -7468.4307 8544.1387 C
-7468.0864 8544.623 -7468.8159 8544.8008 -7468.7158 8545.2422 C
-7469.1875 8545.3633 -7469.0107 8544.168 -7469.5024 8544.8594 C
-7469.4219 8544.9746 -7469.6533 8545.3105 -7469.3564 8545.1826 C
-7469.6494 8545.1348 -7469.5557 8545.626 -7469.9014 8545.4434 C
-7469.6455 8545.2617 -7470.1763 8544.9961 -7469.8066 8544.7324 C
-7469.8311 8544.8789 -7469.6001 8544.8438 -7469.5435 8544.8027 C
-7469.6641 8544.6328 -7469.5186 8544.3574 -7469.8184 8544.3574 C
-7470.0015 8544.3994 -7470.2524 8544.4082 -7470.2158 8544.6387 C
-7470.2085 8544.8916 -7469.9365 8544.6113 -7470.0537 8544.8672 C
-7470.4185 8544.9551 -7470.4795 8544.5703 -7470.6304 8545.0195 C
-7470.3999 8544.9834 -7470.3423 8545.2441 -7470.3467 8545.418 C
-7470.6143 8545.5234 L
-7470.5625 8545.3555 L
-7470.9922 8545.2344 -7470.6895 8545.6602 -7471.1055 8545.6152 C
-7471.3008 8545.2832 L
-7471.2017 8544.9971 -7470.6953 8545.4102 -7470.7695 8544.9443 C
-7471.04 8544.9258 -7471.1299 8545.1621 -7471.3848 8545.042 C
-7471.3281 8545.002 -7471.2505 8544.9902 -7471.1943 8544.9492 C
-7471.2915 8544.9336 -7471.3877 8544.3164 -7471.7734 8544.6777 C
-7471.9727 8544.8184 -7471.8262 8544.8438 -7471.8311 8545.0176 C
-7472.2656 8545.0703 -7472.3955 8545.248 -7472.6753 8545.2754 C
-7472.6177 8544.9355 -7473.1699 8545.2422 -7472.8608 8544.8945 C
-7472.7188 8545.0938 -7472.0903 8545.0742 -7471.9365 8544.75 C
-7472.0947 8544.3467 -7471.5952 8544.8066 -7471.5024 8544.3984 C
-7471.8506 8544.3887 -7471.8335 8543.9922 -7471.8896 8543.7324 C
-7471.9863 8543.7139 -7472.0801 8543.8242 -7472.1377 8543.8643 C
-7472.1787 8544.1094 -7472.0522 8544.1055 -7472.0449 8544.3574 C
-7472.4336 8544.291 -7472.8081 8544.4277 -7473.0225 8544.666 C
-7473.1523 8544.5449 -7473.1113 8544.3008 -7472.9575 8544.2773 C
-7473.4199 8544.3496 -7473.9141 8544.3164 -7474.3535 8544.2422 C
-7474.0693 8544.6416 -7474.8433 8544.3359 -7474.6494 8544.668 C
-7474.4141 8544.7578 -7474.2119 8545.042 -7474.3418 8545.2207 C
-7474.4888 8545.1953 -7474.3369 8545.0459 -7474.3984 8544.9609 C
-7474.5859 8545.1787 -7474.6895 8544.6113 -7474.8735 8544.9551 C
-7474.4512 8544.8262 -7474.7915 8544.4688 -7474.7139 8544.1563 C
-7475.0186 8544.332 -7474.7007 8543.9336 -7475.0024 8543.9336 C
-7475.3057 8544.1074 -7475.6787 8544.2441 -7476.0161 8544.3115 C
-7476.4399 8544.0156 -7477.0898 8544.3066 -7477.4683 8544.3184 C
-7477.6665 8544.1602 -7477.5322 8543.8066 -7477.7471 8543.7451 C
-7477.9995 8543.752 -7477.5601 8544.127 -7477.9336 8543.9648 C
-7477.8975 8543.8945 L
-7478.0107 8543.9766 -7478.5825 8543.6543 -7478.6929 8544.1621 C
-7478.5776 8543.7793 L
-7478.6475 8543.7441 -7478.7119 8543.832 -7478.7695 8543.873 C
-7478.7725 8543.748 -7478.8535 8543.6348 -7478.7402 8543.5527 C
-7478.9707 8543.2891 -7479.2241 8543.5947 -7479.4746 8543.6055 C
-7479.3135 8543.832 L
-7479.7422 8544.0098 -7480.0293 8543.7852 -7480.4443 8543.8643 C
-7480.4316 8543.6426 L
-7480.6787 8543.7754 L
-7480.6182 8543.5605 -7480.8447 8543.4219 -7480.9751 8543.6016 C
-7480.3335 8543.0586 L
-7480.1553 8543.1895 -7480.5283 8543.3262 -7480.4165 8543.5449 C
-7480.3213 8543.7363 -7479.9375 8543.6758 -7479.8755 8543.4619 C
-7480.0225 8543.4375 -7480.0293 8543.4863 -7480.1436 8543.5664 C
-7480.1919 8543.2578 -7479.9688 8543.2695 -7479.8584 8543.0635 C
-7479.9355 8543.0762 -7480.0449 8542.9824 -7480.0615 8543.0801 C
-7479.9102 8542.9297 -7479.7578 8542.9063 -7479.5059 8542.8984 C
-7479.6763 8543.0195 -7479.4131 8543.0898 -7479.4775 8543.1777 C
-7479.4575 8542.9063 -7479.2168 8542.8223 -7478.9053 8542.8984 C
-7478.6831 8543.2129 -7478.3208 8542.6963 -7477.96 8542.7832 C
-7478.1064 8543.0586 -7478.2935 8543.2793 -7478.5127 8543.3906 C
-7478.2861 8543.5283 -7478.2607 8543.3828 -7478.0337 8543.5215 C
-7477.9238 8543.3164 -7477.8457 8543.002 -7477.5503 8542.877 C
-7477.5342 8543.0801 L
-7477.2666 8542.9766 -7477.2666 8542.6758 -7476.9258 8542.7324 C
-7476.3418 8542.832 -7475.7407 8542.832 -7475.2949 8542.8574 C
-7475.2783 8543.0596 L
-7475.0303 8542.626 -7474.4521 8542.8994 -7474.1182 8542.707 C
-7473.5503 8542.9023 -7472.8848 8542.5137 -7472.5938 8542.8633 C
-7471.5913 8542.707 -7470.7148 8542.5547 -7469.6768 8542.6289 C
-7469.8516 8542.9238 L
-7469.6655 8542.707 -7469.7305 8543.0938 -7469.5479 8543.0498 C
-7469.7578 8542.8145 -7469.2949 8542.7441 -7469.1665 8542.5635 C
-7468.7041 8542.793 -7468.1104 8542.543 -7467.7007 8542.3359 C
-7467.6846 8542.5391 L
-7467.2705 8542.1582 -7466.7759 8542.4922 -7466.2598 8542.5547 C
-7466.2007 8542.6387 -7466.1074 8542.8291 -7465.9536 8542.8066 C
-7465.6738 8542.4785 -7465.5273 8542.502 -7465.1167 8542.2969 C
-7464.8169 8542.2969 -7464.3301 8542.3779 -7464.0254 8542.5059 C
-7462.8975 8542.0449 -7461.7456 8542.3398 -7460.5732 8542.0625 C
-7460.4888 8542.3008 L
-7459.3521 8541.791 -7457.9541 8542.2539 -7456.9839 8541.9922 C
-7457.0776 8542.3994 L
-7456.7734 8542.5254 -7456.3843 8542.293 -7456.4619 8542.0039 C
-7456.1567 8542.1289 -7455.7007 8541.8066 -7455.5068 8542.1416 C
-7455.1953 8542.2168 -7455.1255 8541.9531 -7454.8662 8541.8984 C
-7454.2422 8542.0527 -7454.0107 8542.0176 -7453.4224 8541.9414 C
-7453.5684 8541.916 L
-7453.6328 8542.0059 -7453.6387 8542.1787 -7453.4922 8542.2051 C
-7453.2725 8542.0918 -7452.6846 8542.3145 -7452.9033 8541.8281 C
-7452.2754 8542.1094 -7451.4385 8541.5996 -7450.8271 8541.9785 C
-7450.8789 8541.8457 -7450.7246 8541.8203 -7450.6602 8541.7305 C
-7450.1089 8541.7246 -7449.5293 8541.9961 -7449.0898 8541.7695 C
-7449.0024 8541.8359 -7449.2295 8541.9961 -7449.0049 8542.0098 C
-7448.8721 8541.959 -7449.0024 8541.8359 -7448.8384 8541.7617 C
-7447.9453 8541.5137 -7447.0303 8542.0176 -7446.2188 8541.9531 C
-7444.7754 8541.6963 -7443.2695 8541.8262 -7441.8867 8541.7832 C
-7441.9023 8541.8809 L
-7441.4395 8541.5078 -7440.8159 8542.2627 -7440.4463 8541.7012 C
-7440.3369 8541.7939 -7440.0283 8541.7451 -7440.1094 8541.9336 C
-7439.7407 8541.6699 -7439.0771 8542.1816 -7438.5439 8541.8467 C
-7438.5928 8541.8379 -7438.6211 8541.8574 -7438.6777 8541.8994 C
-7438.1392 8542.1152 -7437.6641 8541.8203 -7437.0957 8542.0156 C
-7437.1533 8542.0576 -7437.2583 8542.0879 -7437.2754 8542.1855 C
-7437.0557 8542.373 -7436.7549 8541.7734 -7436.6348 8542.2441 C
-7436.5088 8542.2402 -7436.5449 8542.0078 -7436.6221 8542.0215 C
-7435.3779 8542.2051 -7434.0498 8541.9043 -7432.7549 8541.7969 C
-7431.8271 8542.0781 -7432.6982 8542.5898 -7431.9663 8542.2383 C
-7431.9063 8542.3291 -7431.9229 8542.0586 -7431.9131 8542.1563 C
-7431.6299 8542.0244 -7431.4717 8542.6816 -7431.2754 8542.4355 C
-7431.3564 8542.1465 -7431.1445 8542.2734 -7431.1387 8542.0977 C
-7430.5713 8542.2852 -7430.4575 8542.5459 -7430.0098 8542.3262 C
-7430.0435 8542.4785 L
-7429.5186 8542.0488 -7428.9102 8542.2793 -7428.4673 8541.7832 C
-7425.5728 8541.6934 -7422.7983 8541.418 -7419.9761 8541.3604 C
-7417.1865 8541.4551 -7414.4551 8541.2324 -7411.6221 8541.4961 C
-7410.9585 8541.8955 -7410.9087 8541.8848 -7410.1797 8541.7227 C
-7410.2095 8541.7871 -7410.2549 8541.8027 -7410.2061 8541.8633 C
-7410.1699 8541.5352 -7409.6929 8541.832 -7409.6235 8541.5195 C
-7408.5762 8541.5801 -7407.6113 8541.4902 -7406.5337 8541.4883 C
-7406.7041 8541.5234 -7406.7896 8541.791 -7406.5869 8541.7695 C
-7406.3755 8541.5605 L
-7406.3408 8541.6523 L
-7406.2021 8541.6035 -7406.0513 8541.4414 -7406.1943 8541.3359 C
-7403.4873 8541.0527 -7400.8242 8541.7109 -7398.1729 8541.6299 C
-7397.5435 8541.7666 -7396.6475 8541.6416 -7395.9629 8541.5742 C
-7393.9355 8542.0117 -7392.1079 8542.3643 -7390.0479 8542.0586 C
-7390.3169 8542.9063 -7391.1675 8543.1016 V
f
-7481.2578 8542.9023 m
-7481.1855 8543.0664 -7480.9497 8543.1563 -7481.1377 8543.375 C
-7481.1611 8543.2207 -7481.2822 8543.0488 -7481.2578 8542.9023 C
f
-7474.9619 8544.5898 m
-7474.9536 8544.541 -7474.8721 8544.6563 -7474.8521 8544.6826 C
-7474.9297 8544.6953 -7475.0024 8544.833 -7475.0645 8544.748 C
-7474.9854 8544.7363 -7474.9976 8544.6582 -7474.9619 8544.5898 C
f
-7473.3521 8544.6875 m
-7473.3765 8544.833 -7473.7207 8544.9492 -7473.9238 8544.9668 C
-7473.3521 8544.6875 L
f
-7471.8521 8545.2891 m
-7471.7227 8545.4121 -7471.7583 8545.4795 -7471.9326 8545.4756 C
-7471.9453 8545.3984 -7471.8877 8545.3594 -7471.8521 8545.2891 C
f
-7471.7456 8544.957 m
-7471.6211 8544.9531 -7471.5591 8545.0391 -7471.4985 8545.123 C
-7471.5029 8544.9971 -7471.7871 8545.2012 -7471.7456 8544.957 C
f
-7468.4893 8545.3809 m
-7468.4111 8545.3691 -7468.2417 8545.248 -7468.1689 8545.4102 C
-7468.2505 8545.2969 -7468.5498 8545.5947 -7468.4893 8545.3809 C
f
-7466.9761 8545.1602 m
-7466.9272 8545.1699 -7466.9072 8545.1963 -7466.8506 8545.1563 C
-7466.7607 8545.2227 -7466.8555 8545.3291 -7466.9312 8545.3428 C
-7466.9761 8545.1602 L
f
-7439.4287 8544.5742 m
-7439.5923 8544.6465 L
-7439.5684 8544.502 L
-7439.4287 8544.5742 L
f
-7427.3574 8544.5664 m
-7427.1943 8544.4746 -7427.2441 8544.7031 -7427.2168 8544.7246 C
-7427.3643 8544.7402 -7427.1621 8544.5449 -7427.3574 8544.5664 C
f
-7420.8486 8543.8379 m
-7420.8984 8543.8418 L
-7420.8818 8543.543 L
-7420.8486 8543.8379 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 55)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7455.9727 8545.6602 m
-7455.9727 8519.6318 L
-7482 8519.6318 L
-7482 8545.6602 L
-7455.9727 8545.6602 L
n
0 Ap
0 R
0.7084 0.636438 0.515526 0.381872 K
1.125 w-7482 8528.3066 m
-7455.9727 8528.3066 l
S
0.64 0.650477 0.701045 0.510735 K
-7482 8536.9844 m
-7455.9727 8536.9844 l
S
0.597742 0.537865 0.64184 0.350469 K
0.375 w-7482 8532.6455 m
-7455.9727 8532.6455 l
S
0 O
0.597742 0.537865 0.64184 0.350469 k
1 w-7460.5742 8532.6719 m
-7460.3442 8532.4004 -7460.6914 8532.1143 -7461 8531.9033 c
-7461.1118 8531.8262 -7461.5215 8532.0391 -7461.7466 8531.873 c
-7462.0439 8531.6553 -7462.1826 8531.5684 -7462.4824 8531.5742 c
-7462.6455 8531.5781 -7463.0435 8531.708 -7463.1895 8531.7383 c
-7463.5679 8531.8145 -7463.8022 8532.0117 -7464.3672 8531.915 c
-7464.7344 8531.8516 -7464.8286 8531.7607 -7464.9233 8531.8086 c
-7465.1118 8531.9502 -7465.2202 8532.1738 -7465.4258 8532.2227 c
-7465.9575 8532.3496 -7466.3535 8532.3936 -7466.8818 8532.3828 c
-7467.3047 8532.373 -7468.4185 8532.4414 -7469.2866 8532.3418 c
-7469.6226 8532.3018 -7469.6025 8531.877 -7469.7695 8531.873 c
-7469.8618 8531.8711 -7469.7646 8532.1865 -7469.8306 8532.207 c
-7470.1694 8532.3135 -7470.4702 8531.1631 -7470.6943 8531.2324 c
-7470.8047 8531.2676 -7470.5562 8531.8135 -7470.6729 8531.8418 c
-7470.8975 8531.8975 -7471.2178 8530.8789 -7471.4321 8530.9414 c
-7471.5635 8530.9785 -7471.2886 8531.3984 -7471.4375 8531.4668 c
-7471.6655 8531.5713 -7471.9087 8530.6953 -7472.1064 8530.7939 C
-7472.1543 8530.8418 -7471.7295 8531.5977 -7472.1685 8531.5391 c
-7472.2871 8531.5215 -7472.5054 8530.9736 -7472.5801 8531 c
-7472.6919 8531.04 -7472.3535 8531.4619 -7472.4897 8531.5879 C
-7472.7681 8531.8145 -7473.3711 8530.8232 -7473.4575 8530.8945 c
-7473.5791 8530.9961 -7473.1279 8531.7578 -7473.2695 8531.8262 C
-7473.4497 8532.0898 -7474.0142 8531.2129 -7474.0889 8531.2617 c
-7474.1777 8531.3203 -7473.9058 8531.6982 -7473.8799 8531.8936 c
-7473.8545 8532.0879 -7473.9966 8532.2217 -7474.2144 8532.1699 c
-7474.4736 8532.1074 -7474.8696 8531.3018 -7474.9727 8531.3955 C
-7475.0791 8531.4512 -7474.8682 8531.7383 -7474.7954 8531.9727 c
-7474.7583 8532.0879 -7474.8882 8532.2617 -7475.0298 8532.2617 c
-7475.3135 8532.3096 -7475.6255 8531.6582 -7475.7065 8531.7627 c
-7475.7524 8531.8223 -7475.5898 8532.1504 -7475.7295 8532.248 c
-7475.8994 8532.3662 -7476.3115 8531.8984 -7476.4521 8531.9531 C
-7476.5361 8532.002 -7476.4126 8532.2568 -7476.4927 8532.3135 c
-7476.7295 8532.4795 -7477.0039 8532.0811 -7477.0513 8532.1289 C
-7477.1167 8532.1514 -7477.1201 8532.1963 -7477.2793 8532.3008 c
-7477.4736 8532.4277 -7477.5254 8532.5088 -7477.5425 8532.625 c
-7477.5654 8532.7432 -7477.3135 8533.0352 -7477.1655 8533.0098 c
-7476.8223 8532.9502 -7476.8662 8533.5098 -7476.6328 8533.376 c
-7476.5679 8533.3398 -7476.6592 8532.9189 -7476.4199 8532.9258 c
-7476.0488 8532.9385 -7475.9858 8533.4814 -7475.7817 8533.4707 c
-7475.6406 8533.4639 -7475.8521 8532.8438 -7475.6328 8532.9209 c
-7475.4751 8532.9766 -7475.0063 8533.9619 -7474.9795 8533.8701 c
-7474.8975 8533.6025 -7475.0703 8533.0586 -7474.9409 8533.0684 c
-7474.7568 8533.083 -7474.5078 8533.9775 -7474.2544 8534.0977 c
-7474.1826 8534.1328 -7474.3774 8533.2607 -7474.1958 8533.2568 C
-7474.0898 8533.3066 -7473.7578 8534.1094 -7473.6274 8534.1582 C
-7473.5591 8534.1426 -7473.5879 8533.7852 -7473.5176 8533.7646 c
-7473.4688 8533.75 -7473.2817 8534.2256 -7473.21 8534.1836 c
-7473.1055 8534.123 -7473.2471 8533.6523 -7473.0889 8533.583 c
-7472.9175 8533.5088 -7472.4878 8534.5527 -7472.3486 8534.458 c
-7472.2769 8534.4102 -7472.3574 8533.8701 -7472.21 8533.9063 c
-7472.0718 8533.9385 -7471.9414 8534.2744 -7471.8081 8534.3027 c
-7471.7295 8534.3184 -7471.7935 8533.8516 -7471.7495 8533.834 c
-7471.5889 8533.7754 -7471.2329 8534.332 -7471.0688 8534.1836 c
-7470.8584 8533.9951 -7470.9395 8533.6299 -7470.8345 8533.6426 c
-7470.6274 8533.666 -7470.4912 8533.9033 -7470.4146 8533.8438 c
-7470.2642 8533.7285 -7470.3281 8533.4395 -7470.0527 8533.3525 c
-7469.8975 8533.3027 -7469.7935 8533.5947 -7469.7495 8533.5908 c
-7469.6738 8533.5879 -7469.6782 8533.4902 -7469.6665 8533.3848 c
-7469.6328 8533.1211 -7469.6064 8533.0596 -7469.4878 8533.0371 c
-7469.0854 8533.0137 -7468.5625 8532.9443 -7468.1807 8532.9355 c
-7467.6274 8532.9209 -7466.2607 8532.8975 -7466.1182 8532.8975 c
-7466 8532.873 -7465.7432 8533.0547 -7465.6689 8533.1211 c
-7465.4678 8533.3057 -7465.2998 8533.5195 -7464.9858 8533.7803 c
-7464.8906 8533.8613 -7464.8081 8533.8408 -7464.7378 8533.8164 c
-7464.5249 8533.7451 -7464.4585 8533.6934 -7464.2202 8533.6621 c
-7463.9175 8533.6191 -7463.4272 8533.709 -7463.1245 8533.8027 c
-7462.6035 8533.9619 -7462.5264 8533.9844 -7462.0977 8533.9355 c
-7461.6992 8533.8896 -7461.0586 8533.8184 -7461.0479 8533.4707 c
-7461.0415 8533.2559 -7460.9414 8533.1035 -7460.5742 8532.6719 c
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 56)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7455.9722 8545.6602 m
-7455.9722 8519.6328 L
-7482 8519.6328 L
-7482 8545.6602 L
-7455.9722 8545.6602 L
n
0 Ap
0 R
0.597742 0.537865 0.64184 0.350469 K
0.375 w-7464.6455 8532.6494 m
-7455.9736 8532.6494 l
S
-7468.9839 8545.6602 m
-7468.9839 8536.9844 l
S
0.7084 0.636438 0.515526 0.381872 K
1.125 w-7464.7202 8528.3105 m
-7455.9727 8528.3105 l
S
-7473.3232 8545.6592 m
-7473.3232 8536.3057 l
S
0.64 0.650477 0.701045 0.510735 K
-7464.6504 8545.6592 m
-7464.6504 8543.2471 l
-7461.9937 8543.0234 -7460.3096 8541.3203 v
-7458.6064 8539.5938 -7458.3774 8536.9883 y
-7455.9727 8536.9883 l
S
*u
1 D
0 O
0.7084 0.636438 0.515526 0.381872 k
1 w-7472.8418 8529.8457 m
-7472.8418 8529.9102 -7472.8218 8529.9512 -7472.7783 8529.9512 c
-7472.6943 8529.9512 -7472.4634 8529.6143 -7472.3994 8529.6143 c
-7472.3154 8529.6143 -7472.2729 8529.6563 -7472.2729 8529.7617 c
-7472.2729 8529.8457 -7472.5264 8530.7529 y
-7472.5264 8530.7939 -7472.5264 8530.7939 -7472.5049 8530.7939 c
-7472.4414 8530.7939 -7472.0615 8530.2471 -7471.9351 8530.2471 c
-7471.9146 8530.2471 -7471.8936 8530.2676 -7471.8936 8530.2891 c
-7472.1675 8531.1953 -7472.1675 8531.3857 v
-7472.1675 8531.4492 -7472.1675 8531.4707 -7472.1465 8531.4707 c
-7472.1055 8531.4707 -7471.6826 8530.9004 -7471.5562 8530.9004 c
-7471.5352 8530.9004 -7471.5137 8530.9209 -7471.5137 8530.9424 c
-7471.5137 8531.0059 -7471.7666 8531.7441 -7471.7666 8531.9121 c
-7471.7666 8531.9551 -7471.7666 8531.9551 -7471.7446 8531.9551 c
-7471.6826 8531.9551 -7471.4722 8531.7441 -7471.4297 8531.7441 c
-7471.4082 8531.7441 -7471.3882 8531.7656 -7471.3882 8531.7861 c
-7471.3882 8531.8066 -7471.4927 8532.166 -7471.4927 8532.25 c
-7471.4927 8532.2715 -7471.4927 8532.2715 -7471.4722 8532.2715 c
-7471.4297 8532.2715 -7471.0918 8531.9121 -7471.0078 8531.9121 c
-7470.9658 8531.9121 -7470.9233 8531.9551 -7470.9233 8532.0391 c
-7470.9233 8532.1875 -7471.1138 8532.9043 -7471.1138 8532.9463 c
-7471.1138 8533.0303 -7471.0918 8533.0723 -7471.0498 8533.0723 c
-7470.9658 8533.0723 -7470.7119 8532.7559 -7470.6494 8532.7559 c
-7470.5854 8532.7559 -7470.5439 8532.7764 -7470.5439 8532.8408 c
-7470.5854 8533.2617 L
-7470.5854 8533.3262 -7470.5854 8533.3457 -7470.5654 8533.3457 c
-7470.5225 8533.3457 -7470.2915 8533.0518 -7470.2065 8533.0518 c
-7470.1006 8533.0518 -7470.1006 8533.5371 -7470.1006 8533.5996 c
-7470.1006 8533.7051 -7470.0166 8533.7891 -7469.8896 8533.7891 c
-7469.8057 8533.7891 -7469.4678 8533.5576 -7469.4473 8533.5576 c
-7469.3623 8533.5576 -7469.3198 8534 -7469.2568 8534 c
-7469.1943 8534 -7468.9199 8533.873 -7468.8564 8533.873 c
-7468.6455 8533.873 -7468.6035 8533.959 -7468.6035 8534.127 c
-7468.6255 8534.2744 L
-7468.6255 8534.3164 -7468.6035 8534.3164 -7468.5835 8534.3164 c
-7468.4985 8534.3164 -7468.2241 8534.042 -7468.1392 8534.042 c
-7467.9287 8534.042 -7465.8198 8536.1094 -7465.5454 8536.3828 c
-7465.3984 8536.5508 -7465.3984 8536.8467 -7465.3984 8536.9736 c
-7465.3984 8537.8379 -7465.3984 8537.9219 -7465.2295 8538.0059 c
-7464.5977 8538.2598 -7464.5127 8538.4072 -7463.7334 8539.6934 c
-7463.6479 8539.8408 -7462.7407 8540.4531 -7462.5942 8540.4531 c
-7462.4878 8540.4531 -7462.1094 8540.1992 -7462.0239 8540.1992 c
-7461.9194 8540.1992 -7461.8135 8540.2627 -7461.8135 8540.4307 c
-7461.8135 8540.874 -7462.3408 8541.3809 -7462.9312 8541.3809 c
-7463.7534 8541.3809 -7464.0913 8540.6836 -7464.1338 8540.2852 c
-7464.1543 8540.1367 -7464.2393 8540.0518 -7464.3447 8540.0518 c
-7464.3862 8540.0518 -7464.4287 8540.0723 -7464.4702 8540.1367 c
-7464.9561 8540.9375 -7465.9473 8541.3809 -7466.7065 8541.3809 c
-7467.7393 8541.3809 -7468.8774 8540.748 -7469.3418 8540.4746 c
-7469.7842 8540.2217 -7470.4814 8540.0518 -7470.8809 8540.0518 c
-7471.3242 8540.0518 -7471.3662 8540.1992 -7471.3662 8540.4531 c
-7471.3662 8540.6006 -7470.9023 8541.042 -7470.9023 8541.1699 c
-7470.9023 8541.2959 -7471.0498 8541.3809 -7471.4082 8541.3809 c
-7471.8936 8541.3809 -7472.5679 8540.6631 -7472.5679 8539.8838 c
-7472.5679 8539.2715 -7471.7666 8538.7451 -7471.3022 8538.7451 c
-7470.3755 8538.7451 -7470.0942 8539.1035 -7469.5264 8539.5674 c
-7469.4414 8539.6299 -7469.3774 8539.6523 -7469.3359 8539.6523 c
-7469.1895 8539.6523 -7469.1895 8538.5547 -7469.1895 8538.4297 c
-7469.1895 8538.2803 -7469.2729 8538.2178 -7469.3774 8538.2178 c
-7471.7822 8538.2178 -7476.6592 8536.9941 -7478.3672 8530.8379 c
-7478.4297 8530.626 -7478.5361 8530.5215 -7478.6406 8530.5215 c
-7478.7881 8530.5215 -7479.7793 8531.3643 -7479.7793 8532.9463 c
-7479.7793 8534.7803 -7478.5767 8535.75 -7477.9873 8535.75 c
-7477.8398 8535.75 -7477.6494 8535.7295 -7477.6494 8535.5811 c
-7477.6494 8535.5186 -7477.6929 8535.4551 -7477.7759 8535.3496 c
-7478.1143 8535.0137 -7478.3672 8534.3799 -7478.3672 8534.0635 c
-7478.3672 8533.8516 -7478.2607 8533.6836 -7478.1143 8533.6836 c
-7477.9033 8533.6836 -7477.5654 8534.6328 -7477.46 8534.7803 c
-7477.3335 8534.9912 -7476.9546 8535.3711 -7476.2378 8535.8984 c
-7475.4995 8536.4238 -7474.0654 8537.7324 -7474.0654 8538.9971 c
-7474.0654 8540.3691 -7475.1191 8541.2754 -7475.9209 8541.2754 c
-7476.7007 8541.2754 -7477.6714 8540.748 -7478.0713 8540.2627 c
-7478.7041 8539.5254 -7479.3154 8538.9551 -7479.8218 8538.9551 c
-7480.1592 8538.9551 -7480.3066 8539.166 -7480.3066 8539.377 c
-7480.3066 8539.7139 -7480.0537 8539.9463 -7479.5479 8539.9883 c
-7478.9575 8540.0313 -7478.8936 8540.4531 -7478.8936 8540.7891 c
-7478.8936 8541.0635 -7479.4209 8541.3809 -7479.8433 8541.3809 c
-7480.4751 8541.3809 -7481.2974 8540.6836 -7481.2974 8538.8506 c
-7481.2974 8537.3525 -7480.0537 8536.8896 -7479.5679 8536.8896 c
-7479.1265 8536.8896 -7478.4722 8536.9736 -7478.0928 8537.3105 c
-7476.8066 8538.5137 -7476.1318 8538.7227 -7475.5835 8538.7227 c
-7475.3721 8538.7227 -7475.2881 8538.7227 -7475.2881 8538.8711 c
-7475.2881 8539.1875 -7476.0474 8539.377 -7476.1318 8539.3984 c
-7476.3423 8539.4609 -7476.5103 8539.6934 -7476.5103 8539.9043 c
-7476.5103 8540.3896 -7476.2378 8540.4102 -7475.8774 8540.4102 c
-7475.5215 8540.4102 -7474.8042 8540.0518 -7474.8042 8538.8506 c
-7474.8042 8537.8594 -7475.9424 8536.6992 -7476.4058 8536.4678 c
-7476.7007 8536.2979 -7477.5874 8536.3203 -7477.9458 8536.2773 c
-7478.6406 8536.1924 -7480.4121 8535.2451 -7480.4121 8532.7559 c
-7480.4336 8531.3428 -7479.1265 8530.0156 -7478.8511 8529.8262 c
-7478.6826 8529.7188 -7478.5986 8529.5928 -7478.5986 8529.4238 c
-7478.5986 8529.2129 -7478.6626 8526.2822 -7478.9995 8526.2822 c
-7479.4424 8526.2822 -7479.5054 8526.2822 -7479.5054 8526.4736 c
-7479.21 8527.5684 -7479.21 8527.8008 v
-7479.21 8528.1172 -7479.4424 8529.5928 -7480.3066 8529.5928 c
-7480.5806 8529.5928 -7481.0449 8529.3604 -7481.0449 8529.0449 c
-7481.0449 8528.75 -7480.3486 8527.5479 -7480.3486 8527.2734 c
-7480.3486 8526.7881 -7480.3921 8526.7676 -7481.0654 8526.1563 c
-7481.2559 8526.0088 -7481.3193 8525.8828 -7481.3193 8525.6914 c
-7481.3193 8525.5234 -7481.2134 8525.3955 -7481.0449 8525.3955 c
-7480.8975 8525.3955 -7480.3281 8525.6719 -7480.2017 8525.6914 c
-7480.0752 8525.6914 -7479.8433 8525.7129 -7479.6538 8525.7129 c
-7479.2734 8525.7129 -7479.0845 8525.5859 -7479.0845 8525.46 c
-7479.0845 8525.2275 -7479.0845 8524.5537 -7479.9263 8523.0977 c
-7480.1167 8522.7607 -7481.2974 8521.4326 -7481.2974 8521.0947 c
-7481.2974 8520.9258 -7481.2134 8520.9063 -7481.1089 8520.9063 c
-7480.9185 8520.9063 -7480.4966 8521.3271 -7480.3706 8521.4746 c
-7479.1265 8522.8027 -7478.3042 8524.2363 -7477.9238 8525.502 c
-7477.8398 8525.8184 -7477.7344 8525.7344 -7477.5654 8525.7559 c
-7475.4155 8526.2617 -7473.3271 8528.7705 -7473.3271 8528.792 c
-7473.4326 8529.0654 -7473.4326 8529.1289 v
-7473.4326 8529.2559 -7473.3271 8529.2773 -7473.3057 8529.2773 c
-7473.2432 8529.2773 -7473.0527 8529.0654 -7473.0103 8529.0654 c
-7472.9058 8529.0654 -7472.7783 8529.1504 -7472.7783 8529.2979 C
-7472.8418 8529.8457 l
f
0 D
-7476.1104 8528.3496 m
-7475.5215 8528.3496 -7475.0986 8528.4551 -7474.6982 8528.7285 c
-7474.6553 8528.75 -7474.6138 8528.7705 -7474.5928 8528.7705 c
-7474.5498 8528.7705 -7474.5498 8528.75 -7474.5498 8528.707 c
-7474.5498 8528.2861 -7476.4272 8526.3262 -7477.5654 8526.3262 c
-7477.6289 8526.3262 -7477.6714 8526.3672 -7477.6714 8526.4297 c
-7477.6714 8526.6201 -7477.5874 8528.623 -7477.2495 8528.623 c
-7477.1865 8528.623 -7477.1016 8528.6016 -7477.0386 8528.5605 c
-7476.7007 8528.4121 -7476.4902 8528.3496 -7476.1104 8528.3496 c
f
-7475.5835 8531.1113 m
-7475.5835 8530.6895 -7475.5625 8530.2256 -7474.8662 8530.2256 c
-7474.2334 8530.2256 -7473.6431 8530.8799 -7473.4961 8531.0273 c
-7473.4326 8531.0693 -7473.3906 8531.0898 -7473.3486 8531.0898 c
-7473.3271 8531.0898 -7473.2847 8531.0479 -7473.2847 8531.0059 c
-7473.2847 8530.5625 -7474.6553 8528.8975 -7476.0049 8528.8975 c
-7476.2578 8528.8975 -7477.2705 8529.0654 -7477.2705 8529.6143 c
-7477.2705 8529.8672 -7476.8906 8531.2383 -7476.2793 8532.3135 c
-7474.9087 8534.8018 -7470.7119 8536.3604 -7468.8145 8536.3604 c
-7467.9072 8536.3828 -7467.6118 8536.0664 -7467.4863 8536.0449 c
-7467.4648 8536.0449 -7467.4438 8536.0244 -7467.4233 8536.0244 c
-7467.3174 8536.0244 -7467.1904 8536.0879 -7467.1904 8536.2354 c
-7467.1904 8536.2568 -7467.2119 8536.2568 v
-7467.3594 8537.3945 -7467.4014 8537.7959 -7467.4014 8539.0596 c
-7467.4014 8540.4531 -7467.4014 8540.5791 -7466.4321 8540.5791 c
-7465.1455 8540.5791 -7464.8506 8539.5039 -7464.8506 8539.2715 c
-7464.8506 8538.8506 -7465.4399 8538.5547 -7465.5889 8538.5547 c
-7465.7358 8538.5547 -7465.9058 8538.6621 -7465.9058 8538.8506 c
-7465.9058 8539.1455 -7465.9473 8539.293 -7466.2207 8539.293 c
-7466.4951 8539.293 -7466.4951 8538.9346 -7466.4951 8538.8281 c
-7466.4951 8538.5762 -7466.3896 8538.3232 -7466.1782 8538.1963 c
-7465.7998 8537.9434 -7465.7998 8537.543 -7465.7998 8537.332 c
-7465.7998 8537.2266 -7465.7998 8537.0996 -7465.8198 8536.9941 c
-7465.8418 8536.8262 -7467.7817 8534.7803 -7468.0977 8534.7803 c
-7468.2446 8534.7803 -7468.5615 8534.9268 -7469.4258 8534.9268 c
-7471.5767 8534.9268 -7472.5474 8533.1992 -7472.7378 8532.6719 c
-7472.9897 8531.9551 -7473.7915 8531.6592 -7474.0225 8531.6592 c
-7474.2129 8531.6592 -7474.2129 8531.7021 -7474.2129 8532.1025 c
-7474.2129 8532.1875 -7474.4238 8532.5234 y
-7474.4238 8532.7139 -7473.3906 8532.9668 -7473.3906 8533.1563 c
-7473.3906 8533.3262 -7473.5801 8533.3457 -7473.7271 8533.3457 c
-7473.8115 8533.3457 -7474.8882 8533.3457 -7475.3306 8532.5234 c
-7475.5415 8532.123 -7475.5835 8531.5547 -7475.5835 8531.1113 c
f
1 D
-7471.4927 8528.8555 m
-7471.4927 8528.8115 -7471.5137 8528.792 -7471.5352 8528.792 c
-7471.5986 8528.792 -7471.7666 8529.1289 -7471.8506 8529.1289 c
-7471.9146 8529.1289 -7471.9995 8529.0449 -7472.0415 8528.9385 c
-7472.0615 8528.8555 -7472.1255 8528.3906 -7472.21 8528.3906 c
-7472.2524 8528.3906 -7472.4209 8528.623 -7472.4634 8528.623 c
-7472.6104 8528.623 -7472.7158 8528.3906 -7472.7158 8528.1816 c
-7472.7158 8528.0752 -7472.7783 8528.0752 -7472.9263 8528.0752 c
-7473.5166 8528.0752 -7475.1406 8525.9033 -7475.5625 8524.1523 c
-7475.6055 8523.9844 -7475.5835 8523.8369 -7475.8994 8523.7305 c
-7478.0713 8522.9941 -7480.5176 8520.8418 -7480.5176 8520.7158 c
-7480.5176 8520.5684 -7480.4336 8520.4844 -7480.3066 8520.4844 c
-7480.2432 8520.4844 -7480.1592 8520.4844 -7479.6538 8520.8203 c
-7478.7681 8521.4111 -7476.7217 8522.6982 -7475.8994 8522.6982 c
-7475.6265 8522.6982 -7475.6055 8522.3398 -7475.6055 8522.0859 c
-7475.6055 8521.8955 -7475.6265 8521.6641 -7475.6265 8521.5176 c
-7475.6465 8521.2432 -7475.9634 8520.9258 -7475.9634 8520.7578 c
-7475.9634 8520.6104 -7475.8154 8520.5049 -7475.6465 8520.5049 c
-7475.4575 8520.5049 -7475.3306 8520.5264 -7475.1606 8520.7158 c
-7474.8662 8521.0527 -7474.7402 8521.2012 -7474.4238 8521.2012 c
-7474.1914 8521.2012 -7473.1377 8520.4844 -7472.8838 8520.4844 c
-7472.5679 8520.4844 -7472.1895 8520.9688 -7472.1895 8521.2646 c
-7472.1895 8522.002 -7473.0942 8522.5928 -7473.6431 8522.5928 c
-7474.0225 8522.5928 -7474.4438 8522.4668 -7474.6353 8522.2344 c
-7474.6982 8522.1699 -7474.7607 8522.1289 -7474.8242 8522.1289 c
-7474.9937 8522.1289 -7475.1191 8522.5928 -7475.1191 8522.6348 c
-7475.1191 8523.0576 -7472.2729 8523.1191 -7471.9146 8523.1191 c
-7471.7666 8523.1191 -7471.6401 8523.0352 -7471.5352 8522.8662 c
-7471.3447 8522.5723 -7470.1855 8521.3496 -7468.6255 8521.3496 c
-7466.79 8521.3496 -7465.0825 8522.6123 -7465.0825 8524.5107 c
-7465.0825 8524.6172 -7465.1245 8525.1641 -7465.1245 8525.1865 c
-7465.1245 8525.25 -7464.0063 8526.999 -7462.6782 8526.999 c
-7461.6245 8526.999 -7461.2656 8526.4102 -7461.2656 8525.9238 c
-7461.2656 8525.6914 -7461.3711 8525.0391 -7461.8984 8525.0391 c
-7462.1094 8525.0391 -7462.2144 8525.25 -7462.2144 8525.6289 c
-7462.2144 8525.7129 -7462.0039 8526.0928 -7462.0039 8526.1982 c
-7462.0039 8526.2402 -7462.0239 8526.2617 -7462.0879 8526.2617 c
-7462.4258 8526.2617 -7462.9521 8525.9033 -7463.1846 8525.25 c
-7463.4595 8524.5332 -7463.8594 8523.8369 -7464.1958 8523.4355 c
-7464.5127 8523.0781 -7464.6182 8522.4863 -7464.6182 8522.1494 c
-7464.6182 8521.6641 -7464.1338 8520.5049 -7462.4878 8520.5049 c
-7461.2871 8520.5049 -7460.4434 8521.2432 -7460.4434 8521.8545 c
-7460.4434 8522.4668 -7460.7598 8522.8457 -7461.2026 8522.8457 c
-7461.6455 8522.8457 -7461.9824 8522.5078 -7461.9824 8522.1699 c
-7461.9824 8521.4961 -7462.1514 8521.3496 -7462.4878 8521.3496 c
-7462.6992 8521.3496 -7462.8896 8521.4746 -7462.8896 8521.791 c
-7462.8896 8522.0234 -7462.8896 8522.4023 -7461.3711 8523.668 c
-7460.8857 8524.0684 -7460.4214 8524.7656 -7460.4214 8525.5449 c
-7460.4214 8526.3047 -7461.4561 8527.5049 -7462.6362 8527.5049 c
-7463.8594 8527.5049 -7464.6401 8526.7256 -7465.2515 8526.0088 c
-7465.5454 8525.6719 -7466.9814 8523.9844 -7467.0439 8523.9619 c
-7467.2334 8523.8145 -7467.3174 8523.6895 -7467.3174 8523.5625 c
-7467.3174 8523.457 -7467.2119 8523.3516 -7467.0854 8523.3516 c
-7466.8535 8523.3516 -7465.9058 8524.3008 -7465.8198 8524.3008 c
-7465.7568 8524.3008 -7465.7153 8524.2363 -7465.7153 8524.1523 c
-7465.7153 8523.3936 -7466.8535 8521.918 -7468.6255 8521.918 c
-7470.1006 8521.918 -7470.9863 8523.0352 -7470.9863 8523.0781 c
-7470.9863 8523.2041 -7470.8394 8523.3291 -7470.5225 8523.3936 c
-7466.6426 8524.1318 -7463.3955 8527.6816 -7463.3955 8532.2979 c
-7463.3955 8532.4043 -7463.2256 8532.4307 -7463.0786 8532.4307 c
-7462.7202 8532.4307 -7462.0879 8532.5098 -7462.0879 8532.2363 c
-7462.0879 8532.1299 -7462.1294 8532.0039 -7462.1934 8531.877 c
-7462.5518 8531.3066 -7462.8682 8531.1328 -7462.8682 8530.1816 c
-7462.8682 8529.7188 -7462.4878 8529.1924 -7461.8984 8529.1924 c
-7460.8657 8529.1924 -7460.4214 8530.2256 -7460.4214 8530.457 c
-7460.4214 8530.626 -7460.5073 8530.6895 -7460.5903 8530.6895 c
-7460.7178 8530.6895 -7461.2241 8530.1621 -7461.3711 8530.1621 c
-7461.5615 8530.1621 -7461.7085 8530.2041 -7461.7085 8530.6895 c
-7461.7085 8531.0273 -7460.4214 8534.7383 -7460.4214 8535.5391 c
-7460.4214 8536.1094 -7460.7598 8536.8057 -7461.6455 8537.3105 c
-7461.6875 8537.332 -7461.7085 8537.3525 -7461.7085 8537.3945 c
-7461.7085 8537.4785 -7461.5615 8537.585 -7461.4126 8537.626 c
-7460.8018 8537.7959 -7460.4214 8537.9014 -7460.4214 8538.8506 c
-7460.4214 8539.209 -7460.7598 8539.8838 -7461.0127 8539.8838 c
-7461.2026 8539.8838 -7461.2026 8539.8408 -7461.2026 8539.4824 c
-7461.2026 8539.335 -7461.2446 8539.2295 -7461.3926 8539.124 c
-7461.7085 8538.9131 -7461.7295 8538.8711 -7461.8135 8538.3867 c
-7461.8774 8538.0703 -7462.0039 8537.9844 -7463.1426 8537.3525 c
-7463.5854 8537.0791 -7463.6904 8536.8467 -7463.7744 8536.6152 c
-7463.8594 8536.4238 -7463.9233 8536.4238 -7464.4287 8536.4238 c
-7464.9561 8536.4238 -7467.5073 8533.7051 -7467.5073 8533.5781 c
-7467.5073 8533.5156 -7467.3809 8533.2197 -7467.3809 8533.1563 c
-7467.3809 8533.0938 -7467.4014 8533.0518 -7467.4438 8533.0518 c
-7467.4863 8533.0518 -7467.6338 8533.2617 -7467.6758 8533.2617 c
-7467.7817 8533.2617 -7467.7817 8533.0723 -7467.7817 8532.9238 c
-7467.7817 8532.8203 -7467.5703 8532.25 -7467.5703 8532.1025 c
-7467.5703 8532.0186 -7467.5918 8531.9551 -7467.6338 8531.9551 c
-7467.7178 8531.9551 -7467.9072 8532.418 -7467.9922 8532.418 c
-7468.0342 8532.418 -7468.0762 8532.377 -7468.0762 8532.25 c
-7468.0762 8532.1025 -7467.8862 8531.3857 y
-7467.8862 8531.3223 -7467.9072 8531.2168 -7467.9502 8531.2168 c
-7468.0342 8531.2168 -7468.1826 8531.6172 -7468.2666 8531.6172 c
-7468.3286 8531.6172 -7468.3926 8531.5332 -7468.3926 8531.3857 c
-7468.3926 8531.3008 -7468.2446 8530.8799 -7468.2446 8530.7744 c
-7468.2446 8530.7109 -7468.2666 8530.6465 -7468.3086 8530.6465 c
-7468.3506 8530.6465 -7468.5835 8531.2598 -7468.7095 8531.2598 c
-7468.7935 8531.2598 -7468.8994 8531.1523 -7468.8994 8531.0479 c
-7468.8994 8530.9639 -7468.7729 8530.6055 -7468.7729 8530.5215 c
-7468.7729 8530.4785 -7468.7729 8530.457 -7468.7935 8530.457 c
-7468.8774 8530.457 -7469.0254 8530.9424 -7469.1104 8530.9424 c
-7469.3418 8530.9424 -7469.3623 8530.5215 -7469.3623 8530.3311 c
-7469.3623 8530.2471 -7469.2998 8529.9102 -7469.2998 8529.8457 c
-7469.2998 8529.7832 -7469.3198 8529.7617 -7469.3418 8529.7617 c
-7469.4897 8529.7617 -7469.6782 8530.5625 -7469.8271 8530.5625 c
-7470.0386 8530.5625 -7470.0386 8530.373 -7470.0386 8530.1416 c
-7470.0166 8529.6143 L
-7470.0166 8529.5928 -7470.0386 8529.5723 y
-7470.0586 8529.5723 -7470.1006 8529.5928 -7470.1226 8529.6563 c
-7470.1855 8529.8672 -7470.3115 8530.2891 -7470.5225 8530.2891 c
-7470.6694 8530.2891 -7470.8174 8530.1201 -7470.8174 8529.9736 c
-7470.8174 8529.7402 -7470.7119 8529.3604 -7470.7119 8529.1289 c
-7470.7119 8529.0654 -7470.7334 8529.0449 -7470.7754 8529.0449 c
-7470.8608 8529.0449 -7470.9863 8529.4863 -7471.0278 8529.5723 c
-7471.0918 8529.6563 -7471.1553 8529.6777 -7471.2192 8529.6777 c
-7471.5352 8529.6777 -7471.5352 8529.3604 -7471.5352 8529.2129 C
-7471.4927 8528.8555 l
f
0 D
-7472.8633 8524.4902 m
-7472.8633 8524.2578 -7474.8042 8524.0684 -7474.8662 8524.0684 c
-7474.9722 8524.0684 -7475.0352 8524.1318 -7475.0352 8524.2363 c
-7475.0352 8525.1016 -7473.2847 8527.3369 -7472.8633 8527.3369 c
-7472.7998 8527.3369 -7472.7783 8527.3164 -7472.7783 8527.2529 c
-7473.2002 8526.0088 -7473.2002 8525.7559 v
-7473.2002 8525.376 -7473.0942 8525.123 -7472.9058 8524.7012 c
-7472.8838 8524.6172 -7472.8633 8524.5537 -7472.8633 8524.4902 c
f
-7464.1338 8535.9395 m
-7463.9858 8535.9395 -7463.4795 8535.4346 -7463.3325 8535.4346 c
-7463.2065 8535.4346 -7463.0791 8535.5186 -7463.0791 8535.666 c
-7463.0791 8535.75 -7463.2695 8536.1924 -7463.2695 8536.2979 c
-7463.2695 8536.6563 -7462.8896 8536.9531 -7462.5098 8536.9531 c
-7462.1094 8536.9531 -7460.9702 8536.6357 -7460.9702 8535.4121 c
-7460.9702 8534.3164 -7461.3926 8534.3164 -7463.0366 8534.3164 c
-7463.3955 8534.3164 -7465.0615 8534.5059 -7465.3145 8534.5059 c
-7465.4399 8534.5059 -7465.4834 8534.3369 -7465.4834 8534.21 c
-7465.4834 8534.1689 -7465.4834 8534.127 -7465.4614 8534.1055 c
-7465.3984 8533.7266 -7465.1675 8533.1777 -7465.1675 8532.7979 c
-7465.1675 8528.3496 -7469.2998 8524.4902 -7471.7666 8524.4902 c
-7472.4209 8524.4902 -7472.6519 8525.292 -7472.6519 8525.7129 c
-7472.6519 8527.4424 -7470.6694 8528.4746 -7470.4175 8528.4746 c
-7470.3545 8528.4746 -7470.3335 8528.4551 -7470.3335 8528.4121 c
-7470.3335 8528.3701 -7470.3545 8528.3281 -7470.3975 8528.2861 c
-7470.5225 8528.1172 -7471.0498 8527.5049 -7471.0498 8526.873 c
-7471.0498 8526.5352 -7470.7554 8526.0928 -7469.9951 8526.0928 c
-7468.7305 8526.0928 -7468.1826 8527.4424 -7468.1826 8527.8008 c
-7468.1826 8527.9492 -7468.2446 8528.1592 -7468.4561 8528.1592 c
-7468.6035 8528.1592 -7469.0049 8527.5049 -7469.1519 8527.5049 c
-7469.2158 8527.5049 -7469.4473 8527.6318 -7469.5103 8527.6318 c
-7469.5942 8527.6318 -7469.6582 8527.6113 -7469.7422 8527.6113 c
-7469.8057 8527.6113 -7469.8481 8527.6738 -7469.8481 8527.7793 c
-7469.8481 8528.1387 -7469.3623 8528.707 -7468.8774 8528.9609 c
-7467.9722 8529.4238 -7466.6226 8530.7529 -7466.6226 8532.208 c
-7466.6226 8532.6289 -7466.6846 8533.0303 -7466.6846 8533.3672 c
-7466.6846 8533.916 -7465.7568 8534.7803 -7464.8081 8535.666 c
-7464.6401 8535.8135 -7464.3862 8535.9395 -7464.1338 8535.9395 c
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 57)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7455.9722 8545.6602 m
-7455.9722 8519.6328 L
-7482 8519.6328 L
-7482 8545.6602 L
-7455.9722 8545.6602 L
n
0 Ap
0 R
0.597742 0.537865 0.64184 0.350469 K
0.375 w-7464.6455 8532.6494 m
-7455.9736 8532.6494 l
S
-7468.9839 8545.6602 m
-7468.9839 8536.9844 l
S
0.64 0.650477 0.701045 0.510735 K
1.125 w-7464.7202 8528.3105 m
-7455.9727 8528.3105 l
S
-7473.3232 8545.6602 m
-7473.3232 8536.3057 l
S
0.7084 0.636438 0.515526 0.381872 K
-7464.6504 8545.6602 m
-7464.6504 8543.2471 l
-7461.9937 8543.0234 -7460.3096 8541.3203 v
-7458.6064 8539.5938 -7458.3774 8536.9883 y
-7455.9727 8536.9883 l
S
*u
0 O
0.7084 0.636438 0.515526 0.381872 k
1 w-7472.7783 8529.2979 m
-7472.7783 8529.1504 -7472.9058 8529.0654 -7473.0103 8529.0654 c
-7473.0527 8529.0654 -7473.2432 8529.2773 -7473.3057 8529.2773 c
-7473.3271 8529.2773 -7473.4326 8529.2559 -7473.4326 8529.1289 c
-7473.4326 8529.0654 -7473.3271 8528.792 y
-7473.3271 8528.7705 -7475.4155 8526.2617 -7477.5654 8525.7559 c
-7477.7344 8525.7344 -7477.8398 8525.8184 -7477.9238 8525.502 c
-7478.3042 8524.2363 -7479.1265 8522.8027 -7480.3706 8521.4746 c
-7480.4966 8521.3281 -7480.9185 8520.9063 -7481.1089 8520.9063 c
-7481.2134 8520.9063 -7481.2974 8520.9258 -7481.2974 8521.0947 c
-7481.2974 8521.4326 -7480.1167 8522.7607 -7479.9263 8523.0977 c
-7479.0845 8524.5537 -7479.0845 8525.2275 -7479.0845 8525.46 c
-7479.0845 8525.5859 -7479.2734 8525.7129 -7479.6538 8525.7129 c
-7479.8433 8525.7129 -7480.0752 8525.6914 -7480.2017 8525.6914 c
-7480.3281 8525.6719 -7480.8975 8525.3955 -7481.0449 8525.3955 c
-7481.2134 8525.3955 -7481.3193 8525.5234 -7481.3193 8525.6914 c
-7481.3193 8525.8828 -7481.2559 8526.0088 -7481.0654 8526.1563 c
-7480.3921 8526.7676 -7480.3486 8526.7881 -7480.3486 8527.2734 c
-7480.3486 8527.5479 -7481.0449 8528.75 -7481.0449 8529.0449 c
-7481.0449 8529.3604 -7480.5806 8529.5928 -7480.3066 8529.5928 c
-7479.4424 8529.5928 -7479.21 8528.1172 -7479.21 8527.8008 c
-7479.21 8527.5684 -7479.5054 8526.4736 y
-7479.5054 8526.2822 -7479.4424 8526.2822 -7478.9995 8526.2822 c
-7478.6626 8526.2822 -7478.5986 8529.2129 -7478.5986 8529.4238 c
-7478.5986 8529.5928 -7478.6826 8529.7188 -7478.8511 8529.8262 c
-7479.1265 8530.0156 -7480.4336 8531.3428 -7480.4121 8532.7559 c
-7480.4121 8535.2451 -7478.6406 8536.1924 -7477.9458 8536.2773 c
-7477.5874 8536.3203 -7476.7007 8536.2979 -7476.4058 8536.4678 c
-7475.9424 8536.6992 -7474.8042 8537.8594 -7474.8042 8538.8506 c
-7474.8042 8540.0518 -7475.5215 8540.4102 -7475.8774 8540.4102 c
-7476.2378 8540.4102 -7476.5103 8540.3896 -7476.5103 8539.9043 c
-7476.5103 8539.6934 -7476.3423 8539.4609 -7476.1318 8539.3984 c
-7476.0474 8539.377 -7475.2881 8539.1875 -7475.2881 8538.8711 c
-7475.2881 8538.7227 -7475.3721 8538.7227 -7475.5835 8538.7227 c
-7476.1318 8538.7227 -7476.8066 8538.5137 -7478.0928 8537.3105 c
-7478.4722 8536.9736 -7479.1265 8536.8896 -7479.5679 8536.8896 c
-7480.0537 8536.8896 -7481.2974 8537.3525 -7481.2974 8538.8506 c
-7481.2974 8540.6836 -7480.4751 8541.3809 -7479.8433 8541.3809 c
-7479.4209 8541.3809 -7478.8936 8541.0635 -7478.8936 8540.7891 c
-7478.8936 8540.4531 -7478.9575 8540.0313 -7479.5479 8539.9883 c
-7480.0537 8539.9463 -7480.3066 8539.7139 -7480.3066 8539.377 c
-7480.3066 8539.166 -7480.1592 8538.9551 -7479.8218 8538.9551 c
-7479.3154 8538.9551 -7478.7041 8539.5254 -7478.0713 8540.2627 c
-7477.6714 8540.748 -7476.7007 8541.2754 -7475.9209 8541.2754 c
-7475.1191 8541.2754 -7474.0654 8540.3691 -7474.0654 8538.9971 c
-7474.0654 8537.7324 -7475.4995 8536.4238 -7476.2378 8535.8984 c
-7476.9546 8535.3711 -7477.3335 8534.9912 -7477.46 8534.7803 c
-7477.5654 8534.6328 -7477.9033 8533.6836 -7478.1143 8533.6836 c
-7478.2607 8533.6836 -7478.3672 8533.8516 -7478.3672 8534.0635 c
-7478.3672 8534.3799 -7478.1143 8535.0137 -7477.7759 8535.3496 c
-7477.6929 8535.4551 -7477.6494 8535.5186 -7477.6494 8535.5811 c
-7477.6494 8535.7295 -7477.8398 8535.75 -7477.9873 8535.75 c
-7478.5767 8535.75 -7479.7793 8534.7803 -7479.7793 8532.9463 c
-7479.7793 8531.3643 -7478.7881 8530.5215 -7478.6406 8530.5215 c
-7478.5361 8530.5215 -7478.4297 8530.626 -7478.3672 8530.8379 c
-7476.6592 8536.9941 -7471.7822 8538.2178 -7469.3774 8538.2178 c
-7469.2729 8538.2178 -7469.1895 8538.2803 -7469.1895 8538.4297 c
-7469.1895 8538.5547 -7469.1895 8539.6523 -7469.3359 8539.6523 c
-7469.3774 8539.6523 -7469.4414 8539.6299 -7469.5264 8539.5674 c
-7470.0942 8539.1035 -7470.3755 8538.7451 -7471.3022 8538.7451 c
-7471.7666 8538.7451 -7472.5679 8539.2715 -7472.5679 8539.8838 c
-7472.5679 8540.6631 -7471.8936 8541.3809 -7471.4082 8541.3809 c
-7471.0498 8541.3809 -7470.9023 8541.2959 -7470.9023 8541.1699 c
-7470.9023 8541.042 -7471.3662 8540.6006 -7471.3662 8540.4531 c
-7471.3662 8540.1992 -7471.3242 8540.0518 -7470.8809 8540.0518 c
-7470.4814 8540.0518 -7469.7842 8540.2217 -7469.3418 8540.4746 c
-7468.8774 8540.748 -7467.7393 8541.3809 -7466.7065 8541.3809 c
-7465.9473 8541.3809 -7464.9561 8540.9375 -7464.4702 8540.1367 c
-7464.4287 8540.0723 -7464.3862 8540.0518 -7464.3447 8540.0518 c
-7464.2393 8540.0518 -7464.1543 8540.1367 -7464.1338 8540.2852 c
-7464.0913 8540.6836 -7463.7534 8541.3809 -7462.9312 8541.3809 c
-7462.3408 8541.3809 -7461.8135 8540.874 -7461.8135 8540.4307 c
-7461.8135 8540.2627 -7461.9194 8540.1992 -7462.0239 8540.1992 c
-7462.1094 8540.1992 -7462.4878 8540.4531 -7462.5942 8540.4531 c
-7462.7407 8540.4531 -7463.6479 8539.8408 -7463.7334 8539.6934 c
-7464.5127 8538.4072 -7464.5977 8538.2598 -7465.2295 8538.0059 c
-7465.3984 8537.9219 -7465.3984 8537.8379 -7465.3984 8536.9736 c
-7465.3984 8536.8467 -7465.3984 8536.5508 -7465.5454 8536.3828 c
-7465.8198 8536.1094 -7467.9287 8534.042 -7468.1392 8534.042 c
-7468.2241 8534.042 -7468.4985 8534.3164 -7468.5835 8534.3164 c
-7468.6035 8534.3164 -7468.6255 8534.3164 -7468.6255 8534.2744 C
-7468.6035 8534.127 l
-7468.6035 8533.959 -7468.6455 8533.873 -7468.8564 8533.873 c
-7468.9199 8533.873 -7469.1943 8534 -7469.2568 8534 c
-7469.3198 8534 -7469.3623 8533.5576 -7469.4473 8533.5576 c
-7469.4678 8533.5576 -7469.8057 8533.7891 -7469.8896 8533.7891 c
-7470.0166 8533.7891 -7470.1006 8533.7051 -7470.1006 8533.5996 c
-7470.1006 8533.5371 -7470.1006 8533.0518 -7470.2065 8533.0518 c
-7470.2915 8533.0518 -7470.5225 8533.3457 -7470.5654 8533.3457 c
-7470.5854 8533.3457 -7470.5854 8533.3262 -7470.5854 8533.2617 C
-7470.5439 8532.8408 l
-7470.5439 8532.7764 -7470.5854 8532.7559 -7470.6494 8532.7559 c
-7470.7119 8532.7559 -7470.9658 8533.0723 -7471.0498 8533.0723 c
-7471.0918 8533.0723 -7471.1138 8533.0303 -7471.1138 8532.9463 c
-7471.1138 8532.9043 -7470.9233 8532.1875 -7470.9233 8532.0391 c
-7470.9233 8531.9551 -7470.9658 8531.9121 -7471.0078 8531.9121 c
-7471.0918 8531.9121 -7471.4297 8532.2715 -7471.4722 8532.2715 c
-7471.4927 8532.2715 -7471.4927 8532.2715 -7471.4927 8532.25 c
-7471.4927 8532.166 -7471.3882 8531.8066 -7471.3882 8531.7871 c
-7471.3882 8531.7656 -7471.4082 8531.7441 -7471.4297 8531.7441 c
-7471.4722 8531.7441 -7471.6826 8531.9551 -7471.7446 8531.9551 c
-7471.7666 8531.9551 -7471.7666 8531.9551 -7471.7666 8531.9121 c
-7471.7666 8531.7441 -7471.5137 8531.0059 -7471.5137 8530.9424 c
-7471.5137 8530.9209 -7471.5352 8530.9004 -7471.5562 8530.9004 c
-7471.6826 8530.9004 -7472.1055 8531.4707 -7472.1465 8531.4707 c
-7472.1675 8531.4707 -7472.1675 8531.4492 -7472.1675 8531.3857 c
-7472.1675 8531.1953 -7471.8936 8530.2891 y
-7471.8936 8530.2676 -7471.9146 8530.2471 -7471.9351 8530.2471 c
-7472.0615 8530.2471 -7472.4414 8530.7939 -7472.5049 8530.7939 c
-7472.5264 8530.7939 -7472.5264 8530.7939 -7472.5264 8530.7529 c
-7472.2729 8529.8457 -7472.2729 8529.7617 v
-7472.2729 8529.6563 -7472.3154 8529.6143 -7472.3994 8529.6143 c
-7472.4634 8529.6143 -7472.6943 8529.9512 -7472.7783 8529.9512 c
-7472.8218 8529.9512 -7472.8418 8529.9102 -7472.8418 8529.8457 c
-7472.7783 8529.2979 L
f
1 D
-7477.0386 8528.5605 m
-7477.1016 8528.6016 -7477.1865 8528.623 -7477.2495 8528.623 c
-7477.5874 8528.623 -7477.6714 8526.6201 -7477.6714 8526.4297 c
-7477.6714 8526.3672 -7477.6289 8526.3262 -7477.5654 8526.3262 c
-7476.4272 8526.3262 -7474.5498 8528.2871 -7474.5498 8528.707 c
-7474.5498 8528.75 -7474.5498 8528.7705 -7474.5928 8528.7705 c
-7474.6138 8528.7705 -7474.6553 8528.75 -7474.6982 8528.7285 c
-7475.0986 8528.4551 -7475.5215 8528.3496 -7476.1104 8528.3496 c
-7476.4902 8528.3496 -7476.7007 8528.4121 -7477.0386 8528.5605 c
f
-7475.3306 8532.5234 m
-7474.8882 8533.3457 -7473.8115 8533.3457 -7473.7271 8533.3457 c
-7473.5801 8533.3457 -7473.3906 8533.3262 -7473.3906 8533.1563 c
-7473.3906 8532.9668 -7474.4238 8532.7139 -7474.4238 8532.5234 c
-7474.2129 8532.1875 -7474.2129 8532.1025 v
-7474.2129 8531.7031 -7474.2129 8531.6602 -7474.0225 8531.6602 c
-7473.7915 8531.6602 -7472.9897 8531.9551 -7472.7378 8532.6719 c
-7472.5474 8533.1992 -7471.5767 8534.9268 -7469.4258 8534.9268 c
-7468.5615 8534.9268 -7468.2446 8534.7803 -7468.0977 8534.7803 c
-7467.7817 8534.7803 -7465.8418 8536.8262 -7465.8198 8536.9941 c
-7465.7998 8537.0996 -7465.7998 8537.2266 -7465.7998 8537.332 c
-7465.7998 8537.543 -7465.7998 8537.9434 -7466.1782 8538.1963 c
-7466.3896 8538.3232 -7466.4951 8538.5762 -7466.4951 8538.8281 c
-7466.4951 8538.9346 -7466.4951 8539.293 -7466.2207 8539.293 c
-7465.9473 8539.293 -7465.9058 8539.1455 -7465.9058 8538.8506 c
-7465.9058 8538.6621 -7465.7358 8538.5547 -7465.5889 8538.5547 c
-7465.4399 8538.5547 -7464.8506 8538.8506 -7464.8506 8539.2715 c
-7464.8506 8539.5039 -7465.1455 8540.5791 -7466.4321 8540.5791 c
-7467.4014 8540.5791 -7467.4014 8540.4531 -7467.4014 8539.0596 c
-7467.4014 8537.7959 -7467.3594 8537.3945 -7467.2119 8536.2568 c
-7467.1904 8536.2568 -7467.1904 8536.2354 y
-7467.1904 8536.0879 -7467.3174 8536.0244 -7467.4233 8536.0244 c
-7467.4438 8536.0244 -7467.4648 8536.0449 -7467.4863 8536.0449 c
-7467.6118 8536.0664 -7467.9072 8536.3828 -7468.8145 8536.3604 c
-7470.7119 8536.3604 -7474.9087 8534.8018 -7476.2793 8532.3135 c
-7476.8906 8531.2383 -7477.2705 8529.8672 -7477.2705 8529.6143 c
-7477.2705 8529.0654 -7476.2578 8528.8975 -7476.0049 8528.8975 c
-7474.6553 8528.8975 -7473.2847 8530.5625 -7473.2847 8531.0059 c
-7473.2847 8531.0479 -7473.3271 8531.0898 -7473.3486 8531.0898 c
-7473.3906 8531.0898 -7473.4326 8531.0693 -7473.4961 8531.0273 c
-7473.6431 8530.8799 -7474.2334 8530.2256 -7474.8662 8530.2256 c
-7475.5625 8530.2256 -7475.5835 8530.6895 -7475.5835 8531.1113 c
-7475.5835 8531.5547 -7475.5415 8532.123 -7475.3306 8532.5234 c
f
0 D
-7471.5352 8529.2129 m
-7471.5352 8529.3604 -7471.5352 8529.6777 -7471.2192 8529.6777 c
-7471.1553 8529.6777 -7471.0918 8529.6563 -7471.0278 8529.5723 c
-7470.9863 8529.4863 -7470.8608 8529.0449 -7470.7754 8529.0449 c
-7470.7334 8529.0449 -7470.7119 8529.0654 -7470.7119 8529.1289 c
-7470.7119 8529.3604 -7470.8174 8529.7402 -7470.8174 8529.9736 c
-7470.8174 8530.1201 -7470.6694 8530.2891 -7470.5225 8530.2891 c
-7470.3115 8530.2891 -7470.1855 8529.8672 -7470.1226 8529.6563 c
-7470.1006 8529.5928 -7470.0586 8529.5723 -7470.0386 8529.5723 c
-7470.0166 8529.5928 -7470.0166 8529.6143 V
-7470.0386 8530.1416 l
-7470.0386 8530.373 -7470.0386 8530.5625 -7469.8271 8530.5625 c
-7469.6782 8530.5625 -7469.4897 8529.7617 -7469.3418 8529.7617 c
-7469.3198 8529.7617 -7469.2998 8529.7832 -7469.2998 8529.8457 c
-7469.2998 8529.9102 -7469.3623 8530.2471 -7469.3623 8530.3311 c
-7469.3623 8530.5215 -7469.3418 8530.9424 -7469.1104 8530.9424 c
-7469.0254 8530.9424 -7468.8774 8530.457 -7468.7935 8530.457 c
-7468.7729 8530.457 -7468.7729 8530.4785 -7468.7729 8530.5215 c
-7468.7729 8530.6055 -7468.8994 8530.9639 -7468.8994 8531.0479 c
-7468.8994 8531.1523 -7468.7935 8531.2598 -7468.7095 8531.2598 c
-7468.5835 8531.2598 -7468.3506 8530.6465 -7468.3086 8530.6465 c
-7468.2666 8530.6465 -7468.2446 8530.7109 -7468.2446 8530.7744 c
-7468.2446 8530.8799 -7468.3926 8531.3008 -7468.3926 8531.3857 c
-7468.3926 8531.5332 -7468.3286 8531.6172 -7468.2666 8531.6172 c
-7468.1826 8531.6172 -7468.0342 8531.2168 -7467.9502 8531.2168 c
-7467.9072 8531.2168 -7467.8862 8531.3223 -7467.8862 8531.3857 c
-7468.0762 8532.1025 -7468.0762 8532.25 v
-7468.0762 8532.377 -7468.0342 8532.418 -7467.9922 8532.418 c
-7467.9072 8532.418 -7467.7178 8531.9551 -7467.6338 8531.9551 c
-7467.5918 8531.9551 -7467.5703 8532.0186 -7467.5703 8532.1025 c
-7467.5703 8532.25 -7467.7817 8532.8203 -7467.7817 8532.9238 c
-7467.7817 8533.0723 -7467.7817 8533.2617 -7467.6758 8533.2617 c
-7467.6338 8533.2617 -7467.4863 8533.0518 -7467.4438 8533.0518 c
-7467.4014 8533.0518 -7467.3809 8533.0938 -7467.3809 8533.1563 c
-7467.3809 8533.2197 -7467.5073 8533.5156 -7467.5073 8533.5781 c
-7467.5073 8533.7051 -7464.9561 8536.4238 -7464.4287 8536.4238 c
-7463.9233 8536.4238 -7463.8594 8536.4238 -7463.7744 8536.6152 c
-7463.6904 8536.8467 -7463.5854 8537.0791 -7463.1426 8537.3525 c
-7462.0039 8537.9844 -7461.8774 8538.0703 -7461.8135 8538.3867 c
-7461.7295 8538.8711 -7461.7085 8538.9131 -7461.3926 8539.124 c
-7461.2446 8539.2295 -7461.2026 8539.335 -7461.2026 8539.4824 c
-7461.2026 8539.8408 -7461.2026 8539.8838 -7461.0127 8539.8838 c
-7460.7598 8539.8838 -7460.4214 8539.209 -7460.4214 8538.8506 c
-7460.4214 8537.9014 -7460.8018 8537.7959 -7461.4126 8537.626 c
-7461.5615 8537.585 -7461.7085 8537.4785 -7461.7085 8537.3945 c
-7461.7085 8537.3525 -7461.6875 8537.332 -7461.6455 8537.3105 c
-7460.7598 8536.8057 -7460.4214 8536.1094 -7460.4214 8535.5391 c
-7460.4214 8534.7383 -7461.7085 8531.0273 -7461.7085 8530.6895 c
-7461.7085 8530.2041 -7461.5615 8530.1621 -7461.3711 8530.1621 c
-7461.2241 8530.1621 -7460.7178 8530.6895 -7460.5903 8530.6895 c
-7460.5073 8530.6895 -7460.4214 8530.626 -7460.4214 8530.457 c
-7460.4214 8530.2256 -7460.8657 8529.1924 -7461.8984 8529.1924 c
-7462.4878 8529.1924 -7462.8682 8529.7188 -7462.8682 8530.1816 c
-7462.8682 8531.1328 -7462.5518 8531.3066 -7462.1934 8531.877 c
-7462.1294 8532.0039 -7462.0879 8532.1299 -7462.0879 8532.2363 c
-7462.0879 8532.5098 -7462.7202 8532.4307 -7463.0786 8532.4307 c
-7463.2256 8532.4307 -7463.3955 8532.4043 -7463.3955 8532.2979 c
-7463.3955 8527.6816 -7466.6426 8524.1318 -7470.5225 8523.3936 c
-7470.8394 8523.3291 -7470.9863 8523.2041 -7470.9863 8523.0781 c
-7470.9863 8523.0352 -7470.1006 8521.918 -7468.6255 8521.918 c
-7466.8535 8521.918 -7465.7153 8523.3936 -7465.7153 8524.1523 c
-7465.7153 8524.2363 -7465.7568 8524.3008 -7465.8198 8524.3008 c
-7465.9058 8524.3008 -7466.8535 8523.3516 -7467.0854 8523.3516 c
-7467.2119 8523.3516 -7467.3174 8523.457 -7467.3174 8523.5625 c
-7467.3174 8523.6895 -7467.2334 8523.8145 -7467.0439 8523.9619 c
-7466.9814 8523.9844 -7465.5454 8525.6719 -7465.2515 8526.0088 c
-7464.6401 8526.7256 -7463.8594 8527.5049 -7462.6362 8527.5049 c
-7461.4561 8527.5049 -7460.4214 8526.3047 -7460.4214 8525.5449 c
-7460.4214 8524.7656 -7460.8857 8524.0684 -7461.3711 8523.668 c
-7462.8896 8522.4023 -7462.8896 8522.0234 -7462.8896 8521.791 c
-7462.8896 8521.4746 -7462.6992 8521.3496 -7462.4878 8521.3496 c
-7462.1514 8521.3496 -7461.9824 8521.4961 -7461.9824 8522.1699 c
-7461.9824 8522.5078 -7461.6455 8522.8457 -7461.2026 8522.8457 c
-7460.7598 8522.8457 -7460.4434 8522.4668 -7460.4434 8521.8545 c
-7460.4434 8521.2441 -7461.2871 8520.5049 -7462.4878 8520.5049 c
-7464.1338 8520.5049 -7464.6182 8521.6641 -7464.6182 8522.1494 c
-7464.6182 8522.4863 -7464.5127 8523.0781 -7464.1958 8523.4355 c
-7463.8594 8523.8369 -7463.4595 8524.5332 -7463.1846 8525.25 c
-7462.9521 8525.9033 -7462.4258 8526.2617 -7462.0879 8526.2617 c
-7462.0239 8526.2617 -7462.0039 8526.2402 -7462.0039 8526.1982 c
-7462.0039 8526.0928 -7462.2144 8525.7129 -7462.2144 8525.6289 c
-7462.2144 8525.25 -7462.1094 8525.0391 -7461.8984 8525.0391 c
-7461.3711 8525.0391 -7461.2656 8525.6914 -7461.2656 8525.9238 c
-7461.2656 8526.4102 -7461.6245 8526.999 -7462.6782 8526.999 c
-7464.0063 8526.999 -7465.1245 8525.25 -7465.1245 8525.1865 c
-7465.1245 8525.1641 -7465.0825 8524.6172 -7465.0825 8524.5107 c
-7465.0825 8522.6123 -7466.79 8521.3496 -7468.6255 8521.3496 c
-7470.1855 8521.3496 -7471.3447 8522.5723 -7471.5352 8522.8662 c
-7471.6401 8523.0352 -7471.7666 8523.1191 -7471.9146 8523.1191 c
-7472.2729 8523.1191 -7475.1191 8523.0576 -7475.1191 8522.6348 c
-7475.1191 8522.5928 -7474.9937 8522.1289 -7474.8242 8522.1289 c
-7474.7607 8522.1289 -7474.6982 8522.1699 -7474.6353 8522.2344 c
-7474.4438 8522.4668 -7474.0225 8522.5928 -7473.6431 8522.5928 c
-7473.0942 8522.5928 -7472.1895 8522.002 -7472.1895 8521.2646 c
-7472.1895 8520.9688 -7472.5679 8520.4844 -7472.8838 8520.4844 c
-7473.1377 8520.4844 -7474.1914 8521.2012 -7474.4238 8521.2012 c
-7474.7402 8521.2012 -7474.8662 8521.0527 -7475.1606 8520.7158 c
-7475.3306 8520.5264 -7475.4575 8520.5049 -7475.6465 8520.5049 c
-7475.8154 8520.5049 -7475.9634 8520.6104 -7475.9634 8520.7578 c
-7475.9634 8520.9258 -7475.6465 8521.2441 -7475.6265 8521.5176 c
-7475.6265 8521.6641 -7475.6055 8521.8955 -7475.6055 8522.0859 c
-7475.6055 8522.3398 -7475.6265 8522.6982 -7475.8994 8522.6982 c
-7476.7217 8522.6982 -7478.7681 8521.4121 -7479.6538 8520.8203 c
-7480.1592 8520.4844 -7480.2432 8520.4844 -7480.3066 8520.4844 c
-7480.4336 8520.4844 -7480.5176 8520.5684 -7480.5176 8520.7158 c
-7480.5176 8520.8418 -7478.0713 8522.9941 -7475.8994 8523.7305 c
-7475.5835 8523.8369 -7475.6055 8523.9844 -7475.5625 8524.1523 c
-7475.1406 8525.9033 -7473.5166 8528.0762 -7472.9263 8528.0762 c
-7472.7783 8528.0762 -7472.7158 8528.0762 -7472.7158 8528.1816 c
-7472.7158 8528.3906 -7472.6104 8528.623 -7472.4634 8528.623 c
-7472.4209 8528.623 -7472.2524 8528.3906 -7472.21 8528.3906 c
-7472.1255 8528.3906 -7472.0615 8528.8555 -7472.0415 8528.9385 c
-7471.9995 8529.0449 -7471.9146 8529.1289 -7471.8506 8529.1289 c
-7471.7666 8529.1289 -7471.5986 8528.792 -7471.5352 8528.792 c
-7471.5137 8528.792 -7471.4927 8528.8115 -7471.4927 8528.8555 c
-7471.5352 8529.2129 L
f
1 D
-7472.9058 8524.7012 m
-7473.0942 8525.123 -7473.2002 8525.376 -7473.2002 8525.7559 c
-7473.2002 8526.0088 -7472.7783 8527.2529 y
-7472.7783 8527.3164 -7472.7998 8527.3369 -7472.8633 8527.3369 c
-7473.2847 8527.3369 -7475.0352 8525.1016 -7475.0352 8524.2363 c
-7475.0352 8524.1318 -7474.9722 8524.0684 -7474.8662 8524.0684 c
-7474.8042 8524.0684 -7472.8633 8524.2578 -7472.8633 8524.4902 c
-7472.8633 8524.5537 -7472.8838 8524.6172 -7472.9058 8524.7012 c
f
-7464.8081 8535.666 m
-7465.7568 8534.7803 -7466.6846 8533.916 -7466.6846 8533.3672 c
-7466.6846 8533.0303 -7466.6226 8532.6289 -7466.6226 8532.208 c
-7466.6226 8530.7529 -7467.9722 8529.4238 -7468.8774 8528.9609 c
-7469.3623 8528.707 -7469.8481 8528.1387 -7469.8481 8527.7793 c
-7469.8481 8527.6738 -7469.8057 8527.6113 -7469.7422 8527.6113 c
-7469.6582 8527.6113 -7469.5942 8527.6318 -7469.5103 8527.6318 c
-7469.4473 8527.6318 -7469.2158 8527.5049 -7469.1519 8527.5049 c
-7469.0049 8527.5049 -7468.6035 8528.1602 -7468.4561 8528.1602 c
-7468.2446 8528.1602 -7468.1826 8527.9492 -7468.1826 8527.8008 c
-7468.1826 8527.4424 -7468.7305 8526.0928 -7469.9951 8526.0928 c
-7470.7554 8526.0928 -7471.0498 8526.5352 -7471.0498 8526.873 c
-7471.0498 8527.5049 -7470.5225 8528.1172 -7470.3975 8528.2871 c
-7470.3545 8528.3281 -7470.3335 8528.3701 -7470.3335 8528.4121 c
-7470.3335 8528.4551 -7470.3545 8528.4746 -7470.4175 8528.4746 c
-7470.6694 8528.4746 -7472.6519 8527.4424 -7472.6519 8525.7129 c
-7472.6519 8525.292 -7472.4209 8524.4902 -7471.7666 8524.4902 c
-7469.2998 8524.4902 -7465.1675 8528.3496 -7465.1675 8532.7979 c
-7465.1675 8533.1777 -7465.3984 8533.7266 -7465.4614 8534.1055 c
-7465.4834 8534.127 -7465.4834 8534.1689 -7465.4834 8534.21 c
-7465.4834 8534.3369 -7465.4399 8534.5059 -7465.3145 8534.5059 c
-7465.0615 8534.5059 -7463.3955 8534.3164 -7463.0366 8534.3164 c
-7461.3926 8534.3164 -7460.9702 8534.3164 -7460.9702 8535.4121 c
-7460.9702 8536.6357 -7462.1094 8536.9531 -7462.5098 8536.9531 c
-7462.8896 8536.9531 -7463.2695 8536.6563 -7463.2695 8536.2979 c
-7463.2695 8536.1924 -7463.0791 8535.75 -7463.0791 8535.666 c
-7463.0791 8535.5186 -7463.2065 8535.4346 -7463.3325 8535.4346 c
-7463.4795 8535.4346 -7463.9858 8535.9395 -7464.1338 8535.9395 c
-7464.3862 8535.9395 -7464.6401 8535.8135 -7464.8081 8535.666 c
f
*U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ Oval - 2 Pt./ Adobe Calligraph) -
(ic Brush Tool/ Oval - 5 Pt./ Adobe Calligraphic Brush Tool/ Fl) -
(ach - 5 Pt./ Adobe Calligraphic Brush Tool/ Rund - 3 Pt./ Adob) -
(e Calligraphic Brush Tool/ Rund - 7 Pt./ Adobe Calligraphic Br) -
(ush Tool/ Rund - 15 Pt./ Adobe ArtOnPath Brush Tool/ Kohle/ Ad) -
(obe ArtOnPath Brush Tool/ Verj\374ngte Kontur/ Adobe ArtOnPath Br) -
(ush Tool/ Blumensprosse/ Adobe PatternOnPath Brush Tool/ Roter) -
( Pfeilpinsel / Adobe PatternOnPath Brush Tool/ Gotisch/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(Flach - 5 Pt.)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(Oval - 2 Pt.)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(Oval - 5 Pt.)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(Rund - 15 Pt.)
(1 15 15 100 100 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(Rund - 3 Pt.)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(Rund - 7 Pt.)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Blumensprosse)
(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Kohle)
(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Verj\774ngte Kontur)
(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Gotisch)
(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -
(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Roter Pfeilpinsel )
(1 / Unnamed Brush Pat 158/ Unnamed Brush Pat 160/ Unnamed Brus) -
(h Pat 160/ Unnamed Brush Pat 162/ Unnamed Brush Pat 161/ 5 0.0) -
(196078 0.027451 0.0313726 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Passermarken]) 0 Xs
([Passermarken])
Pc
0 0 0 0 k
(Wei\737)
Pc
0 0 0 1 k
(Schwarz)
Pc
0 1 1 0 k
(CMYK Rot)
Pc
0 0 1 0 k
(CMYK Gelb)
Pc
1 0 1 0 k
(CMYK Gr\774n)
Pc
1 0 0 0 k
(CMYK Cyan)
Pc
1 1 0 0 k
(CMYK Blau)
Pc
0 1 0 0 k
(CMYK Magenta)
Pc
0.15 1 0.9 0.1 k
(C=15 M=100 Y=90 K=10)
Pc
0 0.9 0.85 0 k
(C=0 M=90 Y=85 K=0)
Pc
0 0.8 0.95 0 k
(C=0 M=80 Y=95 K=0)
Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0)
Pc
0 0.35 0.85 0 k
(C=0 M=35 Y=85 K=0)
Pc
0.05 0 0.9 0 k
(C=5 M=0 Y=90 K=0)
Pc
0.2 0 1 0 k
(C=20 M=0 Y=100 K=0)
Pc
0.5 0 1 0 k
(C=50 M=0 Y=100 K=0)
Pc
0.75 0 1 0 k
(C=75 M=0 Y=100 K=0)
Pc
0.85 0.1 1 0.1 k
(C=85 M=10 Y=100 K=10)
Pc
0.9 0.3 0.95 0.3 k
(C=90 M=30 Y=95 K=30)
Pc
0.75 0 0.75 0 k
(C=75 M=0 Y=75 K=0)
Pc
0.8 0.1 0.45 0 k
(C=80 M=10 Y=45 K=0)
Pc
0.7 0.15 0 0 k
(C=70 M=15 Y=0 K=0)
Pc
0.85 0.5 0 0 k
(C=85 M=50 Y=0 K=0)
Pc
1 0.95 0.05 0 k
(C=100 M=95 Y=5 K=0)
Pc
1 1 0.25 0.25 k
(C=100 M=100 Y=25 K=25)
Pc
0.75 1 0 0 k
(C=75 M=100 Y=0 K=0)
Pc
0.5 1 0 0 k
(C=50 M=100 Y=0 K=0)
Pc
0.35 1 0.35 0.1 k
(C=35 M=100 Y=35 K=10)
Pc
0.1 1 0.5 0 k
(C=10 M=100 Y=50 K=0)
Pc
0 0.95 0.2 0 k
(C=0 M=95 Y=20 K=0)
Pc
0.25 0.25 0.4 0 k
(C=25 M=25 Y=40 K=0)
Pc
0.4 0.45 0.5 0.05 k
(C=40 M=45 Y=50 K=5)
Pc
0.5 0.5 0.6 0.25 k
(C=50 M=50 Y=60 K=25)
Pc
0.55 0.6 0.65 0.4 k
(C=55 M=60 Y=65 K=40)
Pc
0.25 0.4 0.65 0 k
(C=25 M=40 Y=65 K=0)
Pc
0.3 0.5 0.75 0.1 k
(C=30 M=50 Y=75 K=10)
Pc
0.35 0.6 0.8 0.25 k
(C=35 M=60 Y=80 K=25)
Pc
0.4 0.65 0.9 0.35 k
(C=40 M=65 Y=90 K=35)
Pc
0.4 0.7 1 0.5 k
(C=40 M=70 Y=100 K=50)
Pc
0.5 0.7 0.8 0.7 k
(C=50 M=70 Y=80 K=70)
Pc
Bb
2 (Linearer Verlauf) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Linearer Verlauf)
Pc
Bb
2 (Schwarz\774bergang) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Schwarz\774bergang)
Pc
Bb
0 0 0 0 Bh
2 (Radialverlauf) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Radialverlauf)
Pc
Bb
0 0 0 0 Bh
2 (Weiche schwarze Vignette) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Weiche schwarze Vignette)
Pc
Bb
2 (Sonnenuntergang in der W\774ste) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Sonnenuntergang in der W\774ste)
Pc
Bb
0 0 0 0 Bh
2 (Kupfer radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Kupfer radial)
Pc
(Fischmuster) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Fischmuster)
Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100)
Pc
0 0 0 0.899994 k
(C=0 M=0 Y=0 K=90)
Pc
0 0 0 0.799988 k
(C=0 M=0 Y=0 K=80)
Pc
0 0 0 0.699997 k
(C=0 M=0 Y=0 K=70)
Pc
0 0 0 0.599991 k
(C=0 M=0 Y=0 K=60)
Pc
0 0 0 0.5 k
(C=0 M=0 Y=0 K=50)
Pc
0 0 0 0.399994 k
(C=0 M=0 Y=0 K=40)
Pc
0 0 0 0.299988 k
(C=0 M=0 Y=0 K=30)
Pc
0 0 0 0.199997 k
(C=0 M=0 Y=0 K=20)
Pc
0 0 0 0.099991 k
(C=0 M=0 Y=0 K=10)
Pc
0 0 0 0.049988 k
(C=0 M=0 Y=0 K=5)
Pc
0 1 1 0 k
(C=0 M=100 Y=100 K=0)
Pc
0 0.75 1 0 k
(C=0 M=75 Y=100 K=0)
Pc
0 0.1 0.95 0 k
(C=0 M=10 Y=95 K=0)
Pc
0.85 0.1 1 0 k
(C=85 M=10 Y=100 K=0)
Pc
1 0.9 0 0 k
(C=100 M=90 Y=0 K=0)
Pc
0.6 0.9 0.000031 0.000031 k
(C=60 M=90 Y=0 K=0)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Ebene 1) Ln
0 A
0 D
0 R
0 0 0 1 K
0 J 0 j 1 w 4 M []0 d0 XR
28.3467 680.3154 m
680.3145 680.3154 L
680.3145 28.3467 L
28.3467 28.3467 L
28.3467 680.3154 L
s
485.0566 601.8271 m
488.2451 601.8271 L
488.2451 598.6387 L
485.0566 598.6387 L
485.0566 601.8271 L
s
494.1133 601.8271 m
497.3018 601.8271 L
497.3018 598.6387 L
494.1133 598.6387 L
494.1133 601.8271 L
s
481.9326 595.7031 m
485.5039 595.7031 L
485.5039 581.418 L
485.5039 578.9238 485.9268 577.1172 486.7139 575.998 C
487.5039 574.8779 488.7793 574.3379 490.541 574.3379 c
492.3994 574.3379 493.7393 574.8779 494.5576 575.998 C
495.3789 577.1172 495.7705 578.9902 495.7705 581.5449 C
495.7705 595.7031 L
498.959 595.7031 L
498.959 582.0566 L
498.959 579.1084 498.5723 576.9619 497.876 575.6777 C
496.3955 572.9512 494.0039 571.5967 490.6055 571.5967 c
487.6582 571.5967 485.4482 572.4063 484.0371 574.0195 C
482.625 575.6348 481.9326 578.1318 481.9326 581.4824 C
481.9326 595.7031 L
s
173.0859 596.2773 m
175.1992 596.2773 177.5879 595.9395 180.2285 595.1934 C
180.2285 592.0059 L
177.5742 593.0313 175.2158 593.5986 173.1484 593.5986 c
169.8838 593.5986 168.2393 592.4844 168.2393 590.2832 c
168.2393 589.3906 168.585 588.6592 169.1963 588.1133 C
169.8057 587.5713 170.9248 587.0322 172.5762 586.4561 C
174.8701 585.6279 L
177.1025 584.8633 L
180.5156 583.6631 182.2041 581.665 182.2041 578.8037 c
182.2041 576.625 181.332 574.876 179.5898 573.5723 C
177.8477 572.2705 175.498 571.5967 172.5762 571.5967 c
170.5449 571.5967 167.9482 572.0684 164.7305 572.9355 C
164.7305 576.5078 L
167.9346 575.0625 170.5869 574.3379 172.7031 574.3379 c
174.4873 574.3379 175.9121 574.6563 176.9756 575.3594 C
178.0391 576.0625 178.5684 577.0439 178.5684 578.2295 c
178.5684 579.1328 178.2441 579.8076 177.6143 580.334 C
176.9844 580.8594 175.6924 581.5244 173.7217 582.2461 C
171.2998 583.1406 L
168.8916 584.0332 167.1982 584.9404 166.2617 585.8818 C
165.3271 586.8232 164.8594 588.0801 164.8594 589.6445 c
164.8594 591.7607 165.5898 593.3936 167.0273 594.5547 C
168.4648 595.7168 170.4805 596.2773 173.0859 596.2773 C
173.0859 596.2773 L
s
309.1094 596.2773 m
311.2256 596.2773 313.6113 595.9395 316.252 595.1934 C
316.252 592.0059 L
313.5996 593.0313 311.2412 593.5986 309.1748 593.5986 c
305.9102 593.5986 304.2627 592.4844 304.2627 590.2832 c
304.2627 589.3906 304.6084 588.6592 305.2197 588.1133 C
305.832 587.5713 306.9492 587.0322 308.6006 586.4561 C
310.8965 585.6279 L
313.1279 584.8633 L
316.5391 583.6631 318.2305 581.665 318.2305 578.8037 c
318.2305 576.625 317.3584 574.876 315.6152 573.5723 C
313.874 572.2705 311.5244 571.5967 308.6006 571.5967 c
306.5703 571.5967 303.9717 572.0684 300.7568 572.9355 C
300.7568 576.5078 L
303.9609 575.0625 306.6123 574.3379 308.7266 574.3379 c
310.5137 574.3379 311.9375 574.6563 313.001 575.3594 C
314.0645 576.0625 314.5947 577.0439 314.5947 578.2295 c
314.5947 579.1328 314.2676 579.8076 313.6377 580.334 C
313.0078 580.8594 311.7168 581.5244 309.748 582.2461 C
307.3242 583.1406 L
304.915 584.0332 303.2217 584.9404 302.2881 585.8818 C
301.3506 586.8232 300.8838 588.0801 300.8838 589.6445 c
300.8838 591.7607 301.6152 593.3936 303.0527 594.5547 C
304.4902 595.7168 306.5059 596.2773 309.1094 596.2773 C
309.1094 596.2773 L
s
527.1475 595.7676 m
530.5898 595.7676 L
541.3682 578.6748 L
541.4307 578.6748 L
541.4307 595.7031 L
544.3652 595.7031 L
544.3652 572.1699 L
541.0479 572.1699 L
530.1426 589.4531 L
530.0791 589.4531 L
530.0791 572.1699 L
527.1475 572.1699 L
527.1475 595.7676 L
527.1475 595.7676 L
s
120.3457 595.7031 m
136.2246 595.7031 L
136.2246 593.0264 L
123.918 593.0264 L
123.918 585.8818 L
134.375 585.8818 L
134.375 583.1406 L
123.918 583.1406 L
123.918 574.9121 L
137.0547 574.9121 L
137.0547 572.1699 L
120.3457 572.1699 L
120.3457 595.7031 L
s
210.1367 595.7031 m
213.7725 595.7031 L
213.7725 584.1592 L
223.6563 595.7031 L
227.292 595.7031 L
217.7891 584.6064 L
229.0762 572.1699 L
224.7402 572.1699 L
213.7725 584.1592 L
213.7725 572.1699 L
210.1367 572.1699 L
210.1367 595.7031 L
s
255.542 595.7031 m
271.8682 595.7031 L
271.8682 593.0264 L
265.5547 593.0264 L
265.5547 574.9121 L
271.8682 574.9121 L
271.8682 572.1699 L
255.542 572.1699 L
255.542 574.9121 L
261.9199 574.9121 L
261.9199 593.0264 L
255.542 593.0264 L
255.542 595.7031 L
s
343.5479 595.7031 m
365.2295 595.7031 L
365.2295 593.0264 L
356.2383 593.0264 L
356.2383 572.1699 L
352.6016 572.1699 L
352.6016 593.0264 L
343.5479 593.0264 L
343.5479 595.7031 L
s
392.5254 595.7031 m
396.0957 595.7031 L
396.0957 574.9121 L
408.7861 574.9121 L
408.7861 572.1699 L
392.5254 572.1699 L
392.5254 595.7031 L
s
438.3115 595.7031 m
455.0195 595.7031 L
455.0195 593.0264 L
441.8828 593.0264 L
441.8828 584.8633 L
453.1055 584.8633 L
453.1055 582.1836 L
441.8828 582.1836 L
441.8828 572.1699 L
438.3115 572.1699 L
438.3115 595.7031 L
s
574.3379 595.7031 m
591.0459 595.7031 L
591.0459 593.0264 L
577.9727 593.0264 L
577.9727 584.8633 L
589.1318 584.8633 L
589.1318 582.1836 L
577.9727 582.1836 L
577.9727 572.1699 L
574.3379 572.1699 L
574.3379 595.7031 L
s
583.5205 545.2549 m
585.5986 545.2549 587.8438 544.8789 590.2158 544.1689 C
590.2158 540.8535 L
587.7949 541.9658 585.5615 542.5117 583.4561 542.5117 c
581.0244 542.5117 578.9697 541.6191 577.3994 539.832 C
575.8262 538.0479 575.0381 535.7734 575.0381 533.0107 c
575.0381 530.2334 575.9443 527.9639 577.7168 526.1855 C
579.4902 524.4053 581.7891 523.5068 584.542 523.5068 c
585.165 523.5068 585.9346 523.6133 586.9004 523.7598 C
586.9004 529.9482 L
582.502 529.9482 L
582.502 532.6895 L
590.5361 532.6895 L
590.5361 521.7197 L
588.0781 520.9365 585.7217 520.5723 583.5205 520.5723 c
579.876 520.5723 576.9365 521.6904 574.6553 523.9512 C
572.375 526.2148 571.2129 529.1338 571.2129 532.7539 c
571.2129 536.459 572.3174 539.5117 574.5938 541.8105 C
576.8672 544.1094 579.8516 545.2549 583.5205 545.2549 C
583.5205 545.2549 L
s
255.0947 544.7432 m
258.54 544.7432 L
269.3184 527.6514 L
269.3799 527.6514 L
269.3799 544.6807 L
272.3154 544.6807 L
272.3154 521.1455 L
268.9971 521.1455 L
258.0928 538.3662 L
258.0303 538.3662 L
258.0303 521.1455 L
255.0947 521.1455 L
255.0947 544.7432 L
s
436.4629 544.7432 m
439.9063 544.7432 L
450.6826 527.6514 L
450.748 527.6514 L
450.748 544.6807 L
453.6807 544.6807 L
453.6807 521.1455 L
450.3652 521.1455 L
439.459 538.3662 L
439.3975 538.3662 L
439.3975 521.1455 L
436.4629 521.1455 L
436.4629 544.7432 L
s
119.0713 544.6807 m
137.0547 544.6807 L
137.0547 541.9365 L
122.2598 523.8252 L
137.1816 523.8252 L
137.1816 521.1455 L
118.1787 521.1455 L
118.1787 523.8252 L
132.9736 541.9365 L
119.0713 541.9365 L
119.0713 544.6807 L
s
165.6875 544.6807 m
181.5684 544.6807 L
181.5684 541.9365 L
169.2588 541.9365 L
169.2588 534.7939 L
179.7168 534.7939 L
179.7168 532.1152 L
169.2588 532.1152 L
169.2588 523.8252 L
182.3955 523.8252 L
182.3955 521.1455 L
165.6875 521.1455 L
165.6875 544.6807 L
s
209.7539 544.6807 m
213.3896 544.6807 L
213.3896 534.3496 L
223.3379 534.3496 L
223.3379 544.6807 L
226.9717 544.6807 L
226.9717 521.1455 L
223.3379 521.1455 L
223.3379 531.6709 L
213.3896 531.6709 L
213.3896 521.1455 L
209.7539 521.1455 L
209.7539 544.6807 L
s
300.4385 544.6807 m
318.4219 544.6807 L
318.4219 541.9365 L
303.6895 523.8252 L
318.5488 523.8252 L
318.5488 521.1455 L
299.5439 521.1455 L
299.5439 523.8252 L
314.3408 541.9365 L
300.4385 541.9365 L
300.4385 544.6807 L
s
343.3564 544.6807 m
346.4805 544.6807 L
349.2871 525.1025 L
349.3506 525.1025 L
352.793 539.7051 L
356.2383 539.7051 L
359.6172 525.3555 L
362.6768 544.6807 L
365.4209 544.6807 L
361.5313 521.1455 L
357.5771 521.1455 L
354.3887 534.9238 L
354.3242 534.9238 L
351.0732 521.1455 L
346.8633 521.1455 L
343.3564 544.6807 L
s
1 D
397.9404 544.6709 m
388.6406 521.1455 L
391.7656 521.1455 L
399.3408 540.9707 L
403.6904 529.7451 L
399.6162 529.7451 L
398.5654 527.0205 L
404.7656 527.0205 L
406.9912 521.1455 L
410.8164 521.1455 L
401.5156 544.6709 L
397.9404 544.6709 L
s
0 D
481.8037 544.6807 m
499.7891 544.6807 L
499.7891 541.9365 L
485.0566 523.8252 L
499.916 523.8252 L
499.916 521.1455 L
480.9111 521.1455 L
480.9111 523.8252 L
495.7061 541.9365 L
481.8037 541.9365 L
481.8037 544.6807 L
s
527.6563 544.6807 m
543.918 544.6807 L
543.918 541.9365 L
537.6055 541.9365 L
537.6055 523.8252 L
543.918 523.8252 L
543.918 521.1455 L
527.6563 521.1455 L
527.6563 523.8252 L
533.9688 523.8252 L
533.9688 541.9365 L
527.6563 541.9365 L
527.6563 544.6807 L
s
1 D
118.7412 493.646 m
118.7412 477.1206 L
122.3906 477.1206 L
122.3906 490.9707 L
125.1406 490.9707 L
128.2207 490.9707 130.4473 490.2334 131.7656 488.8208 C
133.0879 487.4077 133.7412 485.0732 133.7412 481.7959 c
133.7412 478.5669 133.0283 476.2646 131.5664 474.896 C
130.1045 473.5254 127.6133 472.8706 124.166 472.8706 C
122.9824 472.8706 122.3906 472.8706 v
121.1748 472.8706 118.7412 472.8706 Y
118.7412 470.1206 L
124.8662 470.1206 L
127.458 470.1206 129.5586 470.4404 131.1162 471.021 C
132.6768 471.6016 133.9521 472.5386 135.0156 473.896 C
136.7168 476.0493 137.5664 478.8862 137.5664 482.3706 c
137.5664 489.9053 133.667 493.646 125.8408 493.646 C
118.7412 493.646 L
s
165.041 493.646 m
165.041 486.9458 L
168.6914 486.9458 L
168.6914 490.9707 L
170.916 490.9707 L
173.2168 490.9707 174.7842 490.7207 175.6406 490.2207 C
176.498 489.7178 176.916 488.7534 176.916 487.396 c
176.916 485.9404 176.3779 484.8276 175.2412 483.9707 C
174.1045 483.1138 172.5361 482.6958 170.5908 482.6958 C
169.3242 482.6958 168.6914 482.6958 v
167.4746 482.6958 165.041 482.6958 Y
165.041 470.1206 L
168.6914 470.1206 L
168.6914 479.9458 L
171.9414 479.9458 L
179.3906 470.1206 L
183.791 470.1206 L
175.4414 480.8457 L
177.3613 481.7891 178.6973 482.8008 179.5156 483.896 C
180.3369 484.9907 180.791 486.3306 180.791 487.9707 c
180.791 490.3535 179.6396 492.0796 177.3662 493.021 C
176.3027 493.4727 174.4307 493.646 171.6914 493.646 C
165.041 493.646 L
s
0 D
211.0293 493.6577 m
226.9102 493.6577 L
226.9102 490.9785 L
214.5996 490.9785 L
214.5996 483.8359 L
225.0605 483.8359 L
225.0605 481.0928 L
214.5996 481.0928 L
214.5996 472.8662 L
227.7373 472.8662 L
227.7373 470.1226 L
211.0293 470.1226 L
211.0293 493.6577 L
s
255.542 493.6577 m
271.8682 493.6577 L
271.8682 490.9785 L
265.5547 490.9785 L
265.5547 472.8662 L
271.8682 472.8662 L
271.8682 470.1226 L
255.542 470.1226 L
255.542 472.8662 L
261.9199 472.8662 L
261.9199 490.9785 L
255.542 490.9785 L
255.542 493.6577 L
s
298.0156 493.6577 m
301.8408 493.6577 L
309.3008 474.9692 L
317.0176 493.6577 L
320.0791 493.6577 L
310.7695 470.1226 L
307.1338 470.1226 L
298.0156 493.6577 L
s
346.2266 493.6577 m
362.5508 493.6577 L
362.5508 490.9785 L
356.2383 490.9785 L
356.2383 472.8662 L
362.5508 472.8662 L
362.5508 470.1226 L
346.2266 470.1226 L
346.2266 472.8662 L
352.6016 472.8662 L
352.6016 490.9785 L
346.2266 490.9785 L
346.2266 493.6577 L
s
392.3955 493.6577 m
408.2764 493.6577 L
408.2764 490.9785 L
396.0322 490.9785 L
396.0322 483.8359 L
406.4248 483.8359 L
406.4248 481.0928 L
396.0322 481.0928 L
396.0322 472.8662 L
409.1045 472.8662 L
409.1045 470.1226 L
392.3955 470.1226 L
392.3955 493.6577 L
s
479.5713 493.6577 m
501.3174 493.6577 L
501.3174 490.9785 L
492.2637 490.9785 L
492.2637 470.1226 L
488.6279 470.1226 L
488.6279 490.9785 L
479.5713 490.9785 L
479.5713 493.6577 L
s
528.4219 493.6577 m
544.3008 493.6577 L
544.3008 490.9785 L
532.0557 490.9785 L
532.0557 483.8359 L
542.4512 483.8359 L
542.4512 481.0928 L
532.0557 481.0928 L
532.0557 472.8662 L
545.1924 472.8662 L
545.1924 470.1226 L
528.4219 470.1226 L
528.4219 493.6577 L
s
573.8896 493.6577 m
577.4619 493.6577 L
577.4619 472.8662 L
590.1533 472.8662 L
590.1533 470.1226 L
573.8896 470.1226 L
573.8896 493.6577 L
573.8896 493.6577 L
s
175.4443 443.208 m
177.5225 443.208 179.7686 442.8325 182.1396 442.1245 C
182.1396 438.8071 L
179.7188 439.9194 177.4209 440.4648 175.3174 440.4648 c
172.8838 440.4648 170.8945 439.5723 169.3232 437.7881 C
167.752 436.0015 166.9619 433.7271 166.9619 430.9634 c
166.9619 428.1865 167.8682 425.917 169.6416 424.1392 C
171.415 422.3589 173.6514 421.4604 176.4014 421.4604 c
177.0244 421.4604 177.8584 421.5688 178.8252 421.7163 C
178.8252 427.9019 L
174.3613 427.9019 L
174.3613 430.6431 L
182.3955 430.6431 L
182.3955 419.6733 L
179.9375 418.8921 177.6455 418.5249 175.4443 418.5249 c
171.8018 418.5249 168.7979 419.644 166.5176 421.9072 C
164.2363 424.1685 163.1367 427.0874 163.1367 430.7075 c
163.1367 434.4126 164.2432 437.4653 166.5176 439.7637 C
168.791 442.0625 171.7754 443.2085 175.4443 443.2085 C
175.4443 443.208 L
s
311.915 443.208 m
313.9961 443.208 316.2412 442.8325 318.6133 442.1245 C
318.6133 438.8071 L
316.1924 439.9194 313.9561 440.4648 311.8535 440.4648 c
309.4189 440.4648 307.3652 439.5723 305.7939 437.7881 C
304.2236 436.0015 303.4355 433.7271 303.4355 430.9634 c
303.4355 428.1758 304.3408 425.9126 306.1123 424.1392 C
307.8857 422.3652 310.1484 421.4604 312.9365 421.4604 c
314.623 421.4604 316.6436 421.9185 318.9307 422.7993 C
318.9307 419.8022 L
316.5098 418.9321 314.248 418.5249 312.1074 418.5249 c
308.3672 418.5249 305.3379 419.6621 303.0527 421.9077 C
300.7656 424.1499 299.6084 427.0518 299.6084 430.7075 c
299.6084 434.4126 300.7148 437.4653 302.9883 439.7637 C
305.2627 442.063 308.249 443.2085 311.916 443.2085 C
311.915 443.208 L
s
*u
1 D
445.0654 443.1958 m
441.96 443.1958 439.5068 442.0522 437.666 439.8208 C
435.8262 437.5889 434.9404 434.6011 434.9404 430.8457 c
434.9404 428.5244 435.2764 426.4854 435.9658 424.7456 C
438.9912 427.7705 L
438.8428 428.7041 438.7656 429.7192 438.7656 430.8457 c
438.7656 433.9136 439.3213 436.3018 440.416 437.9707 C
441.5107 439.6392 443.0361 440.4707 445.0654 440.4707 c
446.9443 440.4707 448.4561 439.7476 449.541 438.3208 C
451.8154 440.5957 L
450.0566 442.3096 447.7842 443.1958 445.0654 443.1958 C
445.0654 443.1958 L
s
454.2412 436.9707 m
451.2158 433.9458 L
451.3633 433.0073 451.4404 431.9678 451.4404 430.8457 c
451.4404 427.7632 450.8926 425.4146 449.791 423.7456 C
448.6914 422.0767 447.0977 421.1958 445.0654 421.1958 c
443.1846 421.1958 441.7393 421.9561 440.666 423.396 C
438.3662 421.0957 L
440.1143 419.3755 442.335 418.521 445.0654 418.521 c
448.1719 418.521 450.7002 419.6147 452.541 421.8457 C
454.3828 424.0776 455.2656 427.0806 455.2656 430.8457 c
455.2656 433.1802 454.9414 435.2271 454.2412 436.9707 C
454.2412 436.9707 L
s
*U
0 D
209.7539 442.6987 m
213.1982 442.6987 L
223.9746 425.6055 L
224.0391 425.6055 L
224.0391 442.6343 L
226.9717 442.6343 L
226.9717 419.1016 L
223.6563 419.1016 L
212.751 436.3198 L
212.6885 436.3198 L
212.6885 419.1016 L
209.7539 419.1016 L
209.7539 442.6987 L
s
116.8389 442.6338 m
138.5215 442.6338 L
138.5215 439.8931 L
129.4648 439.8931 L
129.4648 419.1011 L
125.8936 419.1011 L
125.8936 439.8931 L
116.8389 439.8931 L
116.8389 442.6338 L
s
345.7793 442.6338 m
349.4131 442.6338 L
349.4131 432.3032 L
359.3613 432.3032 L
359.3613 442.6338 L
362.998 442.6338 L
362.998 419.1011 L
359.3613 419.1011 L
359.3613 429.624 L
349.4131 429.624 L
349.4131 419.1011 L
345.7793 419.1011 L
345.7793 442.6338 L
s
388.6973 442.6338 m
392.5254 442.6338 L
400.0479 423.8833 L
407.7021 442.6338 L
410.7617 442.6338 L
401.4521 419.1011 L
397.8164 419.1011 L
388.6973 442.6338 L
s
529.7617 442.6338 m
541.5596 442.6338 L
541.5596 429.2412 L
541.5596 426.856 541.3926 425.0464 541.1113 423.8833 C
540.8311 422.7212 540.3125 421.7021 539.5186 420.8232 C
538.123 419.2705 536.1162 418.5273 533.5244 418.5273 c
532.1182 418.5273 530.2637 418.832 528.0391 419.4199 C
528.0391 422.4814 L
529.25 422.0337 L
530.9258 421.4849 532.2891 421.2061 533.2686 421.2061 c
534.9922 421.2061 536.2119 421.6519 536.9043 422.5459 C
537.5938 423.438 537.9238 425.0649 537.9238 427.3276 C
537.9238 439.8931 L
529.7617 439.8931 L
529.7617 442.6338 L
s
571.5313 442.6338 m
575.8682 442.6338 L
581.0322 428.1572 L
581.0977 428.1572 L
586.1348 442.6338 L
590.6631 442.6338 L
590.6631 419.1011 L
587.7285 419.1011 L
587.7285 439.2544 L
582.3721 424.0742 L
579.375 424.0742 L
574.082 438.8716 L
574.0195 438.8716 L
574.0195 419.1011 L
571.5322 419.1011 L
571.5322 442.6338 L
571.5313 442.6338 L
s
438.9502 398.3057 m
442.1387 398.3057 L
442.1387 395.1177 L
438.9502 395.1177 L
438.9502 398.3057 L
s
448.0059 398.3057 m
451.1953 398.3057 L
451.1953 395.1177 L
448.0059 395.1177 L
448.0059 398.3057 L
s
354.4531 341.1592 m
356.5674 341.1592 358.9521 340.7568 361.5957 340.0107 C
361.5957 336.8877 L
358.9414 337.9131 356.582 338.417 354.5156 338.417 c
351.251 338.417 349.6045 337.3018 349.6064 335.1006 C
349.6025 334.208 349.9512 333.54 350.5615 332.9951 C
351.1738 332.4521 352.29 331.8486 353.9414 331.2744 C
356.2383 330.5088 L
358.4697 329.7432 L
361.8828 328.5459 363.5723 326.4834 363.5723 323.6221 c
363.5723 321.4424 362.6992 319.7588 360.957 318.4541 C
359.2148 317.1533 356.8652 316.4795 353.9414 316.4795 c
351.9121 316.4795 349.3154 316.8857 346.0977 317.7529 C
346.0977 321.3252 L
349.3018 319.8818 351.9541 319.1553 354.0703 319.1553 c
355.8555 319.1553 357.2793 319.5381 358.3428 320.2412 C
359.4063 320.9443 359.9355 321.8604 359.9355 323.0479 c
359.9355 323.9521 359.6113 324.6885 358.9785 325.2139 C
358.3496 325.7412 357.0586 326.3428 355.0898 327.0654 C
352.666 327.958 L
350.2568 328.8506 348.5635 329.7588 347.6289 330.7002 C
346.6943 331.6436 346.2266 332.8975 346.2266 334.4619 c
346.2266 336.5791 346.957 338.2119 348.3945 339.3721 C
349.832 340.5361 351.8477 341.1592 354.4531 341.1592 C
354.4531 341.1592 L
s
300.4385 340.6494 m
303.8809 340.6494 L
314.6592 323.5576 L
314.7217 323.5576 L
314.7217 340.585 L
317.6563 340.585 L
317.6563 317.0537 L
314.3389 317.0537 L
303.4355 334.2705 L
303.3711 334.2705 L
303.3711 317.0537 L
300.4385 317.0537 L
300.4385 340.6494 L
s
572.4883 340.6494 m
575.9326 340.6494 L
586.709 323.5576 L
586.7715 323.5576 L
586.7715 340.585 L
589.7061 340.585 L
589.7061 317.0537 L
586.3887 317.0537 L
575.4854 334.2705 L
575.4209 334.2705 L
575.4209 317.0537 L
572.4883 317.0537 L
572.4883 340.6494 L
s
119.0713 340.585 m
137.0547 340.585 L
137.0547 337.8447 L
122.2598 319.7314 L
137.1816 319.7314 L
137.1816 317.0518 L
118.1787 317.0518 L
118.1787 319.7314 L
132.9736 337.8447 L
119.0713 337.8447 L
119.0713 340.585 L
s
161.9893 340.585 m
165.0508 340.585 L
167.9189 321.0068 L
167.9834 321.0068 L
171.3633 335.6123 L
174.8701 335.6123 L
178.1855 321.2627 L
178.251 321.2627 L
181.2471 340.585 L
184.0537 340.585 L
180.1641 317.0518 L
176.21 317.0518 L
172.957 330.8291 L
169.7041 317.0518 L
165.4961 317.0518 L
161.9873 340.585 L
161.9912 340.585 L
161.9893 340.585 L
s
211.0293 340.585 m
226.9092 340.585 L
226.9092 337.8447 L
214.5996 337.8447 L
214.5996 330.7021 L
225.0605 330.7021 L
225.0605 328.0225 L
214.5996 328.0225 L
214.5996 319.7314 L
227.7373 319.7314 L
227.7373 317.0518 L
211.0293 317.0518 L
211.0293 340.585 L
s
255.542 340.585 m
271.8682 340.585 L
271.8682 337.8447 L
265.5547 337.8447 L
265.5547 319.7314 L
271.8682 319.7314 L
271.8682 317.0518 L
255.542 317.0518 L
255.542 319.7314 L
261.9199 319.7314 L
261.9199 337.8447 L
255.542 337.8447 L
255.542 340.585 L
s
391.5684 340.585 m
407.8936 340.585 L
407.8936 337.8447 L
401.5791 337.8447 L
401.5791 319.7314 L
407.8936 319.7314 L
407.8936 317.0518 L
391.5684 317.0518 L
391.5684 319.7314 L
397.9453 319.7314 L
397.9453 337.8447 L
391.5684 337.8447 L
391.5684 340.585 L
s
437.7373 340.585 m
453.6182 340.585 L
453.6182 337.8447 L
441.373 337.8447 L
441.373 330.7021 L
451.7686 330.7021 L
451.7686 328.0225 L
441.373 328.0225 L
441.373 319.7314 L
454.4453 319.7314 L
454.4453 317.0518 L
437.7373 317.0518 L
437.7373 340.585 L
s
528.4219 340.585 m
544.3008 340.585 L
544.3008 337.8447 L
532.0557 337.8447 L
532.0557 330.7021 L
542.4512 330.7021 L
542.4512 328.0225 L
532.0557 328.0225 L
532.0557 319.7314 L
545.1924 319.7314 L
545.1924 317.0518 L
528.4219 317.0518 L
528.4219 340.585 L
s
485.0566 296.1963 m
488.2451 296.1963 L
488.2451 293.0049 L
485.0566 293.0049 L
485.0566 296.1963 L
s
494.1133 296.1963 m
497.3018 296.1963 L
497.3018 293.0049 L
494.1133 293.0049 L
494.1133 296.1963 L
s
481.9326 290.0732 m
485.5039 290.0732 L
485.5039 275.7881 L
485.5039 273.2939 485.9268 271.4854 486.7139 270.3662 C
487.5039 269.2471 488.7793 268.71 490.541 268.71 c
492.3994 268.71 493.7393 269.2471 494.5576 270.3662 C
495.3789 271.4854 495.7705 273.3604 495.7705 275.9131 C
495.7705 290.0732 L
498.959 290.0732 L
498.959 276.4268 L
498.959 273.4775 498.5723 271.3955 497.876 270.1104 C
496.3955 267.3838 494.0039 265.9658 490.6055 265.9658 c
487.6582 265.9658 485.4482 266.7744 484.0371 268.3877 C
482.625 270.0049 481.9326 272.501 481.9326 275.8525 C
481.9326 290.0732 L
s
527.1475 289.626 m
530.5898 289.626 L
541.3682 272.4697 L
541.4307 272.4697 L
541.4307 289.499 L
544.3652 289.499 L
544.3652 265.9658 L
541.0479 265.9658 L
530.1426 283.249 L
530.0791 283.249 L
530.0791 265.9658 L
527.1475 265.9658 L
527.1475 289.626 L
527.1475 289.626 L
s
119.4541 289.499 m
123.0879 289.499 L
123.0879 277.958 L
132.9736 289.499 L
136.6074 289.499 L
127.1064 278.4014 L
138.3945 265.9658 L
134.0576 265.9658 L
123.0879 277.958 L
123.0879 265.9658 L
119.4541 265.9658 L
119.4541 289.499 L
s
256.3721 289.499 m
272.251 289.499 L
272.251 286.8213 L
259.9434 286.8213 L
259.9434 279.6768 L
270.4014 279.6768 L
270.4014 276.9365 L
259.9434 276.9365 L
259.9434 268.708 L
273.0801 268.708 L
273.0801 265.9658 L
256.3721 265.9658 L
256.3721 289.499 L
s
300.8838 289.499 m
317.209 289.499 L
317.209 286.8213 L
310.8965 286.8213 L
310.8965 268.708 L
317.209 268.708 L
317.209 265.9658 L
300.8838 265.9658 L
300.8838 268.708 L
307.2607 268.708 L
307.2607 286.8213 L
300.8838 286.8213 L
300.8838 289.499 L
s
391.1211 289.499 m
394.7568 289.499 L
394.7568 279.2314 L
404.7051 279.2314 L
404.7051 289.499 L
408.3389 289.499 L
408.3389 265.9658 L
404.7051 265.9658 L
404.7051 276.4893 L
394.7568 276.4893 L
394.7568 265.9658 L
391.1211 265.9658 L
391.1211 289.499 L
s
438.3115 289.499 m
455.0195 289.499 L
455.0195 286.8213 L
441.8828 286.8213 L
441.8828 278.7197 L
453.1055 278.7197 L
453.1055 275.9795 L
441.8828 275.9795 L
441.8828 265.9658 L
438.3115 265.9658 L
438.3115 289.499 L
s
574.3379 289.499 m
591.0459 289.499 L
591.0459 286.8213 L
577.9727 286.8213 L
577.9727 278.7197 L
589.1318 278.7197 L
589.1318 275.9795 L
577.9727 275.9795 L
577.9727 265.9658 L
574.3379 265.9658 L
574.3379 289.499 L
s
345.9063 238.5713 m
349.4775 238.5713 L
349.4775 224.2861 L
349.4775 221.7881 349.9004 219.9814 350.6904 218.8623 C
351.4785 217.7432 352.7549 217.2061 354.5156 217.2061 c
356.376 217.2061 357.7148 217.7432 358.5342 218.8623 C
359.3525 219.9814 359.7441 221.792 359.7441 224.3486 C
359.7441 238.5713 L
362.9336 238.5713 L
362.9336 224.9229 L
362.9336 221.9756 362.5459 219.8291 361.8496 218.5439 C
360.3701 215.8154 357.915 214.4639 354.5156 214.4639 c
351.5693 214.4639 349.4248 215.2705 348.0117 216.8857 C
346.5986 218.499 345.9063 220.9971 345.9063 224.3486 C
345.9063 238.5713 L
345.9063 238.5713 L
s
255.0947 238.5713 m
258.54 238.5713 L
269.3184 221.4795 L
269.3799 221.4795 L
269.3799 238.5088 L
272.3154 238.5088 L
272.3154 214.9736 L
268.998 214.9736 L
258.0928 232.1943 L
258.0303 232.1943 L
258.0303 214.9736 L
255.0947 214.9736 L
255.0947 238.5713 L
s
391.1211 238.5713 m
394.5654 238.5713 L
405.3418 221.4795 L
405.4063 221.4795 L
405.4063 238.5088 L
408.3389 238.5088 L
408.3389 214.9736 L
405.0234 214.9736 L
394.1182 232.1943 L
394.0537 232.1943 L
394.0537 214.9736 L
391.1211 214.9736 L
391.1211 238.5713 L
s
120.3457 238.5088 m
136.2246 238.5088 L
136.2246 235.7646 L
123.918 235.7646 L
123.918 228.6221 L
134.375 228.6221 L
134.375 225.9424 L
123.918 225.9424 L
123.918 217.6514 L
137.0547 217.6514 L
137.0547 214.9756 L
120.3457 214.9756 L
120.3457 238.5088 L
s
165.752 238.5088 m
169.3857 238.5088 L
169.3857 217.6514 L
182.0771 217.6514 L
182.0771 214.9756 L
165.752 214.9756 L
165.752 238.5088 L
s
211.6025 238.5088 m
228.3115 238.5088 L
228.3115 235.7646 L
215.1738 235.7646 L
215.1738 227.665 L
226.3994 227.665 L
226.3994 224.9854 L
215.1738 224.9854 L
215.1738 214.9756 L
211.6025 214.9756 L
211.6025 238.5088 L
s
301.7139 238.5088 m
317.5918 238.5088 L
317.5918 235.7646 L
305.2842 235.7646 L
305.2842 228.6221 L
315.7432 228.6221 L
315.7432 225.9424 L
305.2842 225.9424 L
305.2842 217.6514 L
318.4219 217.6514 L
318.4219 214.9756 L
301.7139 214.9756 L
301.7139 238.5088 L
s
434.0391 238.5088 m
437.8662 238.5088 L
445.3916 219.8213 L
453.0439 238.5088 L
456.1035 238.5088 L
446.793 214.9756 L
443.1592 214.9756 L
434.0391 238.5088 L
s
482.3154 238.5088 m
498.5771 238.5088 L
498.5771 235.7646 L
492.2637 235.7646 L
492.2637 217.6514 L
498.5771 217.6514 L
498.5771 214.9756 L
482.3154 214.9756 L
482.3154 217.6514 L
488.6279 217.6514 L
488.6279 235.7646 L
482.3154 235.7646 L
482.3154 238.5088 L
s
528.4219 238.5088 m
544.3008 238.5088 L
544.3008 235.7646 L
532.0557 235.7646 L
532.0557 228.6221 L
542.4512 228.6221 L
542.4512 225.9424 L
532.0557 225.9424 L
532.0557 217.6514 L
545.1924 217.6514 L
545.1924 214.9756 L
528.4219 214.9756 L
528.4219 238.5088 L
s
219.8936 188.083 m
220.3301 188.1162 220.7744 188.083 221.2334 188.083 c
223.3115 188.083 225.5566 187.7705 227.9287 187.0615 C
227.9287 183.7471 L
225.5078 184.8584 223.209 185.4033 221.1064 185.4033 c
218.6719 185.4033 216.6826 184.5088 215.1123 182.7256 C
213.5391 180.9385 212.751 178.6631 212.751 175.9014 c
212.751 173.1123 213.6563 170.8486 215.4297 169.0752 C
217.2041 167.3018 219.4658 166.3975 222.2549 166.3975 c
223.9414 166.3975 225.9619 166.8584 228.249 167.7354 C
228.249 164.7393 L
225.8252 163.8721 223.5645 163.3994 221.4248 163.3994 c
217.6816 163.3994 214.6563 164.5361 212.3682 166.7803 C
210.083 169.0244 208.9258 171.9873 208.9258 175.6436 c
208.9258 179.3506 210.0303 182.3369 212.3057 184.6377 C
214.2949 186.6494 216.8359 187.8291 219.8936 188.083 C
219.8936 188.083 L
s
581.1621 188.083 m
583.2754 188.083 585.6611 187.7451 588.3047 186.9971 C
588.3047 183.874 L
585.6504 184.8975 583.291 185.4033 581.2236 185.4033 c
577.96 185.4033 576.3779 184.2881 576.3779 182.0869 c
576.3779 181.1943 576.6602 180.4619 577.2705 179.9189 C
577.8818 179.374 578.999 178.835 580.6504 178.2607 C
582.9463 177.4307 L
585.1787 176.665 L
588.5889 175.4658 590.2803 173.4678 590.2803 170.6064 c
590.2803 168.4307 589.4082 166.6787 587.666 165.3779 C
585.9229 164.0732 583.5732 163.3994 580.6504 163.3994 c
578.6211 163.3994 576.0234 163.8721 572.8066 164.7393 C
572.8066 168.3096 L
576.0107 166.8682 578.6631 166.1436 580.7793 166.1436 c
582.5635 166.1436 583.9873 166.5244 585.0508 167.2275 C
586.1143 167.9287 586.6445 168.8467 586.6445 170.0322 c
586.6445 170.9385 586.3174 171.6748 585.6875 172.2021 C
585.0576 172.7275 583.7676 173.3311 581.7979 174.0518 C
579.375 174.9443 L
576.9648 175.835 575.3359 176.7432 574.4023 177.6865 C
573.4648 178.6279 572.998 179.8838 572.998 181.4502 c
572.998 183.5635 573.665 185.1963 575.1025 186.3604 C
576.54 187.5225 578.5566 188.0811 581.1621 188.083 C
581.1621 188.083 L
s
481.8037 187.6357 m
485.248 187.6357 L
496.0264 170.4795 L
496.0889 170.4795 L
496.0889 187.5088 L
499.0215 187.5088 L
499.0215 163.9736 L
495.7061 163.9736 L
484.8008 181.2588 L
484.7383 181.2588 L
484.7383 163.9736 L
481.8057 163.9736 L
481.8057 187.6357 L
481.8018 187.6357 L
481.8037 187.6357 L
s
116.6475 187.5088 m
119.707 187.5088 L
122.5781 167.9932 L
122.6426 167.9932 L
126.0205 182.5342 L
129.5293 182.5342 L
132.8447 168.1846 L
132.9092 168.1846 L
135.9063 187.5088 L
138.7129 187.5088 L
134.8213 163.9756 L
130.8662 163.9756 L
127.6152 177.8135 L
124.3623 163.9756 L
120.1543 163.9756 L
116.6455 187.5088 L
116.6494 187.5088 L
116.6475 187.5088 L
s
255.0947 187.5088 m
258.7314 187.5088 L
258.7314 177.2393 L
268.6797 177.2393 L
268.6797 187.5088 L
272.3154 187.5088 L
272.3154 163.9756 L
268.6797 163.9756 L
268.6797 174.5635 L
258.7314 174.5635 L
258.7314 163.9756 L
255.0947 163.9756 L
255.0947 187.5088 L
s
298.207 187.5088 m
319.8877 187.5088 L
319.8877 184.8291 L
310.8965 184.8291 L
310.8965 163.9756 L
307.2607 163.9756 L
307.2607 184.8291 L
298.207 184.8291 L
298.207 187.5088 L
s
345.7793 187.5088 m
363.7637 187.5088 L
363.7637 184.8291 L
349.0322 166.7178 L
363.8896 166.7178 L
363.8896 163.9756 L
344.8877 163.9756 L
344.8877 166.7178 L
359.6826 184.8291 L
345.7793 184.8291 L
345.7793 187.5088 L
s
392.3955 187.5088 m
408.2764 187.5088 L
408.2764 184.8291 L
396.0322 184.8291 L
396.0322 177.6865 L
406.4248 177.6865 L
406.4248 174.9463 L
396.0322 174.9463 L
396.0322 166.7178 L
409.1045 166.7178 L
409.1045 163.9756 L
392.3955 163.9756 L
392.3955 187.5088 L
s
436.4629 187.5088 m
440.0977 187.5088 L
440.0977 177.2393 L
450.0469 177.2393 L
450.0469 187.5088 L
453.6797 187.5088 L
453.6797 163.9756 L
450.0469 163.9756 L
450.0469 174.5635 L
440.0977 174.5635 L
440.0977 163.9756 L
436.4629 163.9756 L
436.4629 187.5088 L
s
173.0859 137.0654 m
175.2002 137.0654 177.5879 136.665 180.2285 135.917 C
180.2285 132.7939 L
177.5742 133.8213 175.2158 134.3252 173.1484 134.3252 c
169.8838 134.3252 168.2393 133.2725 168.2393 131.0713 c
168.2393 130.1787 168.585 129.4463 169.1963 128.9014 C
169.8057 128.3584 170.9248 127.7568 172.5762 127.1787 C
174.8701 126.417 L
177.1025 125.6514 L
180.5156 124.4521 182.2041 122.3896 182.2041 119.5264 c
182.2041 117.3506 181.332 115.665 179.5898 114.3604 C
177.8477 113.0596 175.498 112.3838 172.5762 112.3838 c
170.5449 112.3838 167.9482 112.792 164.7305 113.6592 C
164.7305 117.2959 L
167.9346 115.8506 170.5869 115.126 172.7031 115.126 c
174.4873 115.126 175.9121 115.4443 176.9756 116.1475 C
178.0391 116.8506 178.5684 117.8311 178.5684 119.0186 c
178.5684 119.9209 178.2441 120.5947 177.6143 121.1221 C
176.9844 121.6475 175.6924 122.3135 173.7217 123.0342 C
171.2998 123.8643 L
168.8916 124.7568 167.1982 125.7295 166.2617 126.6689 C
165.3271 127.6104 164.8594 128.8037 164.8594 130.3701 c
164.8594 132.4834 165.5898 134.1826 167.0273 135.3428 C
168.4648 136.5049 170.4805 137.0654 173.0859 137.0654 C
173.0859 137.0654 L
s
266.5742 137.0654 m
268.6523 137.0654 270.8975 136.6924 273.2715 135.9814 C
273.2715 132.665 L
270.8486 133.7783 268.6143 134.3252 266.5117 134.3252 c
264.0781 134.3252 262.0244 133.4287 260.4531 131.6455 C
258.8818 129.8584 258.0928 127.585 258.0928 124.8213 c
258.0928 122.0322 258.998 119.7705 260.7715 117.9971 C
262.5449 116.2217 264.8076 115.3174 267.5957 115.3174 c
269.2822 115.3174 271.3027 115.7764 273.5908 116.6572 C
273.5908 113.6592 L
271.1689 112.792 268.9063 112.3838 266.7656 112.3838 c
263.0254 112.3838 259.9971 113.5186 257.7119 115.7646 C
255.4238 118.0088 254.2676 120.9736 254.2676 124.6299 c
254.2676 128.335 255.373 131.3213 257.6475 133.6201 C
259.9219 135.9209 262.9053 137.0654 266.5742 137.0654 C
266.5742 137.0654 L
s
354.4531 137.0654 m
356.5674 137.0654 358.9521 136.665 361.5957 135.917 C
361.5957 132.7939 L
358.9414 133.8213 356.583 134.3252 354.5156 134.3252 c
351.251 134.3252 349.6045 133.2725 349.6064 131.0713 C
349.6064 130.1787 349.9512 129.4463 350.5615 128.9014 C
351.1738 128.3584 352.29 127.7568 353.9414 127.1787 C
356.2383 126.417 L
358.4697 125.6514 L
361.8828 124.4521 363.5723 122.3896 363.5723 119.5264 c
363.5723 117.3506 362.6992 115.665 360.957 114.3604 C
359.2148 113.0596 356.8652 112.3838 353.9414 112.3838 c
351.9121 112.3838 349.3154 112.792 346.0977 113.6592 C
346.0977 117.2959 L
349.3018 115.8506 351.9541 115.126 354.0703 115.126 c
355.8555 115.126 357.2793 115.4443 358.3428 116.1475 C
359.4063 116.8506 359.9355 117.8311 359.9355 119.0186 c
359.9355 119.9209 359.6113 120.5947 358.9785 121.1221 C
358.3496 121.6475 357.0586 122.3135 355.0898 123.0342 C
352.666 123.8643 L
350.2568 124.7568 348.5635 125.7295 347.6289 126.6689 C
346.6943 127.6104 346.2266 128.8037 346.2266 130.3701 c
346.2266 132.4834 346.957 134.1826 348.3945 135.3428 C
349.832 136.5049 351.8477 137.0654 354.4531 137.0654 C
354.4531 137.0654 L
s
211.0293 136.4912 m
226.9102 136.4912 L
226.9102 133.751 L
214.5996 133.751 L
214.5996 126.6689 L
225.0605 126.6689 L
225.0605 123.9287 L
214.5996 123.9287 L
214.5996 115.7002 L
227.7373 115.7002 L
227.7373 112.958 L
211.0293 112.958 L
211.0293 136.4912 L
s
300.4385 136.4912 m
304.0723 136.4912 L
304.0723 126.2256 L
314.0205 126.2256 L
314.0205 136.4912 L
317.6563 136.4912 L
317.6563 112.958 L
314.0205 112.958 L
314.0205 123.4814 L
304.0723 123.4814 L
304.0723 112.958 L
300.4385 112.958 L
300.4385 136.4912 L
s
392.9697 136.4912 m
409.6787 136.4912 L
409.6787 133.751 L
396.542 133.751 L
396.542 125.6514 L
407.7646 125.6514 L
407.7646 122.9717 L
396.542 122.9717 L
396.542 112.958 L
392.9697 112.958 L
392.9697 136.4912 L
s
435.5059 136.4912 m
439.8418 136.4912 L
445.0088 122.0146 L
445.0713 122.0146 L
450.1094 136.4912 L
454.6377 136.4912 L
454.6377 112.958 L
451.7041 112.958 L
451.7041 133.1768 L
451.6396 133.1768 L
446.3486 117.9307 L
443.3516 117.9307 L
438.0576 132.7295 L
437.9932 132.7295 L
437.9932 112.958 L
435.5078 112.958 L
435.5078 136.4912 L
435.5078 136.4912 L
435.5059 136.4912 L
s
481.9326 136.4912 m
485.5039 136.4912 L
485.5039 122.2061 L
485.5039 119.7119 485.9268 117.9033 486.7139 116.7861 C
487.5039 115.667 488.7793 115.126 490.542 115.126 c
492.3994 115.126 493.7393 115.667 494.5576 116.7861 C
495.3789 117.9033 495.7705 119.7139 495.7705 122.2705 C
495.7705 136.4912 L
498.959 136.4912 L
498.959 122.8428 L
498.959 119.8975 498.5723 117.749 497.876 116.4658 C
496.3955 113.7393 494.0039 112.3838 490.6055 112.3838 c
487.6582 112.3838 485.4482 113.1943 484.0371 114.8076 C
482.625 116.4209 481.9326 118.9189 481.9326 122.2705 C
481.9326 136.4912 L
s
527.1475 136.4912 m
530.7813 136.4912 L
530.7813 126.2256 L
540.7295 126.2256 L
540.7295 136.4912 L
544.3652 136.4912 L
544.3652 112.958 L
540.7295 112.958 L
540.7295 123.4814 L
530.7813 123.4814 L
530.7813 112.958 L
527.1475 112.958 L
527.1475 136.4912 L
s
*u
1 D
445.0654 392.7705 m
441.96 392.7705 439.5068 391.6777 437.666 389.4458 C
435.8262 387.2139 434.9404 384.1992 434.9404 380.4458 c
434.9404 378.104 435.2656 376.0444 435.9658 374.2959 C
438.9912 377.3208 L
438.8408 378.2695 438.7656 379.3086 438.7656 380.4458 c
438.7656 383.5137 439.3213 385.8521 440.416 387.5205 C
441.5107 389.1919 443.0361 390.0708 445.0654 390.0708 c
446.9482 390.0708 448.4551 389.312 449.541 387.8706 C
451.8408 390.1709 L
450.0762 391.8999 447.8037 392.7705 445.0654 392.7705 C
445.0654 392.7705 L
s
454.2412 386.5459 m
451.2158 383.5205 L
451.3623 382.5913 451.4404 381.5674 451.4404 380.4458 c
451.4404 377.3633 450.8926 374.9644 449.791 373.2959 C
448.6914 371.6245 447.0977 370.8208 445.0654 370.8208 c
443.1816 370.8208 441.7402 371.5342 440.666 372.9707 C
438.3906 370.6958 L
438.3945 370.6919 438.3867 370.6748 438.3906 370.6709 C
440.1357 368.9565 442.3477 368.0708 445.0654 368.0708 c
448.1719 368.0708 450.7002 369.2139 452.541 371.4458 C
454.3828 373.6777 455.2656 376.6782 455.2656 380.4458 c
455.2656 382.7686 454.9355 384.7988 454.2412 386.5459 C
454.2412 386.5459 L
s
*U
0 D
119.0713 391.6104 m
122.7051 391.6104 L
122.7051 381.3418 L
132.6533 381.3418 L
132.6533 391.6104 L
136.2891 391.6104 L
136.2891 368.0757 L
132.6533 368.0757 L
132.6533 378.6001 L
122.7051 378.6001 L
122.7051 368.0757 L
119.0713 368.0757 L
119.0713 391.6104 L
s
211.0938 391.6104 m
214.7295 391.6104 L
214.7295 370.8188 L
227.4189 370.8188 L
227.4189 368.0757 L
211.0938 368.0757 L
211.0938 391.6104 L
211.0938 391.6104 L
s
1 D
255.791 391.6206 m
255.791 375.0708 L
259.4414 375.0708 L
259.4414 388.9209 L
261.0908 388.9209 L
263.793 388.9209 265.625 388.6831 266.5664 388.2207 C
267.5078 387.7554 267.9658 386.8784 267.9658 385.5459 c
267.9658 383.4761 266.5283 382.188 263.6914 381.6958 C
263.6914 378.9209 L
264.8564 378.7056 265.8555 378.3511 266.6914 377.8457 C
268.1641 376.9507 268.9414 375.7861 268.9414 374.2705 c
268.9414 372.96 268.4902 372.0103 267.5908 371.5205 C
266.6924 371.0308 265.0771 370.8208 262.6914 370.8208 C
259.4414 370.8208 L
255.791 370.8208 L
255.791 368.0708 L
262.8662 368.0708 L
265.2275 368.0708 266.9775 368.2456 268.041 368.4707 C
269.1064 368.6973 270.0107 369.0996 270.8408 369.7959 C
272.125 370.8481 272.7656 372.3374 272.7656 374.1958 c
272.7656 377.4487 270.6318 379.5034 266.2656 380.3955 C
267.9658 380.8252 269.2686 381.5352 270.2158 382.5459 C
271.1641 383.5532 271.6162 384.8003 271.6162 386.1958 c
271.6162 389.8379 268.8936 391.6206 263.3906 391.6206 C
255.791 391.6206 L
255.791 391.6206 L
s
0 D
345.7793 391.6104 m
363.7637 391.6104 L
363.7637 388.9316 L
349.0322 370.8188 L
363.8896 370.8188 L
363.8896 368.0757 L
344.8877 368.0757 L
344.8877 370.8188 L
359.6826 388.9316 L
345.7793 388.9316 L
345.7793 391.6104 L
s
388.6973 391.6104 m
391.8213 391.6104 L
394.6924 372.0938 L
398.1367 386.6353 L
401.5791 386.6353 L
404.959 372.2852 L
408.0205 391.6104 L
410.7617 391.6104 L
406.8721 368.0757 L
402.9834 368.0757 L
399.7295 381.916 L
399.668 381.916 L
396.4141 368.0757 L
392.207 368.0757 L
388.6973 391.6104 L
s
483.208 391.6104 m
486.7793 391.6104 L
486.7793 370.8188 L
499.4688 370.8188 L
499.4688 368.0757 L
483.208 368.0757 L
483.208 391.6104 L
s
528.9961 391.6104 m
545.7051 391.6104 L
545.7051 388.9316 L
532.6299 388.9316 L
532.6299 380.832 L
543.791 380.832 L
543.791 378.0884 L
532.6299 378.0884 L
532.6299 368.0757 L
528.9961 368.0757 L
528.9961 391.6104 L
s
1 D
573.9658 391.6206 m
573.9658 383.9956 L
577.5908 383.9956 L
577.5908 388.9209 L
581.166 388.9209 L
583.3174 388.9209 584.8926 388.5938 585.8164 387.9707 C
586.7393 387.3481 587.2158 386.2876 587.2158 384.8457 c
587.2158 381.4209 584.707 379.7456 579.8164 379.7456 C
577.5908 379.7456 L
573.9658 379.7456 L
573.9658 368.0708 L
577.5908 368.0708 L
577.5908 376.9956 L
580.2656 376.9956 L
583.6299 376.9956 586.252 377.7144 588.166 379.1206 C
590.0791 380.5269 591.041 382.501 591.041 384.9707 c
591.041 387.9053 589.8379 389.8926 587.4658 390.9209 C
586.3047 391.4077 584.3438 391.6206 581.6162 391.6206 C
573.9658 391.6206 L
573.9658 391.6206 L
s
0 D
301.541 391.8184 m
304.9922 391.8184 L
310.8916 382.9922 L
316.8232 391.8184 L
320.2744 391.8184 L
312.6416 380.416 L
320.7832 368.0757 L
317.332 368.0757 L
310.6533 378.1738 L
303.9268 368.0757 L
300.46 368.0757 L
308.9355 380.75 L
301.541 391.8184 L
S
1 D
261.916 442.6206 m
252.6162 419.0957 L
255.7412 419.0957 L
263.3164 438.9209 L
267.666 427.6958 L
263.5908 427.6958 L
262.541 424.9707 L
268.7412 424.9707 L
270.9658 419.0957 L
274.791 419.0957 L
265.4912 442.6206 L
261.916 442.6206 L
s
171.2158 391.5957 m
161.916 368.0708 L
165.041 368.0708 L
172.6162 387.896 L
176.9658 376.6709 L
172.8906 376.6709 L
171.8408 373.9458 L
178.041 373.9458 L
180.2656 368.0708 L
184.0908 368.0708 L
174.791 391.5957 L
171.2158 391.5957 L
s
171.2158 187.4951 m
161.916 163.9717 L
165.041 163.9717 L
172.6162 183.7959 L
176.9658 172.5713 L
172.8906 172.5713 L
171.8408 169.8467 L
178.041 169.8467 L
180.2656 163.9717 L
184.0908 163.9717 L
174.791 187.4951 L
171.2158 187.4951 L
s
437.166 493.646 m
437.166 486.9458 L
440.8154 486.9458 L
440.8154 490.9707 L
443.041 490.9707 L
445.3418 490.9707 446.9092 490.7207 447.7656 490.2207 C
448.623 489.7178 449.041 488.7534 449.041 487.396 c
449.041 485.9404 448.5029 484.8276 447.3662 483.9707 C
446.2285 483.1138 444.6602 482.6958 442.7158 482.6958 C
441.4492 482.6958 440.8154 482.6958 v
439.5996 482.6958 437.166 482.6958 Y
437.166 470.1206 L
440.8154 470.1206 L
440.8154 479.9458 L
444.0654 479.9458 L
451.5156 470.1206 L
455.916 470.1206 L
447.5654 480.8457 L
449.4863 481.7891 450.8223 482.8008 451.6406 483.896 C
452.4619 484.9907 452.916 486.3306 452.916 487.9707 c
452.916 490.3535 451.7646 492.0796 449.4912 493.021 C
448.4277 493.4727 446.5557 493.646 443.8164 493.646 C
437.166 493.646 L
s
482.5156 442.6206 m
482.5156 435.9209 L
486.166 435.9209 L
486.166 439.9458 L
488.3906 439.9458 L
490.6914 439.9458 492.2588 439.6958 493.1162 439.1958 C
493.9727 438.6929 494.3906 437.728 494.3906 436.3706 c
494.3906 434.9155 493.8525 433.8022 492.7158 432.9458 C
491.5791 432.0889 490.0107 431.6709 488.0654 431.6709 C
486.7988 431.6709 486.166 431.6709 v
484.9492 431.6709 482.5156 431.6709 Y
482.5156 419.0957 L
486.166 419.0957 L
486.166 428.9209 L
489.416 428.9209 L
496.8662 419.0957 L
501.2656 419.0957 L
492.916 429.8208 L
494.8359 430.7642 496.1719 431.7759 496.9912 432.8706 C
497.8115 433.9653 498.2656 435.3057 498.2656 436.9458 c
498.2656 439.3286 497.1152 441.0547 494.8408 441.9956 C
493.7773 442.4473 491.9053 442.6206 489.166 442.6206 C
482.5156 442.6206 L
s
482.5156 340.5947 m
482.5156 324.0459 L
486.166 324.0459 L
486.166 337.8955 L
487.8154 337.8955 L
490.5176 337.8955 492.3496 337.6572 493.291 337.1963 C
494.2324 336.7295 494.6904 335.8525 494.6904 334.5205 c
494.6904 332.4502 493.2529 331.1631 490.416 330.6709 C
490.416 327.8955 L
491.5811 327.6807 492.5801 327.3252 493.416 326.8213 C
494.8887 325.9248 495.666 324.7607 495.666 323.2451 c
495.666 321.9346 495.2148 320.9854 494.3154 320.4951 C
493.417 320.0049 491.8018 319.7959 489.416 319.7959 C
486.166 319.7959 L
482.5156 319.7959 L
482.5156 317.0459 L
489.5908 317.0459 L
491.9521 317.0459 493.7021 317.2197 494.7656 317.4463 C
495.832 317.6729 496.7363 318.0752 497.5654 318.7705 C
498.8496 319.8232 499.4912 321.3115 499.4912 323.1709 c
499.4912 326.4229 497.3564 328.4775 492.9912 329.3701 C
494.6904 329.7998 495.9932 330.5107 496.9404 331.5205 C
497.8887 332.5283 498.3408 333.7744 498.3408 335.1709 c
498.3408 338.8135 495.6182 340.5947 490.1162 340.5947 C
482.5156 340.5947 L
482.5156 340.5947 L
s
164.0908 289.4951 m
164.0908 272.9717 L
167.7412 272.9717 L
167.7412 286.8213 L
170.4912 286.8213 L
173.5703 286.8213 175.7969 286.083 177.1162 284.6709 C
178.4385 283.2568 179.0908 280.9229 179.0908 277.6455 c
179.0908 274.417 178.3779 272.1143 176.916 270.7451 C
175.4541 269.376 172.9629 268.7217 169.5156 268.7217 C
168.333 268.7217 167.7412 268.7217 v
166.5244 268.7217 164.0908 268.7217 Y
164.0908 265.9717 L
170.2158 265.9717 L
172.8076 265.9717 174.9092 266.29 176.4658 266.8701 C
178.0264 267.4521 179.3027 268.3877 180.3662 269.7451 C
182.0664 271.8994 182.916 274.7373 182.916 278.2217 c
182.916 285.7549 179.0176 289.4951 171.1914 289.4951 C
164.0908 289.4951 L
s
210.4658 289.4951 m
210.4658 282.7959 L
214.1162 282.7959 L
214.1162 286.8213 L
216.3408 286.8213 L
218.6416 286.8213 220.209 286.5713 221.0664 286.0713 C
221.9229 285.5674 222.3408 284.6025 222.3408 283.2451 c
222.3408 281.79 221.8027 280.6768 220.666 279.8213 C
219.5293 278.9639 217.9609 278.5459 216.0156 278.5459 C
214.749 278.5459 214.1162 278.5459 v
212.8994 278.5459 210.4658 278.5459 Y
210.4658 265.9717 L
214.1162 265.9717 L
214.1162 275.7959 L
217.3662 275.7959 L
224.8164 265.9717 L
229.2158 265.9717 L
220.8662 276.6963 L
222.7861 277.6396 224.1221 278.6514 224.9414 279.7451 C
225.7617 280.8408 226.2158 282.1807 226.2158 283.8213 c
226.2158 286.2041 225.0654 287.9287 222.791 288.8701 C
221.7275 289.3213 219.8555 289.4951 217.1162 289.4951 C
210.4658 289.4951 L
s
346.4912 289.4951 m
346.4912 282.7959 L
350.1406 282.7959 L
350.1406 286.8213 L
352.3662 286.8213 L
354.667 286.8213 356.2344 286.5713 357.0908 286.0713 C
357.9473 285.5674 358.3662 284.6025 358.3662 283.2451 c
358.3662 281.79 357.8281 280.6768 356.6904 279.8213 C
355.5537 278.9639 353.9854 278.5459 352.041 278.5459 C
350.7744 278.5459 350.1406 278.5459 v
348.9238 278.5459 346.4912 278.5459 Y
346.4912 265.9717 L
350.1406 265.9717 L
350.1406 275.7959 L
353.3906 275.7959 L
360.8408 265.9717 L
365.2412 265.9717 L
356.8906 276.6963 L
358.8115 277.6396 360.1465 278.6514 360.9658 279.7451 C
361.7871 280.8408 362.2412 282.1807 362.2412 283.8213 c
362.2412 286.2041 361.0898 287.9287 358.8154 288.8701 C
357.752 289.3213 355.8799 289.4951 353.1406 289.4951 C
346.4912 289.4951 L
s
573.1162 238.458 m
573.1162 231.7588 L
576.7656 231.7588 L
576.7656 235.7842 L
578.9912 235.7842 L
581.292 235.7842 582.8594 235.5342 583.7158 235.0342 C
584.5723 234.5303 584.9912 233.5654 584.9912 232.208 c
584.9912 230.7529 584.4531 229.6396 583.3154 228.7842 C
582.1787 227.9268 580.6104 227.5088 578.666 227.5088 C
577.3994 227.5088 576.7656 227.5088 v
575.5488 227.5088 573.1162 227.5088 Y
573.1162 214.9326 L
576.7656 214.9326 L
576.7656 224.7588 L
580.0156 224.7588 L
587.4658 214.9326 L
591.8662 214.9326 L
583.5156 225.6592 L
585.4365 226.6006 586.7715 227.6143 587.5908 228.708 C
588.4121 229.8037 588.8662 231.1436 588.8662 232.7842 c
588.8662 235.165 587.7148 236.8916 585.4414 237.833 C
584.377 238.2842 582.5049 238.458 579.7656 238.458 C
573.1162 238.458 L
s
527.8408 187.4951 m
527.8408 180.7959 L
531.4912 180.7959 L
531.4912 184.8213 L
533.7158 184.8213 L
536.0166 184.8213 537.584 184.5713 538.4404 184.0713 C
539.2979 183.5674 539.7158 182.6025 539.7158 181.2451 c
539.7158 179.79 539.1777 178.6768 538.041 177.8213 C
536.9043 176.9639 535.3359 176.5459 533.3906 176.5459 C
532.124 176.5459 531.4912 176.5459 v
530.2744 176.5459 527.8408 176.5459 Y
527.8408 163.9717 L
531.4912 163.9717 L
531.4912 173.7959 L
534.7412 173.7959 L
542.1904 163.9717 L
546.5908 163.9717 L
538.2412 174.6963 L
540.1611 175.6396 541.4971 176.6514 542.3164 177.7451 C
543.1367 178.8408 543.5908 180.1807 543.5908 181.8213 c
543.5908 184.2041 542.4395 185.9287 540.166 186.8701 C
539.1025 187.3232 537.2305 187.4951 534.4912 187.4951 C
527.8408 187.4951 L
s
573.1162 136.4717 m
573.1162 129.7705 L
576.7656 129.7705 L
576.7656 133.7959 L
578.9912 133.7959 L
581.292 133.7959 582.8594 133.5459 583.7158 133.0459 C
584.5723 132.542 584.9912 131.5791 584.9912 130.2217 c
584.9912 128.7646 584.4531 127.6533 583.3154 126.7959 C
582.1787 125.9385 580.6104 125.5205 578.666 125.5205 C
577.3994 125.5205 576.7656 125.5205 v
575.5488 125.5205 573.1162 125.5205 Y
573.1162 112.9463 L
576.7656 112.9463 L
576.7656 122.7705 L
580.0156 122.7705 L
587.4658 112.9463 L
591.8662 112.9463 L
583.5156 123.6709 L
585.4365 124.6143 586.7715 125.626 587.5908 126.7197 C
588.4121 127.8154 588.8662 129.1553 588.8662 130.7959 c
588.8662 133.1787 587.7148 134.9053 585.4414 135.8447 C
584.377 136.2979 582.5049 136.4697 579.7656 136.4697 C
573.1162 136.4717 L
s
119.7656 136.4951 m
119.7656 119.9463 L
123.416 119.9463 L
123.416 133.7959 L
125.0664 133.7959 L
127.7676 133.7959 129.5996 133.5576 130.541 133.0967 C
131.4824 132.6299 131.9414 131.7529 131.9414 130.4209 c
131.9414 128.3506 130.5029 127.0635 127.666 126.5713 C
127.666 123.7959 L
128.8311 123.5811 129.8301 123.2256 130.666 122.7217 C
132.1387 121.8252 132.916 120.6611 132.916 119.1455 c
132.916 117.835 132.4648 116.8857 131.5664 116.3955 C
130.667 115.9053 129.0518 115.6963 126.666 115.6963 C
123.416 115.6963 L
119.7656 115.6963 L
119.7656 112.9463 L
126.8408 112.9463 L
129.2021 112.9463 130.9521 113.1201 132.0156 113.3467 C
133.082 113.5732 133.9863 113.9756 134.8164 114.6709 C
136.0996 115.7236 136.7412 117.2119 136.7412 119.0713 c
136.7412 122.3232 134.6064 124.3779 130.2412 125.2705 C
131.9404 125.7002 133.2432 126.4111 134.1914 127.4209 C
135.1387 128.4287 135.5908 129.6748 135.5908 131.0713 c
135.5908 134.7139 132.8691 136.4951 127.3662 136.4951 C
119.7656 136.4951 L
119.7656 136.4951 L
s
0 D
85.0391 82.2061 m
85.0391 80.6396 83.7705 79.3701 82.2051 79.3701 c
80.6387 79.3701 79.3701 80.6396 79.3701 82.2061 c
79.3701 83.7705 80.6387 85.04 82.2051 85.04 c
83.7705 85.04 85.0391 83.7705 85.0391 82.2061 c
s
629.291 82.2061 m
629.291 80.6396 628.0215 79.3701 626.4551 79.3701 c
624.8906 79.3701 623.6211 80.6396 623.6211 82.2061 c
623.6211 83.7705 624.8906 85.04 626.4551 85.04 c
628.0215 85.04 629.291 83.7705 629.291 82.2061 c
s
629.291 626.457 m
629.291 624.8916 628.0215 623.6221 626.4551 623.6221 c
624.8906 623.6221 623.6211 624.8916 623.6211 626.457 c
623.6211 628.0225 624.8906 629.292 626.4551 629.292 c
628.0215 629.292 629.291 628.0225 629.291 626.457 c
s
85.0391 626.457 m
85.0391 624.8916 83.7705 623.6221 82.2051 623.6221 c
80.6387 623.6221 79.3701 624.8916 79.3701 626.457 c
79.3701 628.0225 80.6387 629.292 82.2051 629.292 c
83.7705 629.292 85.0391 628.0225 85.0391 626.457 c
s
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
